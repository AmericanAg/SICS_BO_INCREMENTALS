/****** Object:  StoredProcedure [dbo].[BOAC004]    Script Date: 4/24/2023 3:16:35 PM ******/
DROP PROCEDURE [dbo].[BOAC004]
GO

/****** Object:  StoredProcedure [dbo].[BOAC004]    Script Date: 4/24/2023 3:16:35 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


-- search on MMH to find modified code for AAIC

CREATE PROCEDURE [dbo].[BOAC004]
(@METHOD VARCHAR(1) = '', @LOGLEVEL INT = 1)
AS

/* VERSION 4.6.1 */

DECLARE @V_BATCH_NO INT 
DECLARE @V_IS_INITIAL_LOAD INT /* 0 = FALSE 1 = TRUE */
DECLARE @V_UWY INT
DECLARE @V_LOGLEVEL INT

SET @V_LOGLEVEL = @LOGLEVEL

/* LOGLEVEL 0 NO LOGGING */
/* LOGLEVEL 1 BASIC */
/* LOGLEVEL 2 DETAILED */
/* LOGLEVEL 3 CHECKPOINTS FOR PERFORMANCE CHECK */
/* LOGLEVEL 4 DEBUG */

IF @V_LOGLEVEL > 0 
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
SELECT GETDATE(),'BOAC004','SCRIPT START','4.6.1 INCREMENTAL',CURRENT_BATCH 
FROM BOAC_STATUS

IF @V_LOGLEVEL > 0 
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
SELECT GETDATE(),'BOAC004','METHOD = ' + @METHOD,'',CURRENT_BATCH 
FROM BOAC_STATUS

IF @METHOD = '' 
BEGIN

INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
SELECT GETDATE(),'BOAC004','NO METHOD SELECTED','',CURRENT_BATCH 
FROM BOAC_STATUS

RETURN /* NO METHOD SELECTED */
END

SET @V_IS_INITIAL_LOAD = 0

IF @METHOD = 'A'
BEGIN
PRINT ' '
/* INCLUDE PENDING: DELETE FROM BOAC_DUP_WORKSHEET WHERE FRK_STATUS <> 'C'; INCLUDE PENDING END */
END

UPDATE BOAC_STATUS SET CURRENT_BATCH = COMPLETED_BATCH + 1, COMPLETED_BATCH = 0
WHERE CURRENT_BATCH = COMPLETED_BATCH;

/* CHECK IF THIS IS THE INTIAL LOAD */

SET @V_BATCH_NO = (SELECT CURRENT_BATCH FROM BOAC_STATUS)

IF @V_BATCH_NO = 1 
SET @V_IS_INITIAL_LOAD = 1
ELSE SET @V_IS_INITIAL_LOAD = 0

/* END CHECK */

/* STEP 2 */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','2',NULL)

IF @METHOD = 'B'
BEGIN

TRUNCATE TABLE BOAC_DUP_WORKSHEET

IF (DBO.BO_CHKINDX('IND_BOAC_WORKSHEET','BOAC_DUP_WORKSHEET') = 'Y' AND @V_IS_INITIAL_LOAD = 1)
DROP INDEX BOAC_DUP_WORKSHEET.IND_BOAC_WORKSHEET

INSERT INTO BOAC_DUP_WORKSHEET (OBJECT_ID, IDENTIFIER, 
/* INCLUDE PENDING: FRK_STATUS, INCLUDE PENDING END */
DM_BATCH_NUMBER)
SELECT W.OBJECT_ID, W.IDENTIFIER, 
/* INCLUDE PENDING: SUBSTRING(FRK_STATUS,1,7), CASE RTRIM(W.FRK_STATUS) WHEN 'C' THEN INCLUDE PENDING END */
S.CURRENT_BATCH 
/* INCLUDE PENDING: ELSE - S.CURRENT_BATCH END INCLUDE PENDING END */
FROM AC_WORKSHEET W, BOAC_STATUS S 
WHERE (COALESCE(DM_BATCH_NUMBER,0) = 0 AND FRK_STATUS = 'C')
/* INCLUDE PENDING: OR (DM_BATCH_NUMBER <= 0 AND FRK_STATUS <> 'I') INCLUDE PENDING END */

END

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','2_1',NULL)


IF @METHOD = 'A'
INSERT INTO BOAC_DUP_WORKSHEET 
(OBJECT_ID,IDENTIFIER,DM_TRANS_DATE, CLOSED_TIMESTAMP,
/* INCLUDE PENDING: FRK_STATUS, INCLUDE PENDING END */
DM_BATCH_NUMBER)
SELECT W.OBJECT_ID, W.IDENTIFIER, GETDATE(), W.CLOSED_TIMESTAMP,
/* INCLUDE PENDING: SUBSTRING(FRK_STATUS,1,7), CASE RTRIM(W.FRK_STATUS) WHEN 'C' THEN INCLUDE PENDING END */
S.CURRENT_BATCH
/* INCLUDE PENDING: ELSE - S.CURRENT_BATCH END INCLUDE PENDING END */
FROM AC_WORKSHEET W, BOAC_STATUS S 
WHERE 
/* INCLUDE PENDING: ( INCLUDE PENDING END */
W.FRK_STATUS = 'C' 
/* INCLUDE PENDING: OR FRK_STATUS <> 'I') INCLUDE PENDING END */
AND NOT EXISTS (SELECT * FROM BOAC_DUP_WORKSHEET T WHERE W.OBJECT_ID = T.OBJECT_ID )
AND NOT EXISTS (
	SELECT * FROM AC_LEDGER_BALANCE B
	WHERE B.FK_WORKSHEET = W.OBJECT_ID
	AND ((B.FRK_BUS_LEVEL NOT IN ('OCC','PAB','PFP'))
	AND (B.FK_BP IS NULL OR B.FK_SECOND_BP IS NULL OR FK_BASE_COMPANY IS NULL)));

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','2_2',NULL)

IF @METHOD = 'B'
BEGIN
-- MMH modified per Oslo for USH
UPDATE BOAC_DUP_WORKSHEET SET DM_BATCH_NUMBER = 0
FROM AC_LEDGER_BALANCE B
WHERE B.FK_WORKSHEET = BOAC_DUP_WORKSHEET.OBJECT_ID
AND 
((FRK_BUS_LEVEL = 'USH' and FK_BASE_COMPANY IS NULL) or
        ((FRK_BUS_LEVEL <> 'USH' or FRK_BUS_LEVEL is null) and
(B.FK_BASE_COMPANY IS NULL
	OR (B.FRK_BUS_LEVEL NOT IN ('OCC','PAB','PFP') AND (B.FK_BP IS NULL OR B.FK_SECOND_BP IS NULL)))))

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','2_3',NULL)

IF DBO.BO_CHKINDX('IND_BOAC_WORKSHEET','BOAC_DUP_WORKSHEET') = 'N'
CREATE INDEX IND_BOAC_WORKSHEET ON BOAC_DUP_WORKSHEET(OBJECT_ID);

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','2_4',NULL)

UPDATE A
SET DM_BATCH_NUMBER = W.DM_BATCH_NUMBER, DM_TRANS_DATE = GETDATE() 
FROM AC_WORKSHEET A, BOAC_DUP_WORKSHEET W 
WHERE A.OBJECT_ID = W.OBJECT_ID
END

/*  STEP 3B */


IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','3B',NULL)


IF @METHOD = 'B'
BEGIN

IF DBO.BO_CHKINDX('BO_DUPL_BALANCE_ID','BOAC_DUPL_BALANCE') = 'Y'
DROP INDEX BOAC_DUPL_BALANCE.BO_DUPL_BALANCE_ID

TRUNCATE TABLE BOAC_DUPL_BALANCE

INSERT INTO BOAC_DUPL_BALANCE
(IS_ESTIMATE, IS_IN_ORIG_CURR, IS_IN_BOOK_CURR, IS_IN_ACCT_CURR, NO_TRANSFER_LDGR, IS_SUPI_BASE, 
FRK_SICSNT_SYSTEM, FRK_ACCESS_CODE, 
/* INCLUDE PENDING: FRK_STATUS, INCLUDE PENDING END */
IDENTIFIER, DATE_OF_BOOKING, DUE_DATE, INSTALMENT_NUMBER,    
FK_CURR, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_WORKSHEET, FK_SECOND_BP, FK_BP, FK_BASE_COMPANY, 
FK_CLAIM, FK_LDGR_BAL_NOTE, AC_YEAR, BOOKING_YEAR, FRK_AC_REF_PERIOD, FRK_BOOKING_PERIOD, 
FINANCIAL_YEAR,
BOOKING_YEAR_2, FRK_BOOKING_PER_2, BOOKING_YEAR_3, FRK_BOOKING_PER_3, OBJECT_ID)
(SELECT B.IS_ESTIMATE, B.IS_IN_ORIG_CURR, B.IS_IN_BOOK_CURR, B.IS_IN_ACCT_CURR, B.NO_TRANSFER_LDGR, B.IS_SUPI_BASE, 
B.FRK_SICSNT_SYSTEM, B.FRK_ACCESS_CODE,
/* INCLUDE PENDING: W.FRK_STATUS, INCLUDE PENDING END */
B.IDENTIFIER, B.DATE_OF_BOOKING, B.DUE_DATE, B.INSTALMENT_NUMBER,    
B.FK_CURR, B.FK_AC_FUNC_CCY, B.FK_AC_FUNC_CCY2, B.FK_WORKSHEET, B.FK_SECOND_BP, B.FK_BP, B.FK_BASE_COMPANY, 
B.FK_CLAIM, B.FK_LDGR_BAL_NOTE, B.AC_YEAR, B.BOOKING_YEAR, B.FRK_AC_REF_PERIOD, B.FRK_BOOKING_PERIOD, 
FINANCIAL_YEAR, 
B.BOOKING_YEAR_2, B.FRK_BOOKING_PER_2, B.BOOKING_YEAR_3, B.FRK_BOOKING_PER_3, B.OBJECT_ID
FROM AC_LEDGER_BALANCE B, BOAC_DUP_WORKSHEET W 
WHERE B.FK_WORKSHEET = W.OBJECT_ID AND W.DM_BATCH_NUMBER <> 0
--AND NOT (B.FRK_BUS_LEVEL = 'OCC' AND B.IS_IN_ORIG_CURR = 'Y')
)

-- MMH commented out above

IF DBO.BO_CHKINDX('BO_DUPL_BALANCE_ID','BOAC_DUPL_BALANCE') = 'N'
CREATE INDEX BO_DUPL_BALANCE_ID ON BOAC_DUPL_BALANCE(OBJECT_ID)

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','3B_2',NULL)

IF DBO.BO_CHKINDX('BO_DUP_DETAIL_ID','BOAC_DUP_DETAIL') = 'Y'
DROP INDEX BOAC_DUP_DETAIL.BO_DUP_DETAIL_ID

TRUNCATE TABLE BOAC_DUP_DETAIL

INSERT INTO BOAC_DUP_DETAIL
(AC_END_DATE, AC_START_DATE, ORIG_UW_YEAR, OCC_YR, UW_YEAR, ORGNL_ACC_YEAR, DTL_AMT, IS_LIQUID,  
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, 
EXCH_AMT, FUNC_AMT2, OBJECT_ID, FK_SOC, FK_AMENDMENT, FK_CLAIM_TO_SOC, FK_DTL_COMMENT, FK_ACCT_CLASS, 
FK_ENTRY_CODE, FK_HEADLINE_LOSS, FK_ORIG_CESSION, FK_INS_PER_ASSUMED, FK_BALANCE, D.FRK_ORGNL_ACC_PRD, FK_INS_PER)
(SELECT D.AC_END_DATE, D.AC_START_DATE, D.ORIG_UW_YEAR, D.OCC_YR, D.UW_YEAR, D.ORGNL_ACC_YEAR, D.DTL_AMT, D.IS_LIQUID, 
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, 
D.EXCH_AMT, D.FUNC_AMT2, D.OBJECT_ID, D.FK_SOC, D.FK_AMENDMENT, D.FK_CLAIM_TO_SOC, D.FK_DTL_COMMENT, 
D.FK_ACCT_CLASS, D.FK_ENTRY_CODE, D.FK_HEADLINE_LOSS, D.FK_ORIG_CESSION, D.FK_INS_PER_ASSUMED, D.FK_BALANCE, D.FRK_ORGNL_ACC_PRD, D.FK_INS_PER
FROM AC_LEDGER_DETAIL D, BOAC_DUPL_BALANCE B
WHERE D.FK_BALANCE = B.OBJECT_ID);

IF DBO.BO_CHKINDX('BO_DUP_DETAIL_ID','BOAC_DUP_DETAIL') = 'N'
CREATE INDEX BO_DUP_DETAIL_ID ON BOAC_DUP_DETAIL(OBJECT_ID)

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','3B_3',NULL)
END

TRUNCATE TABLE BOAC_WK1_FACT;

IF @METHOD = 'B'
INSERT INTO BOAC_WK1_FACT 
(IS_ESTIMATE, IS_IN_ORIG_CURR, IS_IN_BOOK_CURR, 
IS_IN_ACCT_CURR, NO_TRANSFER_LDGR, IS_SUPI_BASE, 
FRK_SICSNT_SYSTEM, FRK_ACCESS_CODE,FRK_ORIGINAL_ACC_PRD, 
IDENTIFIER, DATE_OF_BOOKING, DUE_DATE, 
AC_END_DATE, AC_START_DATE, INSTALMENT_NUMBER, 
ORIG_UW_YEAR, OCC_YR, UW_YEAR, 
ORGNL_ACC_YEAR, AMOUNT, LIQUID_AMOUNT, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, FK_CURR, 
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, 
/* INCLUDE PENDING: FRK_STATUS,   INCLUDE PENDING END */
OBJECT_ID, FK_WORKSHEET, 
FK_SECOND_BP, 
FK_BP, 
FK_BASE_COMPANY, FK_SOC, FK_AMENDMENT, 
FK_CLAIM, FK_CLAIM_TO_SOC,FK_DTL_COMMENT, 
FK_LDGR_BAL_NOTE, FK_CLASSIFICATION, AC_YEAR, 
BOOKING_YEAR, FRK_AC_REF_PERIOD, FRK_BOOKING_PERIOD, 
FK_ENTRY_CODE, 
TIME_COMBINED, 
FK_RISKAREA, FK_HEADLINE_LOSS, FK_ORIG_CESSION, 
FK_INS_PER_ASSUMED, FK_BALANCE,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, FINANCIAL_YEAR, 
BOOKING_YEAR_2, FRK_BOOKING_PER_2, BOOKING_YEAR_3, FRK_BOOKING_PER_3, INS_PER_START, INW_INS_PER_START)
(SELECT 
B.IS_ESTIMATE, B.IS_IN_ORIG_CURR, B.IS_IN_BOOK_CURR, 
B.IS_IN_ACCT_CURR, B.NO_TRANSFER_LDGR, B.IS_SUPI_BASE, 
B.FRK_SICSNT_SYSTEM, B.FRK_ACCESS_CODE, D.FRK_ORGNL_ACC_PRD,
B.IDENTIFIER, B.DATE_OF_BOOKING, B.DUE_DATE, 
D.AC_END_DATE, D.AC_START_DATE, B.INSTALMENT_NUMBER, 
ORIG_UW_YEAR, OCC_YR, D.UW_YEAR, 
D.ORGNL_ACC_YEAR, D.DTL_AMT, CASE WHEN D.IS_LIQUID = 'Y' THEN D.DTL_AMT ELSE 0 END, 
EXCH_AMT, FUNC_AMT2, B.FK_CURR,  
B.FK_AC_FUNC_CCY, B.FK_AC_FUNC_CCY2, 
/* INCLUDE PENDING: W.FRK_STATUS, INCLUDE PENDING END */
D.OBJECT_ID, B.FK_WORKSHEET, 
CASE WHEN B.FK_SECOND_BP IS NULL 
	THEN (CASE WHEN B.FK_BP IS NULL THEN FK_BASE_COMPANY ELSE FK_BP END) 
	ELSE B.FK_SECOND_BP END, 
CASE WHEN B.FK_BP IS NULL THEN FK_BASE_COMPANY ELSE FK_BP END,
B.FK_BASE_COMPANY, D.FK_SOC, D.FK_AMENDMENT, 
FK_CLAIM_TO_SOC, B.FK_CLAIM, FK_DTL_COMMENT, 
FK_LDGR_BAL_NOTE, D.FK_ACCT_CLASS, B.AC_YEAR, 
B.BOOKING_YEAR, B.FRK_AC_REF_PERIOD, B.FRK_BOOKING_PERIOD, 
D.FK_ENTRY_CODE, 
CASE WHEN B.AC_YEAR IS NULL THEN '' ELSE CAST(B.AC_YEAR AS VARCHAR(4)) END 
+ ISNULL(RTRIM(B.FRK_AC_REF_PERIOD),'') + '$' 
+ CASE WHEN B.BOOKING_YEAR IS NULL THEN '' ELSE CAST(B.BOOKING_YEAR AS VARCHAR(4)) END  + '$'
+ ISNULL(RTRIM(B.FRK_BOOKING_PERIOD),'') + '$' 
+ CASE WHEN B.BOOKING_YEAR_2 IS NULL THEN '' ELSE CAST(B.BOOKING_YEAR_2 AS VARCHAR(4)) END 
+ ISNULL(RTRIM(B.FRK_BOOKING_PER_2),'') + '$' 
+ CASE WHEN B.BOOKING_YEAR_3 IS NULL THEN '' ELSE CAST(B.BOOKING_YEAR_3 AS VARCHAR(4)) END 
+ ISNULL(RTRIM(B.FRK_BOOKING_PER_3),''), 
'NO RISKAREA', D.FK_HEADLINE_LOSS, D.FK_ORIG_CESSION, 
D.FK_INS_PER_ASSUMED, D.FK_BALANCE, 
D.PRE_PROD, D.PRODUCER, D.INSUR_CAT, D.BUS_CAT, ISNULL(B.FINANCIAL_YEAR, B.BOOKING_YEAR), 
BOOKING_YEAR_2, FRK_BOOKING_PER_2, BOOKING_YEAR_3, FRK_BOOKING_PER_3, LCP.INSRD_PERIOD_START, COALESCE(LCP_INW.INSRD_PERIOD_START,LCP.INSRD_PERIOD_START)
FROM BOAC_DUP_DETAIL D
LEFT OUTER JOIN LIFE_CYCLE_PHASE LCP ON (D.FK_INS_PER = LCP.FK_INS_PRD AND LCP.IS_CURRENT = 'Y')
LEFT OUTER JOIN LIFE_CYCLE_PHASE LCP_INW ON (D.FK_INS_PER_ASSUMED = LCP_INW.FK_INS_PRD AND LCP_INW.IS_CURRENT = 'Y'), BOAC_DUPL_BALANCE B, BOAC_DUP_WORKSHEET W
WHERE D.FK_BALANCE = B.OBJECT_ID  AND B.FK_WORKSHEET = W.OBJECT_ID)

IF @METHOD = 'A'
INSERT INTO BOAC_WK1_FACT 
(IS_ESTIMATE, IS_IN_ORIG_CURR, IS_IN_BOOK_CURR, IS_IN_ACCT_CURR, NO_TRANSFER_LDGR, IS_SUPI_BASE, 
FRK_SICSNT_SYSTEM, FRK_ACCESS_CODE,
FRK_ORIGINAL_ACC_PRD, IDENTIFIER, DATE_OF_BOOKING, 
DUE_DATE, AC_END_DATE, AC_START_DATE,   
INSTALMENT_NUMBER, ORIG_UW_YEAR, OCC_YR, 
UW_YEAR, ORGNL_ACC_YEAR, AMOUNT, LIQUID_AMOUNT, FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, 
FK_CURR, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,   
/* INCLUDE PENDING: FRK_STATUS,   INCLUDE PENDING END */
OBJECT_ID, FK_WORKSHEET, FK_SECOND_BP, FK_BP, FK_BASE_COMPANY, 
FK_SOC, FK_AMENDMENT, FK_CLAIM, FK_CLAIM_TO_SOC,FK_DTL_COMMENT, FK_LDGR_BAL_NOTE, FK_CLASSIFICATION, 
AC_YEAR, BOOKING_YEAR, FRK_AC_REF_PERIOD, FRK_BOOKING_PERIOD, FK_ENTRY_CODE, TIME_COMBINED, FK_RISKAREA,
FK_HEADLINE_LOSS, FK_ORIG_CESSION, FK_INS_PER_ASSUMED, FK_BALANCE,
BOOKING_YEAR_2, FRK_BOOKING_PER_2, BOOKING_YEAR_3, FRK_BOOKING_PER_3, INS_PER_START, INW_INS_PER_START)
(SELECT B.IS_ESTIMATE, B.IS_IN_ORIG_CURR, B.IS_IN_BOOK_CURR, B.IS_IN_ACCT_CURR, B.NO_TRANSFER_LDGR, B.IS_SUPI_BASE, 
B.FRK_SICSNT_SYSTEM, B.FRK_ACCESS_CODE, D.FRK_ORGNL_ACC_PRD,
B.IDENTIFIER,
B.DATE_OF_BOOKING, B.DUE_DATE, D.AC_END_DATE, D.AC_START_DATE,  
B.INSTALMENT_NUMBER, ORIG_UW_YEAR, OCC_YR, D.UW_YEAR, D.ORGNL_ACC_YEAR, 
D.DTL_AMT, CASE WHEN D.IS_LIQUID = 'Y' THEN D.DTL_AMT ELSE 0 END, EXCH_AMT, FUNC_AMT2,
B.FK_CURR,  
B.FK_AC_FUNC_CCY, B.FK_AC_FUNC_CCY2,
/* INCLUDE PENDING: W.FRK_STATUS, INCLUDE PENDING END */
D.OBJECT_ID, B.FK_WORKSHEET,
CASE WHEN B.FK_SECOND_BP IS NULL THEN (CASE WHEN B.FK_BP IS NULL THEN FK_BASE_COMPANY ELSE FK_BP END) ELSE B.FK_SECOND_BP END, 
CASE WHEN B.FK_BP IS NULL THEN FK_BASE_COMPANY ELSE FK_BP END,
B.FK_BASE_COMPANY, 
D.FK_SOC, D.FK_AMENDMENT, FK_CLAIM_TO_SOC, B.FK_CLAIM, FK_DTL_COMMENT, FK_LDGR_BAL_NOTE, D.FK_ACCT_CLASS,
B.AC_YEAR, B.BOOKING_YEAR, B.FRK_AC_REF_PERIOD, B.FRK_BOOKING_PERIOD, D.FK_ENTRY_CODE,
CASE WHEN B.AC_YEAR IS NULL THEN '' ELSE CAST(B.AC_YEAR AS VARCHAR(4)) END 
+ ISNULL(RTRIM(B.FRK_AC_REF_PERIOD),'') + '$' 
+ CASE WHEN B.BOOKING_YEAR IS NULL THEN '' ELSE CAST(B.BOOKING_YEAR AS VARCHAR(4)) END  + '$'
+ ISNULL(RTRIM(B.FRK_BOOKING_PERIOD),'') + '$' 
+ CASE WHEN B.BOOKING_YEAR_2 IS NULL THEN '' ELSE CAST(B.BOOKING_YEAR_2 AS VARCHAR(4)) END 
+ ISNULL(RTRIM(B.FRK_BOOKING_PER_2),'') + '$' 
+ CASE WHEN B.BOOKING_YEAR_3 IS NULL THEN '' ELSE CAST(B.BOOKING_YEAR_3 AS VARCHAR(4)) END 
+ ISNULL(RTRIM(B.FRK_BOOKING_PER_3),''), 
'NO RISKAREA', D.FK_HEADLINE_LOSS, D.FK_ORIG_CESSION, D.FK_INS_PER_ASSUMED, D.FK_BALANCE,
BOOKING_YEAR_2, FRK_BOOKING_PER_2, BOOKING_YEAR_3, FRK_BOOKING_PER_3, LCP.INSRD_PERIOD_START, COALESCE(LCP_INW.INSRD_PERIOD_START,LCP.INSRD_PERIOD_START) 
FROM AC_LEDGER_DETAIL D LEFT OUTER JOIN LIFE_CYCLE_PHASE LCP ON (D.FK_INS_PER = LCP.FK_INS_PRD AND LCP.IS_CURRENT = 'Y')
LEFT OUTER JOIN LIFE_CYCLE_PHASE LCP_INW ON (D.FK_INS_PER_ASSUMED = LCP_INW.FK_INS_PRD AND LCP_INW.IS_CURRENT = 'Y'),
AC_LEDGER_BALANCE B, BOAC_DUP_WORKSHEET W, BOAC_STATUS S
WHERE D.FK_BALANCE = B.OBJECT_ID  AND B.FK_WORKSHEET = W.OBJECT_ID  
AND NOT (B.FRK_BUS_LEVEL = 'OCC' AND B.IS_IN_ORIG_CURR = 'Y')
AND (W.DM_BATCH_NUMBER = S.CURRENT_BATCH
/* INCLUDE PENDING: OR W.DM_BATCH_NUMBER < 0 INCLUDE PENDING END */
))

/*  STEP 3C */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','3C',NULL)

/* STEP 3C_1 */

/*
UPDATE BOAC_WK1_FACT
SET FK_RISKAREA = CASE WHEN AC.FK_I_COUNTRY IS NULL THEN 'NO RISKAREA' ELSE AC.FK_I_COUNTRY END, 
FK_REP_UNIT_1 = AC.FK_REP_UNIT_1, FK_REP_UNIT_2 = AC.FK_REP_UNIT_2, FK_REP_UNIT_3 = AC.FK_REP_UNIT_3 
FROM ACC_CLASSIFIC AC WHERE BOAC_WK1_FACT.FK_CLASSIFICATION = AC.OBJECT_ID;
*/

CREATE TABLE #WK3(
 	[INTEGER_ID] [INTEGER] IDENTITY(1,1) NOT NULL,
	[OBJECT_ID] [VARCHAR](32) COLLATE DATABASE_DEFAULT NOT NULL,
	[FK_RISKAREA] [VARCHAR](32) COLLATE DATABASE_DEFAULT ,
	[FK_REP_UNIT_1] [VARCHAR](32) COLLATE DATABASE_DEFAULT ,
	[FK_REP_UNIT_2] [VARCHAR](32) COLLATE DATABASE_DEFAULT ,
	[FK_REP_UNIT_3] [VARCHAR](32) COLLATE DATABASE_DEFAULT )

CREATE CLUSTERED INDEX CIDX_#WK3 ON #WK3 (INTEGER_ID);

INSERT INTO #WK3 (OBJECT_ID, FK_RISKAREA, FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3)
SELECT F.OBJECT_ID, COALESCE(AC.FK_I_COUNTRY,'NO RISKAREA'),AC.FK_REP_UNIT_1, AC.FK_REP_UNIT_2, AC.FK_REP_UNIT_3
FROM ACC_CLASSIFIC AC , BOAC_WK1_FACT F
WHERE F.FK_CLASSIFICATION = AC.OBJECT_ID

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','3C_1',NULL)

UPDATE BOAC_WK1_FACT
SET FK_CLASSIFICATION = 'NO CLASSIFICATION', FK_RISKAREA = 'NO RISKAREA'
WHERE FK_CLASSIFICATION IS NULL;  

/*  STEP 4C */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','4C',NULL)

TRUNCATE TABLE BOAC_WK1_CLASSIFIC;

TRUNCATE TABLE BOAC_WK2_CLASSIFIC;

/* STEP 4C/1 */
INSERT INTO BOAC_WK1_CLASSIFIC 
(OBJECT_ID, FRK_REFIC19, FRK_REFIC214, FRK_REFIC215, FRK_REFIC216, FRK_REFIC217, FRK_REFIC218, FRK_REFIC219,
FRK_REFIC22, FRK_REFIC261, FRK_REFIC262, FRK_REFIC263, FRK_REFIC264, FRK_REFIC265, FRK_REFIC266, FRK_REFIC267,
FRK_REFIC268, FRK_REFIC269, FRK_REFIC270, FRK_REFIC271, FRK_REFIC272, FRK_REFIC273, FRK_REFIC274, FRK_REFIC275,
FRK_REFIC276, FRK_REFIC277, FRK_REFIC278, FRK_REFIC3, FRK_REFIC44, FRK_REFIC46, FRK_REFIC48, FRK_REFIC50,
FRK_REFIC51, FRK_REFIC52, FRK_REFIC525, FRK_REFIC53, FRK_REFIC54, FRK_REFIC961, FRK_REFIC975, FRK_REFIC976,
FRK_REFIM22, FRK_REFIM978, FRK_REFIM986,  FRK_REFIC1153, FRK_REFIC1154, FRK_REFIC1155, FRK_REFIC1156, FRK_REFIC1157,
FRK_REFIC1158, FRK_REFIC1159, FRK_REFIC1160, FRK_REFIC1161, FRK_REFIC1162)
(SELECT DISTINCT C.OBJECT_ID, 
CASE WHEN FRK_REFIC19 IS NULL THEN '<N/A>'  ELSE FRK_REFIC19 END,
CASE WHEN FRK_REFIC214 IS NULL THEN '<N/A>'  ELSE FRK_REFIC214 END,
CASE WHEN FRK_REFIC215 IS NULL THEN '<N/A>'  ELSE FRK_REFIC215 END,
CASE WHEN FRK_REFIC216 IS NULL THEN '<N/A>'  ELSE FRK_REFIC216 END,
CASE WHEN FRK_REFIC217 IS NULL THEN '<N/A>'  ELSE FRK_REFIC217 END, 
CASE WHEN FRK_REFIC218 IS NULL THEN '<N/A>'  ELSE FRK_REFIC218 END,
CASE WHEN FRK_REFIC219 IS NULL THEN '<N/A>'  ELSE FRK_REFIC219 END,  
CASE WHEN FRK_REFIC22 IS NULL THEN '<N/A>'  ELSE FRK_REFIC22 END,
CASE WHEN FRK_REFIC261 IS NULL THEN '<N/A>'  ELSE FRK_REFIC261 END,
CASE WHEN FRK_REFIC262 IS NULL THEN '<N/A>'  ELSE FRK_REFIC262 END,
CASE WHEN FRK_REFIC263 IS NULL THEN '<N/A>'  ELSE FRK_REFIC263 END,
CASE WHEN FRK_REFIC264 IS NULL THEN '<N/A>'  ELSE FRK_REFIC264 END,
CASE WHEN FRK_REFIC265 IS NULL THEN '<N/A>'  ELSE FRK_REFIC265 END,
CASE WHEN FRK_REFIC266 IS NULL THEN '<N/A>'  ELSE FRK_REFIC266 END,
CASE WHEN FRK_REFIC267 IS NULL THEN '<N/A>'  ELSE FRK_REFIC267 END,
CASE WHEN FRK_REFIC268 IS NULL THEN '<N/A>'  ELSE FRK_REFIC268 END,
CASE WHEN FRK_REFIC269 IS NULL THEN '<N/A>'  ELSE FRK_REFIC269 END,
CASE WHEN FRK_REFIC270 IS NULL THEN '<N/A>'  ELSE FRK_REFIC270 END,
CASE WHEN FRK_REFIC271 IS NULL THEN '<N/A>'  ELSE FRK_REFIC271 END,
CASE WHEN FRK_REFIC272 IS NULL THEN '<N/A>'  ELSE FRK_REFIC272 END,
CASE WHEN FRK_REFIC273 IS NULL THEN '<N/A>'  ELSE FRK_REFIC273 END,
CASE WHEN FRK_REFIC274 IS NULL THEN '<N/A>'  ELSE FRK_REFIC274 END,
CASE WHEN FRK_REFIC275 IS NULL THEN '<N/A>'  ELSE FRK_REFIC275 END,
CASE WHEN FRK_REFIC276 IS NULL THEN '<N/A>'  ELSE FRK_REFIC276 END,
CASE WHEN FRK_REFIC277 IS NULL THEN '<N/A>'  ELSE FRK_REFIC277 END,
CASE WHEN FRK_REFIC278 IS NULL THEN '<N/A>'  ELSE FRK_REFIC278 END,
CASE WHEN FRK_REFIC3 IS  NULL THEN '<N/A>' ELSE FRK_REFIC3 END,
CASE WHEN FRK_REFIC44 IS NULL THEN '<N/A>'  ELSE FRK_REFIC44 END,
CASE WHEN FRK_REFIC46 IS NULL THEN '<N/A>'  ELSE FRK_REFIC46 END,
CASE WHEN FRK_REFIC48 IS NULL THEN '<N/A>'  ELSE FRK_REFIC48 END,
CASE WHEN FRK_REFIC50 IS NULL THEN '<N/A>'  ELSE FRK_REFIC50 END,
CASE WHEN FRK_REFIC51 IS NULL THEN '<N/A>'  ELSE FRK_REFIC51 END,
CASE WHEN FRK_REFIC52 IS NULL THEN '<N/A>'  ELSE FRK_REFIC52 END,
CASE WHEN FRK_REFIC525 IS NULL THEN '<N/A>'  ELSE FRK_REFIC525 END,
CASE WHEN FRK_REFIC53  IS NULL THEN '<N/A>'  ELSE FRK_REFIC53 END,
CASE WHEN FRK_REFIC54 IS NULL THEN '<N/A>'  ELSE FRK_REFIC54 END,
CASE WHEN FRK_REFIC961 IS NULL THEN '<N/A>'  ELSE FRK_REFIC961 END,
CASE WHEN FRK_REFIC975 IS NULL THEN '<N/A>'  ELSE FRK_REFIC975 END,
CASE WHEN FRK_REFIC976 IS NULL THEN '<N/A>'  ELSE FRK_REFIC976 END,
CASE WHEN FRK_REFIM22 IS NULL THEN '<N/A>'  ELSE FRK_REFIM22 END,
CASE WHEN FRK_REFIM978 IS NULL THEN '<N/A>'  ELSE FRK_REFIM978 END,
CASE WHEN FRK_REFIM986 IS NULL THEN '<N/A>'  ELSE FRK_REFIM986 END,
CASE WHEN FRK_REFIC1153 IS NULL THEN '<N/A>' ELSE FRK_REFIC1153 END,
CASE WHEN FRK_REFIC1154 IS NULL THEN '<N/A>' ELSE FRK_REFIC1154 END,
CASE WHEN FRK_REFIC1155 IS NULL THEN '<N/A>' ELSE FRK_REFIC1155 END,
CASE WHEN FRK_REFIC1156 IS NULL THEN '<N/A>' ELSE FRK_REFIC1156 END,
CASE WHEN FRK_REFIC1157 IS NULL THEN '<N/A>' ELSE FRK_REFIC1157 END,
CASE WHEN FRK_REFIC1158 IS NULL THEN '<N/A>' ELSE FRK_REFIC1158 END,
CASE WHEN FRK_REFIC1159 IS NULL THEN '<N/A>' ELSE FRK_REFIC1159 END,
CASE WHEN FRK_REFIC1160 IS NULL THEN '<N/A>' ELSE FRK_REFIC1160 END,
CASE WHEN FRK_REFIC1161 IS NULL THEN '<N/A>' ELSE FRK_REFIC1161 END,
CASE WHEN FRK_REFIC1162 IS NULL THEN '<N/A>' ELSE FRK_REFIC1162 END
FROM ACC_CLASSIFIC C, BOAC_WK1_FACT F
WHERE F.FK_CLASSIFICATION = C.OBJECT_ID
);


/* STEP 4C/2 */
DELETE FROM BOAC_WK1_CLASSIFIC  
WHERE EXISTS 
(SELECT * FROM BOAC_TRN_CLASSIFIC T WHERE T.OBJECT_ID = BOAC_WK1_CLASSIFIC.OBJECT_ID);


/* STEP 4C/3 */
UPDATE BOAC_WK1_CLASSIFIC
SET FRK_COMBINED = ISNULL(RTRIM(FRK_REFIC19),'')  + ISNULL(RTRIM(FRK_REFIC214),'') + ISNULL(RTRIM(FRK_REFIC215),'') + ISNULL(RTRIM(FRK_REFIC216),'') 
+ ISNULL(RTRIM(FRK_REFIC217),'') + ISNULL(RTRIM(FRK_REFIC218),'') + ISNULL(RTRIM(FRK_REFIC219),'') + ISNULL(RTRIM(FRK_REFIC22),'')  
+ ISNULL(RTRIM(FRK_REFIC261),'') + ISNULL(RTRIM(FRK_REFIC262),'') + ISNULL(RTRIM(FRK_REFIC263),'') + ISNULL(RTRIM(FRK_REFIC264),'') 
+ ISNULL(RTRIM(FRK_REFIC265),'') + ISNULL(RTRIM(FRK_REFIC266),'') + ISNULL(RTRIM(FRK_REFIC267),'') + ISNULL(RTRIM(FRK_REFIC268),'') 
+ ISNULL(RTRIM(FRK_REFIC269),'') + ISNULL(RTRIM(FRK_REFIC270),'') + ISNULL(RTRIM(FRK_REFIC271),'') + ISNULL(RTRIM(FRK_REFIC272),'') 
+ ISNULL(RTRIM(FRK_REFIC273),'') + ISNULL(RTRIM(FRK_REFIC274),'') + ISNULL(RTRIM(FRK_REFIC275),'') + ISNULL(RTRIM(FRK_REFIC276),'')
+ ISNULL(RTRIM(FRK_REFIC277),'') + ISNULL(RTRIM(FRK_REFIC278),'') + ISNULL(RTRIM(FRK_REFIC3),'')   + ISNULL(RTRIM(FRK_REFIC44),'')  
+ ISNULL(RTRIM(FRK_REFIC46),'')  + ISNULL(RTRIM(FRK_REFIC48),'')  + ISNULL(RTRIM(FRK_REFIC50),'')  + ISNULL(RTRIM(FRK_REFIC51),'')  
+ ISNULL(RTRIM(FRK_REFIC52),'')  + ISNULL(RTRIM(FRK_REFIC525),'') + ISNULL(RTRIM(FRK_REFIC53),'')  + ISNULL(RTRIM(FRK_REFIC54),'')
+ ISNULL(RTRIM(FRK_REFIC961),'') + ISNULL(RTRIM(FRK_REFIC975),'') + ISNULL(RTRIM(FRK_REFIC976),'') + ISNULL(RTRIM(FRK_REFIM22),'')  
+ ISNULL(RTRIM(FRK_REFIM978),'') + ISNULL(RTRIM(FRK_REFIM986),'') + ISNULL(RTRIM(FRK_REFIC1153),'') + ISNULL(RTRIM(FRK_REFIC1154),'')
+ ISNULL(RTRIM(FRK_REFIC1155),'') + ISNULL(RTRIM(FRK_REFIC1156), '') + ISNULL(RTRIM(FRK_REFIC1157),'') + ISNULL(RTRIM(FRK_REFIC1158),'')
+ ISNULL(RTRIM(FRK_REFIC1159),'') + ISNULL(RTRIM(FRK_REFIC1160), '') + ISNULL(RTRIM(FRK_REFIC1161),'') + ISNULL(RTRIM(FRK_REFIC1162),'');

/* STEP 4C/4 */
UPDATE BOAC_WK1_CLASSIFIC  
SET DIM_KEY = (SELECT DIM_KEY FROM BOAC_DIM_CLASSIFIC T WHERE T.FRK_COMBINED = BOAC_WK1_CLASSIFIC.FRK_COMBINED)
WHERE EXISTS 
(SELECT * FROM BOAC_DIM_CLASSIFIC T WHERE T.FRK_COMBINED = BOAC_WK1_CLASSIFIC.FRK_COMBINED);

/* STEP 4C/5 */
INSERT INTO BOAC_TRN_CLASSIFIC (OBJECT_ID, DIM_KEY)
(SELECT OBJECT_ID, DIM_KEY FROM BOAC_WK1_CLASSIFIC WHERE DIM_KEY IS NOT NULL); 


/* STEP 4C/6 */
DELETE FROM  BOAC_WK1_CLASSIFIC WHERE DIM_KEY IS NOT NULL;

/* STEP 4C/7 */
INSERT INTO BOAC_WK2_CLASSIFIC
(FRK_REFIC19, FRK_REFIC214, FRK_REFIC215, FRK_REFIC216, FRK_REFIC217, FRK_REFIC218, FRK_REFIC219,
FRK_REFIC22, FRK_REFIC261, FRK_REFIC262, FRK_REFIC263, FRK_REFIC264, FRK_REFIC265, FRK_REFIC266, FRK_REFIC267,
FRK_REFIC268, FRK_REFIC269, FRK_REFIC270, FRK_REFIC271, FRK_REFIC272, FRK_REFIC273, FRK_REFIC274, FRK_REFIC275,
FRK_REFIC276, FRK_REFIC277, FRK_REFIC278, FRK_REFIC3, FRK_REFIC44, FRK_REFIC46, FRK_REFIC48, FRK_REFIC50,
FRK_REFIC51, FRK_REFIC52, FRK_REFIC525, FRK_REFIC53, FRK_REFIC54, FRK_REFIC961, FRK_REFIC975, FRK_REFIC976,
FRK_REFIM22, FRK_REFIM978, FRK_REFIM986, FRK_COMBINED, FRK_REFIC1153, FRK_REFIC1154, FRK_REFIC1155,
FRK_REFIC1156, FRK_REFIC1157, FRK_REFIC1158, FRK_REFIC1159, FRK_REFIC1160, FRK_REFIC1161, FRK_REFIC1162)
(SELECT DISTINCT 
FRK_REFIC19, FRK_REFIC214, FRK_REFIC215, FRK_REFIC216, FRK_REFIC217, FRK_REFIC218, 
FRK_REFIC219, FRK_REFIC22, FRK_REFIC261, FRK_REFIC262, FRK_REFIC263, FRK_REFIC264, FRK_REFIC265, 
FRK_REFIC266, FRK_REFIC267, FRK_REFIC268, FRK_REFIC269, FRK_REFIC270, FRK_REFIC271, FRK_REFIC272, 
FRK_REFIC273, FRK_REFIC274, FRK_REFIC275, FRK_REFIC276, FRK_REFIC277, FRK_REFIC278, FRK_REFIC3, 
FRK_REFIC44, FRK_REFIC46, FRK_REFIC48, FRK_REFIC50, FRK_REFIC51, FRK_REFIC52, FRK_REFIC525, 
FRK_REFIC53, FRK_REFIC54, FRK_REFIC961, FRK_REFIC975, FRK_REFIC976, FRK_REFIM22, FRK_REFIM978, FRK_REFIM986, FRK_COMBINED,
FRK_REFIC1153, FRK_REFIC1154, FRK_REFIC1155, FRK_REFIC1156, FRK_REFIC1157, FRK_REFIC1158, 
FRK_REFIC1159, FRK_REFIC1160, FRK_REFIC1161, FRK_REFIC1162
FROM BOAC_WK1_CLASSIFIC, BOAC_STATUS
WHERE DIM_KEY IS NULL);


/* STEP 4C/8 */
/* REMOVED - USING IDENTITY COLUMN */
/* UPDATE BOAC_WK2_CLASSIFIC SET DIM_KEY = ROWNUM */



/* STEP 4C/9 */
UPDATE BOAC_WK2_CLASSIFIC 
SET NAME_REFIC19 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 19 AND FRK_REFIC19 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 19 AND FRK_REFIC19 = R.CODE); 

/* STEP 4C/10 */
UPDATE BOAC_WK2_CLASSIFIC 
SET NAME_REFIC214 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 214 AND FRK_REFIC214 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 214 AND FRK_REFIC214 = R.CODE); 

/* STEP 4C/11 */
UPDATE BOAC_WK2_CLASSIFIC 
SET NAME_REFIC215 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 215 AND FRK_REFIC215 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 215 AND FRK_REFIC215 = R.CODE) ;

/* STEP 4C/12 */
UPDATE BOAC_WK2_CLASSIFIC 
SET NAME_REFIC216 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 216 AND FRK_REFIC216 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 216 AND FRK_REFIC216 = R.CODE) ;

/* STEP 4C/13*/
UPDATE BOAC_WK2_CLASSIFIC 
SET NAME_REFIC217 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 217 AND FRK_REFIC217 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 217 AND FRK_REFIC217 = R.CODE) ;

/* STEP 4C/14 */
UPDATE BOAC_WK2_CLASSIFIC 
SET NAME_REFIC218 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 218 AND FRK_REFIC218 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 218 AND FRK_REFIC218 = R.CODE) ;

/* STEP 4C/15 */
UPDATE BOAC_WK2_CLASSIFIC 
SET NAME_REFIC219 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 219 AND FRK_REFIC219 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 219 AND FRK_REFIC219 = R.CODE) ;

/* STEP 4C/16*/
UPDATE BOAC_WK2_CLASSIFIC 
SET NAME_REFIC22 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 22 AND FRK_REFIC22 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 22 AND FRK_REFIC22 = R.CODE) ;

/* STEP 4C/17 */
UPDATE BOAC_WK2_CLASSIFIC 
SET NAME_REFIC261 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 261 AND FRK_REFIC261 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 261 AND FRK_REFIC261= R.CODE) ;

/* STEP 4C/18 */
UPDATE BOAC_WK2_CLASSIFIC 
SET NAME_REFIC262 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 262 AND FRK_REFIC262 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 262 AND FRK_REFIC262= R.CODE) ;

/* STEP 4C/19 */
UPDATE BOAC_WK2_CLASSIFIC 
SET NAME_REFIC263 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 263 AND FRK_REFIC263 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 263 AND FRK_REFIC263= R.CODE) ;

/* STEP 4C/20 */
UPDATE BOAC_WK2_CLASSIFIC 
SET NAME_REFIC264 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 264 AND FRK_REFIC264 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 264 AND FRK_REFIC264= R.CODE) ;

/* STEP 4C/21 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC265 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 265 AND FRK_REFIC265 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 265 AND FRK_REFIC265= R.CODE) ;

/* STEP 4C/22 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC266 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 266 AND FRK_REFIC266 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 266 AND FRK_REFIC266= R.CODE) ;

/* STEP 4C/23 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC267 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 267 AND FRK_REFIC267 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 267 AND FRK_REFIC267= R.CODE) ;

/* STEP 4C/24 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC268 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 268 AND FRK_REFIC268 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 268 AND FRK_REFIC268= R.CODE) ;

/* STEP 4C/25 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC269 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 269 AND FRK_REFIC269 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 269 AND FRK_REFIC269= R.CODE) ;

/* STEP 4C/26 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC270 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 270 AND FRK_REFIC270 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 270 AND FRK_REFIC270= R.CODE) ;

/* STEP 4C/27 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC271 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 271 AND FRK_REFIC271 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 271 AND FRK_REFIC271= R.CODE) ;

/* STEP 4C/28 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC272 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 272 AND FRK_REFIC272 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 272 AND FRK_REFIC272= R.CODE) ;

/* STEP 4C/29 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC273 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 273 AND FRK_REFIC273 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 273 AND FRK_REFIC273= R.CODE) ;

/* STEP 4C/30 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC274 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 274 AND FRK_REFIC274 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 274 AND FRK_REFIC274= R.CODE) ;

/* STEP 4C/31 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC275 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 275 AND FRK_REFIC275 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 275 AND FRK_REFIC275= R.CODE) ;

/* STEP 4C/32 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC276 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 276 AND FRK_REFIC276 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 276 AND FRK_REFIC276= R.CODE) ;

/* STEP 4C/33 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC277 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 277 AND FRK_REFIC277 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 277 AND FRK_REFIC277= R.CODE) ;

/* STEP 4C/34 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC278 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 278 AND FRK_REFIC278 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 278 AND FRK_REFIC278 = R.CODE) ;

/* STEP 4C/35 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC3 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 3 AND FRK_REFIC3 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 3 AND FRK_REFIC3 = R.CODE); 

/* STEP 4C/36 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC44 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 44 AND FRK_REFIC44 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 44 AND FRK_REFIC44 = R.CODE); 

/* STEP 4C/37 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC46 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 46 AND FRK_REFIC46 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 46 AND FRK_REFIC46 = R.CODE) ;

/* STEP 4C/38 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC48 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 48 AND FRK_REFIC48 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 48 AND FRK_REFIC48 = R.CODE) ;

/* STEP 4C/39 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC50 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 50 AND FRK_REFIC50 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 50 AND FRK_REFIC50 = R.CODE) ;

/* STEP 4C/40 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC51 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 51 AND FRK_REFIC51 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 51 AND FRK_REFIC51 = R.CODE) ;

/* STEP 4C/41 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC52 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 52 AND FRK_REFIC52 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 52 AND FRK_REFIC52 = R.CODE) ;

/* STEP 4C/42 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC525 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 525 AND FRK_REFIC525 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 525 AND FRK_REFIC525 = R.CODE); 

/* STEP 4C/43 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC53 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 53 AND FRK_REFIC53 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 53 AND FRK_REFIC53 = R.CODE) ;

/* STEP 4C/44 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC54 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 54 AND FRK_REFIC54 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 54 AND FRK_REFIC54 = R.CODE); 

/* STEP 4C/45 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC961 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 961 AND FRK_REFIC961 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 961 AND FRK_REFIC961 = R.CODE); 

/* STEP 4C/46 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC975 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 975 AND FRK_REFIC975 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 975 AND FRK_REFIC975 = R.CODE) ;

/* STEP 4C/47 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC976 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 976 AND FRK_REFIC976 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 976 AND FRK_REFIC976 = R.CODE) ;

/* STEP 4C/48 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIM22 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 22 AND FRK_REFIM22 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 22 AND FRK_REFIM22 = R.CODE) ;


/* STEP 4C/49 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIM978 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 978 AND FRK_REFIM978 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 978 AND FRK_REFIM978 = R.CODE); 

/* STEP 4C/50 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIM986 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 986 AND FRK_REFIM986 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 986 AND FRK_REFIM986 = R.CODE) ;

/* STEP 4C/51 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC1153 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1153 AND FRK_REFIC1153 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1153 AND FRK_REFIC1153 = R.CODE);

/* STEP 4C/52 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC1154 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1154 AND FRK_REFIC1154 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1154 AND FRK_REFIC1154 = R.CODE);

/* STEP 4C/53 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC1155 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1155 AND FRK_REFIC1155 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1155 AND FRK_REFIC1155 = R.CODE);

/* STEP 4C/54 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC1156 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1156 AND FRK_REFIC1156 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1156 AND FRK_REFIC1156 = R.CODE);

/* STEP 4C/55 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC1157 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1157 AND FRK_REFIC1157 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1157 AND FRK_REFIC1157 = R.CODE);

/* STEP 4C/56 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC1158 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1158 AND FRK_REFIC1158 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1158 AND FRK_REFIC1158 = R.CODE);

/* STEP 4C/57 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC1159 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1159 AND FRK_REFIC1159 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1159 AND FRK_REFIC1159 = R.CODE);

/* STEP 4C/58 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC1160 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1160 AND FRK_REFIC1160 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1160 AND FRK_REFIC1160 = R.CODE);

/* STEP 4C/59 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC1161 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1161 AND FRK_REFIC1161 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1161 AND FRK_REFIC1161 = R.CODE);

/* STEP 4C/60 */
UPDATE BOAC_WK2_CLASSIFIC
SET NAME_REFIC1162 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1162 AND FRK_REFIC1162 = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 1162 AND FRK_REFIC1162 = R.CODE);

/* STEP 4C/61 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC19 = FRK_REFIC19
WHERE  NAME_REFIC19 IS NULL; 
	
/* STEP 4C/62 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC214 = FRK_REFIC214
WHERE  NAME_REFIC214 IS NULL; 

/* STEP 4C/63 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC215 = FRK_REFIC215
WHERE  NAME_REFIC215 IS NULL; 

/* STEP 4C/64 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC216 = FRK_REFIC216
WHERE  NAME_REFIC216 IS NULL; 

/* STEP 4C/65 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC217 = FRK_REFIC217
WHERE  NAME_REFIC217 IS NULL; 

/* STEP 4C/66 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC218 = FRK_REFIC218
WHERE  NAME_REFIC218 IS NULL; 

/* STEP 4C/67 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC219 = FRK_REFIC219
WHERE  NAME_REFIC219 IS NULL; 

/* STEP 4C/68 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC22 = FRK_REFIC22
WHERE  NAME_REFIC22 IS NULL; 

/* STEP 4C/69 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC261 = FRK_REFIC261
WHERE  NAME_REFIC261 IS NULL; 

/* STEP 4C/70 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC262 = FRK_REFIC262
WHERE  NAME_REFIC262 IS NULL; 

/* STEP 4C/71 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC263 = FRK_REFIC263
WHERE  NAME_REFIC263 IS NULL; 

/* STEP 4C/72 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC264 = FRK_REFIC264
WHERE  NAME_REFIC264 IS NULL; 

/* STEP 4C/73 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC265 = FRK_REFIC265
WHERE  NAME_REFIC265 IS NULL; 

/* STEP 4C/74 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC266 = FRK_REFIC266
WHERE  NAME_REFIC266 IS NULL; 

/* STEP 4C/75 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC267 = FRK_REFIC267
WHERE  NAME_REFIC267 IS NULL; 

/* STEP 4C/76 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC268 = FRK_REFIC268
WHERE  NAME_REFIC268 IS NULL; 

/* STEP 4C/77 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC269 = FRK_REFIC269
WHERE  NAME_REFIC269 IS NULL; 

/* STEP 4C/78 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC270 = FRK_REFIC270
WHERE  NAME_REFIC270 IS NULL; 

/* STEP 4C/79 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC271 = FRK_REFIC271
WHERE  NAME_REFIC271 IS NULL; 

/* STEP 4C/80 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC272 = FRK_REFIC272
WHERE  NAME_REFIC272 IS NULL; 

/* STEP 4C/81 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC273 = FRK_REFIC273
WHERE  NAME_REFIC273 IS NULL; 

/* STEP 4C/82 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC274 = FRK_REFIC274
WHERE  NAME_REFIC274 IS NULL; 

/* STEP 4C/83 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC275 = FRK_REFIC275
WHERE  NAME_REFIC275 IS NULL; 

/* STEP 4C/84 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC276 = FRK_REFIC276
WHERE  NAME_REFIC276 IS NULL; 

/* STEP 4C/85 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC277 = FRK_REFIC277
WHERE  NAME_REFIC277 IS NULL; 

/* STEP 4C/86 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC278 = FRK_REFIC278
WHERE  NAME_REFIC278 IS NULL; 

/* STEP 4C/87 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC3 = FRK_REFIC3
WHERE  NAME_REFIC3 IS NULL; 

/* STEP 4C/88 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC44 = FRK_REFIC44
WHERE  NAME_REFIC44 IS NULL; 

/* STEP 4C/89 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC46 = FRK_REFIC46
WHERE  NAME_REFIC46 IS NULL; 

/* STEP 4C/90_1 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC48 = FRK_REFIC48
WHERE  NAME_REFIC48 IS NULL; 

/* STEP 4C/90_2 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC50 = FRK_REFIC50
WHERE  NAME_REFIC50 IS NULL; 

/* STEP 4C/91 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC51 = FRK_REFIC51
WHERE  NAME_REFIC51 IS NULL; 

/* STEP 4C/92 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC52 = FRK_REFIC52
WHERE  NAME_REFIC52 IS NULL; 

/* STEP 4C/93 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC525 = FRK_REFIC525
WHERE  NAME_REFIC525 IS NULL; 

/* STEP 4C/94 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC53 = FRK_REFIC53
WHERE  NAME_REFIC53 IS NULL; 

/* STEP 4C/95 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC54 = FRK_REFIC54
WHERE  NAME_REFIC54 IS NULL; 

/* STEP 4C/96 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC961 = FRK_REFIC961
WHERE  NAME_REFIC961 IS NULL; 

/* STEP 4C/97 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC975 = FRK_REFIC975
WHERE  NAME_REFIC975 IS NULL; 

/* STEP 4C/98 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC976 = FRK_REFIC976
WHERE  NAME_REFIC976 IS NULL; 

/* STEP 4C/99 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIM22 = FRK_REFIM22
WHERE  NAME_REFIM22 IS NULL; 

/* STEP 4C/100 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIM978 = FRK_REFIM978
WHERE  NAME_REFIM978 IS NULL; 

/* STEP 4C/101 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIM986 = FRK_REFIM986
WHERE  NAME_REFIM986 IS NULL; 

/* STEP 4C/102 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC1153 = FRK_REFIC1153
WHERE  NAME_REFIC1153 IS NULL; 

/* STEP 4C/103 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC1154 = FRK_REFIC1154
WHERE  NAME_REFIC1154 IS NULL;

/* STEP 4C/104 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC1155 = FRK_REFIC1155
WHERE  NAME_REFIC1155 IS NULL;

/* STEP 4C/105 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC1156 = FRK_REFIC1156
WHERE  NAME_REFIC1156 IS NULL;

/* STEP 4C/106 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC1157 = FRK_REFIC1157
WHERE  NAME_REFIC1157 IS NULL;

/* STEP 4C/107 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC1158 = FRK_REFIC1158
WHERE  NAME_REFIC1158 IS NULL;

/* STEP 4C/108 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC1159 = FRK_REFIC1159
WHERE  NAME_REFIC1159 IS NULL;

/* STEP 4C/109 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC1160 = FRK_REFIC1160
WHERE  NAME_REFIC1160 IS NULL;

/* STEP 4C/110 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC1161 = FRK_REFIC1161
WHERE  NAME_REFIC1161 IS NULL;

/* STEP 4C/111 */
UPDATE BOAC_WK2_CLASSIFIC SET NAME_REFIC1162 = FRK_REFIC1162
WHERE  NAME_REFIC1162 IS NULL;

/* STEP 4C/112 */
INSERT INTO BOAC_DIM_CLASSIFIC (DIM_KEY,  
FRK_REFIC19, FRK_REFIC214, FRK_REFIC215, FRK_REFIC216, FRK_REFIC217, FRK_REFIC218, FRK_REFIC219,
FRK_REFIC22, FRK_REFIC261, FRK_REFIC262, FRK_REFIC263, FRK_REFIC264, FRK_REFIC265, FRK_REFIC266, FRK_REFIC267,
FRK_REFIC268, FRK_REFIC269, FRK_REFIC270, FRK_REFIC271, FRK_REFIC272, FRK_REFIC273, FRK_REFIC274, FRK_REFIC275,
FRK_REFIC276, FRK_REFIC277, FRK_REFIC278, FRK_REFIC3, FRK_REFIC44, FRK_REFIC46, FRK_REFIC48, FRK_REFIC50,
FRK_REFIC51, FRK_REFIC52, FRK_REFIC525, FRK_REFIC53, FRK_REFIC54, FRK_REFIC961, FRK_REFIC975, FRK_REFIC976,
FRK_REFIM22, FRK_REFIM978, FRK_REFIM986, FRK_COMBINED, 
NAME_REFIC19 , NAME_REFIC214, NAME_REFIC215, NAME_REFIC216, NAME_REFIC217, NAME_REFIC218, NAME_REFIC219,
NAME_REFIC22, NAME_REFIC261, NAME_REFIC262, NAME_REFIC263, NAME_REFIC264, NAME_REFIC265, NAME_REFIC266, NAME_REFIC267,
NAME_REFIC268, NAME_REFIC269, NAME_REFIC270, NAME_REFIC271, NAME_REFIC272, NAME_REFIC273, NAME_REFIC274, NAME_REFIC275,
NAME_REFIC276, NAME_REFIC277, NAME_REFIC278, NAME_REFIC3, NAME_REFIC44, NAME_REFIC46, NAME_REFIC48, NAME_REFIC50,
NAME_REFIC51, NAME_REFIC52, NAME_REFIC525, NAME_REFIC53, NAME_REFIC54, NAME_REFIC961, NAME_REFIC975, NAME_REFIC976,
NAME_REFIM22, NAME_REFIM978, NAME_REFIM986, FRK_REFIC1153, NAME_REFIC1153, FRK_REFIC1154, NAME_REFIC1154,
FRK_REFIC1155, NAME_REFIC1155, FRK_REFIC1156, NAME_REFIC1156, FRK_REFIC1157, NAME_REFIC1157,
FRK_REFIC1158, NAME_REFIC1158, FRK_REFIC1159, NAME_REFIC1159, FRK_REFIC1160, NAME_REFIC1160,
FRK_REFIC1161, NAME_REFIC1161, FRK_REFIC1162, NAME_REFIC1162)
(SELECT DIM_KEY + MAX_KEY_CLASSIFIC,   
FRK_REFIC19, FRK_REFIC214, FRK_REFIC215, FRK_REFIC216, FRK_REFIC217, FRK_REFIC218, FRK_REFIC219,
FRK_REFIC22, FRK_REFIC261, FRK_REFIC262, FRK_REFIC263, FRK_REFIC264, FRK_REFIC265, FRK_REFIC266, FRK_REFIC267,
FRK_REFIC268, FRK_REFIC269, FRK_REFIC270, FRK_REFIC271, FRK_REFIC272, FRK_REFIC273, FRK_REFIC274, FRK_REFIC275,
FRK_REFIC276, FRK_REFIC277, FRK_REFIC278, FRK_REFIC3, FRK_REFIC44, FRK_REFIC46, FRK_REFIC48, FRK_REFIC50,
FRK_REFIC51, FRK_REFIC52, FRK_REFIC525, FRK_REFIC53, FRK_REFIC54, FRK_REFIC961, FRK_REFIC975, FRK_REFIC976,
FRK_REFIM22, FRK_REFIM978, FRK_REFIM986, FRK_COMBINED, 
NAME_REFIC19 , NAME_REFIC214, NAME_REFIC215, NAME_REFIC216, NAME_REFIC217, NAME_REFIC218, NAME_REFIC219,
NAME_REFIC22, NAME_REFIC261, NAME_REFIC262, NAME_REFIC263, NAME_REFIC264, NAME_REFIC265, NAME_REFIC266, NAME_REFIC267,
NAME_REFIC268, NAME_REFIC269, NAME_REFIC270, NAME_REFIC271, NAME_REFIC272, NAME_REFIC273, NAME_REFIC274, NAME_REFIC275,
NAME_REFIC276, NAME_REFIC277, NAME_REFIC278, NAME_REFIC3, NAME_REFIC44, NAME_REFIC46, NAME_REFIC48, NAME_REFIC50,
NAME_REFIC51, NAME_REFIC52, NAME_REFIC525, NAME_REFIC53, NAME_REFIC54, NAME_REFIC961, NAME_REFIC975, NAME_REFIC976,
NAME_REFIM22, NAME_REFIM978, NAME_REFIM986, FRK_REFIC1153, NAME_REFIC1153, FRK_REFIC1154, NAME_REFIC1154,
FRK_REFIC1155, NAME_REFIC1155, FRK_REFIC1156, NAME_REFIC1156, FRK_REFIC1157, NAME_REFIC1157,
FRK_REFIC1158, NAME_REFIC1158, FRK_REFIC1159, NAME_REFIC1159, FRK_REFIC1160, NAME_REFIC1160,
FRK_REFIC1161, NAME_REFIC1161, FRK_REFIC1162, NAME_REFIC1162 FROM BOAC_WK2_CLASSIFIC, BOAC_STATUS);

/* STEP 4C/113 */
INSERT INTO BOAC_TRN_CLASSIFIC (OBJECT_ID, DIM_KEY, BATCH_NO)
(SELECT W1.OBJECT_ID, W2.DIM_KEY + MAX_KEY_CLASSIFIC, CURRENT_BATCH 
FROM BOAC_WK1_CLASSIFIC W1, BOAC_WK2_CLASSIFIC W2, BOAC_STATUS
WHERE W1.FRK_COMBINED = W2.FRK_COMBINED);

/* STEP 4C/114 */
UPDATE BOAC_STATUS 
SET MAX_KEY_CLASSIFIC = MAX_KEY_CLASSIFIC + (SELECT MAX(DIM_KEY) FROM BOAC_WK2_CLASSIFIC)
WHERE EXISTS (SELECT * FROM BOAC_WK2_CLASSIFIC);

/* STEP 4E ENTRY CODES */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','4E INCREMENTAL',NULL)

/* Incremental load of BOAC_DIM_ENTRY_CODE */

--TRUNCATE TABLE BOAC_DIM_ENTRY_CODE;

/* STEP 4E/1 */

MERGE BOAC_DIM_ENTRY_CODE as TARGET
USING V_BOAC_DIM_ENTRY_CODE1 as SOURCE
on (target.code = source.code)
when not matched by target
  then
    insert 
    values (source.code, source.name, source.description, source.former_entry_code,
      source.is_payable, source.is_liquid, source.origin, source.subcat_code, 
      source.subcat_name,source.cat_code, source.cat_name, source.object_id)
when not matched by source
  and              (target.origin not in ('A', 'B'))
  then
    delete  
when matched
  and              (target.code <> source.code or
                    target.name <> source.name or
                    target.description <> source.description or
                    target.former_entry_code <> source.former_entry_code or
                    target.is_payable <> source.is_payable or
                    target.is_liquid <> source.is_liquid or
                    target.origin <> source.origin or
                    target.subcat_code <> source.subcat_code or
                    target.subcat_name <> source.subcat_name or
                    target.cat_code <> source.cat_code or
                    target.cat_name <> source.cat_name or
                    target.object_id <> source.object_id)
  then
    update set      target.code = source.code ,
                    target.name = source.name,
                    target.description = source.description ,
                    target.former_entry_code = source.former_entry_code ,
                    target.is_payable = source.is_payable ,
                    target.is_liquid = source.is_liquid ,
                    target.origin = source.origin ,
                    target.subcat_code = source.subcat_code ,
                    target.subcat_name = source.subcat_name ,
                    target.cat_code = source.cat_code ,
                    target.cat_name = source.cat_name ,
                    target.object_id = source.object_id; 

/* MMH - removed reserve related code
MERGE BOAC_DIM_ENTRY_CODE as TARGET
USING V_BOAC_DIM_ENTRY_CODE2 as SOURCE
on (target.code = source.code )
when not matched by target
  then
    insert 
    values (source.code, source.name, source.description, source.former_entry_code,
      source.is_payable, source.is_liquid, source.origin, source.subcat_code, 
      source.subcat_name,source.cat_code, source.cat_name, source.object_id)
when not matched by source
  and              (target.origin in ('A', 'B'))
  then
    delete  
when matched
  and              (target.code <> source.code or
                    target.name <> source.name or
                    target.description <> source.description or
                    target.former_entry_code <> source.former_entry_code or
                    target.is_payable <> source.is_payable or
                    target.is_liquid <> source.is_liquid or
                    target.origin <> source.origin or
                    target.subcat_code <> source.subcat_code or
                    target.subcat_name <> source.subcat_name or
                    target.cat_code <> source.cat_code or
                    target.cat_name <> source.cat_name or
                    target.object_id <> source.object_id)
  then
    update set      target.code = source.code ,
                    target.name = source.name,
                    target.description = source.description ,
                    target.former_entry_code = source.former_entry_code ,
                    target.is_payable = source.is_payable ,
                    target.is_liquid = source.is_liquid ,
                    target.origin = source.origin ,
                    target.subcat_code = source.subcat_code ,
                    target.subcat_name = source.subcat_name ,
                    target.cat_code = source.cat_code ,
                    target.cat_name = source.cat_name ,
                    target.object_id = source.object_id; 

*/

/* Incremental load of BOAC_JT_ECG */

--TRUNCATE TABLE BOAC_JT_ECG;

/* STEP 4E/2 */

MERGE BOAC_JT_ECG as TARGET
USING v_BOAC_JT_ECG as SOURCE
on (target.entry_code = source.code and target.fk_group = source.fk_group)
when not matched by target then
  insert (entry_code, fk_group)
  values (source.code, source.fk_group)
when not matched by source then
    delete
when matched and (target.entry_code <> source.code or target.fk_group <> source.fk_group) then
     update set target.entry_code = source.code, target.fk_group = source.fk_group;

/* STEP 4E/3 */


/* STEP 4E/4 */


/* STEP 4E/5 */


/* STEP 4E/6 */


/* STEP 4N NOTES */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','4N',NULL)

TRUNCATE TABLE BOAC_WK1_NOTE;

TRUNCATE TABLE BOAC_WK2_NOTE;

/* STEP 4N/1 */
INSERT INTO BOAC_WK1_NOTE
(FK_BALANCE_NOTE, FK_DETAIL_NOTE, FK_COMBINED) 
(
SELECT DISTINCT 
CASE WHEN FK_LDGR_BAL_NOTE IS NULL THEN  'NULL' ELSE FK_LDGR_BAL_NOTE END,
CASE WHEN FK_DTL_COMMENT IS NULL THEN 'NULL' ELSE FK_DTL_COMMENT END,
CASE WHEN FK_LDGR_BAL_NOTE IS NULL THEN 'NULL' ELSE FK_LDGR_BAL_NOTE END +
CASE WHEN FK_DTL_COMMENT IS NULL THEN 'NULL' ELSE FK_DTL_COMMENT END
FROM BOAC_WK1_FACT 
);

/* STEP 4N/2 */

DELETE FROM BOAC_WK1_NOTE
FROM BOAC_DIM_NOTE T
WHERE BOAC_WK1_NOTE.FK_COMBINED = T.FK_COMBINED

/* STEP 4N/3 */
UPDATE BOAC_WK1_NOTE
SET BALANCE_NOTE = (SELECT C.DESCRIPTION FROM CNU_NOTE C
WHERE FK_BALANCE_NOTE = C.OBJECT_ID)
WHERE EXISTS (SELECT * FROM CNU_NOTE C
WHERE FK_BALANCE_NOTE = C.OBJECT_ID);

/* STEP 4N/4 */
UPDATE BOAC_WK1_NOTE
SET DETAIL_NOTE = (SELECT C.DESCRIPTION FROM CNU_NOTE C
WHERE FK_DETAIL_NOTE = C.OBJECT_ID)
WHERE EXISTS (SELECT * FROM CNU_NOTE C
WHERE FK_DETAIL_NOTE = C.OBJECT_ID);

/* STEP 4N/5 */
INSERT INTO BOAC_WK2_NOTE 
(FK_BALANCE_NOTE, FK_DETAIL_NOTE, FK_COMBINED,  BALANCE_NOTE, DETAIL_NOTE) 
(SELECT FK_BALANCE_NOTE, FK_DETAIL_NOTE, FK_COMBINED,  BALANCE_NOTE, DETAIL_NOTE
FROM  BOAC_WK1_NOTE );


/* STEP 4N/6 */
INSERT INTO BOAC_DIM_NOTE 
(DIM_KEY, FK_BALANCE_NOTE, FK_DETAIL_NOTE, FK_COMBINED, BALANCE_NOTE, DETAIL_NOTE)
(SELECT DIM_KEY + S.MAX_KEY_NOTE,
FK_BALANCE_NOTE, FK_DETAIL_NOTE, FK_COMBINED, BALANCE_NOTE, DETAIL_NOTE
FROM BOAC_WK2_NOTE , BOAC_STATUS S);

/* STEP 4N/7 */
UPDATE BOAC_STATUS 
SET MAX_KEY_NOTE = MAX_KEY_NOTE + (SELECT MAX(DIM_KEY) FROM BOAC_WK2_NOTE)
WHERE EXISTS (SELECT * FROM BOAC_WK2_NOTE);


/* STEP 4P */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','4P',NULL)

TRUNCATE TABLE BOAC_WK1_PARTY;

TRUNCATE TABLE BOAC_WK2_PARTY;

/* STEP 4P/1 */
INSERT INTO BOAC_WK1_PARTY
(BC_OBJECT_ID, BP_OBJECT_ID, RP_OBJECT_ID, OBJECT_ID_COMBINED) 
(SELECT DISTINCT FK_BASE_COMPANY, FK_BP, FK_SECOND_BP, FK_BASE_COMPANY + FK_BP + FK_SECOND_BP
FROM BOAC_WK1_FACT);

/* STEP 4P/2 */
DELETE FROM BOAC_WK1_PARTY  
WHERE EXISTS
(SELECT * FROM BOAC_DIM_PARTY T   
WHERE BOAC_WK1_PARTY.OBJECT_ID_COMBINED = T.OBJECT_ID_COMBINED);

/* STEP 4P/3 */
INSERT INTO BOAC_WK2_PARTY 
(BC_CURR_NAME,  BC_IDENTIFIER, BC_IS_ACTIVE, 
BC_IS_INSURED, BC_IS_LEGAL_ENTITY, BC_OBJECT_ID, 
BP_CURR_NAME, BP_FK_HOME_COUNTRY, BP_COUNTRY_NAME, BP_FRK_ACCESS_CODE, BP_FRK_STATUS,  BP_IDENTIFIER, BP_IS_ACTIVE, 
BP_IS_BASE_COMPANY, BP_OBJECT_ID, BP_SUBCLASS,  BP_C_ISO_ALPHA_3,
RP_CURR_NAME, RP_FK_HOME_COUNTRY, RP_COUNTRY_NAME, RP_FRK_ACCESS_CODE, RP_FRK_STATUS,  RP_IDENTIFIER, RP_IS_ACTIVE, 
RP_IS_BASE_COMPANY, RP_IS_INSURED, RP_OBJECT_ID, RP_SUBCLASS, RP_C_ISO_ALPHA_3,
OBJECT_ID_COMBINED)
(SELECT BC.CURR_NAME, BC.IDENTIFIER, BC.IS_ACTIVE, 
BC.IS_INSURED, BC.IS_LEGAL_ENTITY, BC.OBJECT_ID, 
BP.CURR_NAME, BP.FK_HOME_COUNTRY, BPL.NAME, BP.FRK_ACCESS_CODE, BP.FRK_STATUS, BP.IDENTIFIER, BP.IS_ACTIVE, 
BP.IS_BASE_COMPANY, BP.OBJECT_ID, BP.SUBCLASS, BPL.ISO_ALPHA_3,
RP.CURR_NAME, RP.FK_HOME_COUNTRY, RPL.NAME, RP.FRK_ACCESS_CODE, RP.FRK_STATUS, RP.IDENTIFIER, RP.IS_ACTIVE, 
RP.IS_BASE_COMPANY, RP.IS_INSURED, RP.OBJECT_ID, RP.SUBCLASS, RPL.ISO_ALPHA_3,
OBJECT_ID_COMBINED 
FROM BOAC_WK1_PARTY WK1, PARTY BP, PARTY BC, PARTY RP, 
LEGAL_AREA BPL, LEGAL_AREA RPL 
WHERE WK1.BP_OBJECT_ID = BP.OBJECT_ID
AND WK1.BC_OBJECT_ID = BC.OBJECT_ID
AND WK1.RP_OBJECT_ID = RP.OBJECT_ID
AND BPL.OBJECT_ID = BP.FK_HOME_COUNTRY
AND RPL.OBJECT_ID = RP.FK_HOME_COUNTRY);

/* STEP 4P/4 */
UPDATE  BOAC_WK2_PARTY
SET BP_NAIC_IDENTIFIER = (SELECT IDENTIFIER FROM PARTY_IDENTIFIER ID 
WHERE BOAC_WK2_PARTY.BP_OBJECT_ID=ID.FK_PARTY AND ID.FRK_PARTY_ID_TYPE='NAIC')
WHERE EXISTS (SELECT * FROM PARTY_IDENTIFIER ID 
WHERE BOAC_WK2_PARTY.BP_OBJECT_ID=ID.FK_PARTY AND ID.FRK_PARTY_ID_TYPE='NAIC');
 

/* STEP 4P/5 */
UPDATE  BOAC_WK2_PARTY
SET BP_FED_IDENTIFIER = (SELECT IDENTIFIER FROM PARTY_IDENTIFIER ID 
WHERE BOAC_WK2_PARTY.BP_OBJECT_ID=ID.FK_PARTY AND ID.FRK_PARTY_ID_TYPE='FED')
WHERE EXISTS (SELECT * FROM PARTY_IDENTIFIER ID 
WHERE BOAC_WK2_PARTY.BP_OBJECT_ID=ID.FK_PARTY AND ID.FRK_PARTY_ID_TYPE='FED');

/* STEP 4P/6 */
UPDATE  BOAC_WK2_PARTY
SET RP_NAIC_IDENTIFIER = (SELECT IDENTIFIER FROM PARTY_IDENTIFIER ID 
WHERE BOAC_WK2_PARTY.RP_OBJECT_ID=ID.FK_PARTY AND ID.FRK_PARTY_ID_TYPE='NAIC')
WHERE EXISTS (SELECT * FROM PARTY_IDENTIFIER ID 
WHERE BOAC_WK2_PARTY.RP_OBJECT_ID=ID.FK_PARTY AND ID.FRK_PARTY_ID_TYPE='NAIC');
 

/* STEP 4P/7 */
UPDATE  BOAC_WK2_PARTY
SET RP_FED_IDENTIFIER = (SELECT IDENTIFIER FROM PARTY_IDENTIFIER ID 
WHERE BOAC_WK2_PARTY.RP_OBJECT_ID=ID.FK_PARTY AND ID.FRK_PARTY_ID_TYPE='FED')
WHERE EXISTS (SELECT * FROM PARTY_IDENTIFIER ID 
WHERE BOAC_WK2_PARTY.RP_OBJECT_ID=ID.FK_PARTY AND ID.FRK_PARTY_ID_TYPE='FED');

/* STEP 4P/8 */
UPDATE  BOAC_WK2_PARTY
SET BP_FULL_NAME = (SELECT FULL_NAME FROM ORGANISATION_NAME ID 
WHERE ID.FK_ORGANISATION = BP_OBJECT_ID AND ID.SUBCLASS = 3)
WHERE EXISTS 
(SELECT * FROM ORGANISATION_NAME ID 
WHERE ID.FK_ORGANISATION = BP_OBJECT_ID AND ID.SUBCLASS = 3);

UPDATE  BOAC_WK2_PARTY
SET BP_SHORT_NAME = (SELECT SHORT_NAME FROM ORGANISATION_NAME ID 
WHERE ID.FK_ORGANISATION = BP_OBJECT_ID AND ID.SUBCLASS = 3)
WHERE EXISTS 
(SELECT * FROM ORGANISATION_NAME ID 
WHERE ID.FK_ORGANISATION = BP_OBJECT_ID AND ID.SUBCLASS = 3);

/* STEP 4P/9 */
UPDATE  BOAC_WK2_PARTY
SET RP_FULL_NAME = (SELECT FULL_NAME FROM ORGANISATION_NAME ID 
WHERE ID.FK_ORGANISATION = RP_OBJECT_ID AND ID.SUBCLASS = 3)
WHERE EXISTS 
(SELECT * FROM ORGANISATION_NAME ID 
WHERE ID.FK_ORGANISATION = RP_OBJECT_ID AND ID.SUBCLASS = 3);

UPDATE  BOAC_WK2_PARTY
SET RP_SHORT_NAME = (SELECT SHORT_NAME FROM ORGANISATION_NAME ID 
WHERE ID.FK_ORGANISATION = RP_OBJECT_ID AND ID.SUBCLASS = 3)
WHERE EXISTS 
(SELECT * FROM ORGANISATION_NAME ID 
WHERE ID.FK_ORGANISATION = RP_OBJECT_ID AND ID.SUBCLASS = 3);


/* STEP 4P/10 */
UPDATE  BOAC_WK2_PARTY
SET BP_NAME_STATUS = (SELECT NAME FROM REFERENCE_DATA R  
WHERE R.CODE = BP_FRK_STATUS AND R.SUBCLASS = 235)
WHERE EXISTS 
(SELECT * FROM REFERENCE_DATA R  
WHERE R.CODE = BP_FRK_STATUS AND R.SUBCLASS = 235);

/* STEP 4P/11 */
UPDATE  BOAC_WK2_PARTY
SET RP_NAME_STATUS = (SELECT NAME FROM REFERENCE_DATA R  
WHERE R.CODE = RP_FRK_STATUS AND R.SUBCLASS = 235)
WHERE EXISTS 
(SELECT * FROM REFERENCE_DATA R  
WHERE R.CODE = RP_FRK_STATUS AND R.SUBCLASS = 235);


 
/* STEP 4P/12 */
INSERT INTO BOAC_DIM_PARTY 
(DIM_KEY, BC_CURR_NAME, BC_IDENTIFIER, BC_IS_ACTIVE, BC_IS_INSURED, BC_IS_LEGAL_ENTITY, BC_OBJECT_ID, 
BP_CURR_NAME, BP_FULL_NAME, BP_FK_HOME_COUNTRY, BP_NAIC_IDENTIFIER, BP_FED_IDENTIFIER, BP_FRK_ACCESS_CODE, 
BP_FRK_STATUS, BP_NAME_ACCESS_CODE, BP_NAME_STATUS, BP_IDENTIFIER, BP_IS_ACTIVE, BP_IS_BASE_COMPANY, 
BP_IS_INSURED, BP_OBJECT_ID, BP_SUBCLASS, BP_C_ISO_ALPHA_3, BP_COUNTRY_NAME, 
RP_CURR_NAME, RP_FULL_NAME, RP_FK_HOME_COUNTRY, RP_NAIC_IDENTIFIER, RP_FED_IDENTIFIER, RP_FRK_ACCESS_CODE, 
RP_FRK_STATUS, RP_NAME_ACCESS_CODE, RP_NAME_STATUS, RP_IDENTIFIER, RP_IS_ACTIVE, RP_IS_BASE_COMPANY, 
RP_IS_INSURED, RP_OBJECT_ID, RP_SUBCLASS, RP_C_ISO_ALPHA_3, RP_COUNTRY_NAME, OBJECT_ID_COMBINED,
BP_SHORT_NAME, RP_SHORT_NAME)
(SELECT DIM_KEY + S.MAX_KEY_PARTY,
BC_CURR_NAME, BC_IDENTIFIER, BC_IS_ACTIVE, BC_IS_INSURED, BC_IS_LEGAL_ENTITY, BC_OBJECT_ID, 
BP_CURR_NAME, BP_FULL_NAME, BP_FK_HOME_COUNTRY, BP_NAIC_IDENTIFIER, BP_FED_IDENTIFIER, BP_FRK_ACCESS_CODE, 
BP_FRK_STATUS, BP_NAME_ACCESS_CODE, BP_NAME_STATUS, BP_IDENTIFIER, BP_IS_ACTIVE, BP_IS_BASE_COMPANY, 
BP_IS_INSURED, BP_OBJECT_ID, BP_SUBCLASS, BP_C_ISO_ALPHA_3, BP_COUNTRY_NAME, 
RP_CURR_NAME, RP_FULL_NAME, RP_FK_HOME_COUNTRY, RP_NAIC_IDENTIFIER, RP_FED_IDENTIFIER, RP_FRK_ACCESS_CODE, 
RP_FRK_STATUS, RP_NAME_ACCESS_CODE, RP_NAME_STATUS, RP_IDENTIFIER, RP_IS_ACTIVE, RP_IS_BASE_COMPANY, 
RP_IS_INSURED, RP_OBJECT_ID, RP_SUBCLASS, RP_C_ISO_ALPHA_3, RP_COUNTRY_NAME, OBJECT_ID_COMBINED,
BP_SHORT_NAME, RP_SHORT_NAME
FROM BOAC_WK2_PARTY WK2, BOAC_STATUS S);

/* STEP 4P/13 */
UPDATE BOAC_STATUS 
SET MAX_KEY_PARTY = MAX_KEY_PARTY + (SELECT MAX(DIM_KEY) FROM BOAC_WK2_PARTY)
WHERE EXISTS (SELECT * FROM BOAC_WK2_PARTY) ;

/* STEP 4R */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','4R',NULL)

TRUNCATE TABLE BOAC_WK1_RISKAREA;

TRUNCATE TABLE BOAC_WK2_RISKAREA;

/* STEP 4R/1 */
INSERT INTO BOAC_WK1_RISKAREA (OBJECT_ID)
(SELECT DISTINCT FK_I_COUNTRY FROM ACC_CLASSIFIC A, BOAC_WK1_FACT F 
WHERE F.FK_CLASSIFICATION = A.OBJECT_ID
AND  F.FK_CLASSIFICATION IS NOT NULL);

/* STEP 4R/2 */
DELETE FROM BOAC_WK1_RISKAREA
WHERE EXISTS 
(SELECT * FROM BOAC_TRN_RISKAREA T  
WHERE T.FK_I_COUNTRY  = BOAC_WK1_RISKAREA.OBJECT_ID);

/* STEP 4R/3 */
INSERT INTO BOAC_WK2_RISKAREA
(SUBCLASS, OBJECT_ID, IS_ACTIVE, FK_NOTE, NAME, CODE,  
/* COUNTRY ATTRIBUTES */ 
C_OBJECT_ID, C_IS_ACTIVE, C_FK_NOTE, C_SHORT_NAME, C_ISO_ALPHA_2, C_ISO_ALPHA_3, C_ISO_NUMERIC, 
C_PHONE_PREFIX, C_TELEX_PREFIX, C_ALTERNATE_ID, C_USE_STATE, C_HAS_ZIP_CODES, C_IS_LAUTRO_COUNTRY, 
C_NAME, C_FK_MAIN_CURR, C_FRK_ADDR_FORMAT, C_FRK_LANGUAGE)
SELECT LA.SUBCLASS, LA.OBJECT_ID, LA.IS_ACTIVE, LA.FK_NOTE,  LA.NAME, LA.CODE,
LA.OBJECT_ID, LA.IS_ACTIVE, LA.FK_NOTE, LA.SHORT_NAME, LA.ISO_ALPHA_2, LA.ISO_ALPHA_3, LA.ISO_NUMERIC, 
LA.PHONE_PREFIX, LA.TELEX_PREFIX, LA.ALTERNATE_ID, LA.USE_STATE, LA.HAS_ZIP_CODES, LA.IS_LAUTRO_COUNTRY, 
LA.NAME, FK_MAIN_CURR, FRK_ADDRESS_FORMAT, FRK_LANGUAGE
FROM BOAC_WK1_RISKAREA H1, LEGAL_AREA LA
WHERE H1.OBJECT_ID = LA.OBJECT_ID 
AND LA.SUBCLASS = 1   /* COUNTRY */;

/* STEP 4R/4 */
INSERT INTO BOAC_WK2_RISKAREA
(SUBCLASS, OBJECT_ID, IS_ACTIVE, FK_NOTE, NAME, CODE,  
C_OBJECT_ID, C_IS_ACTIVE, C_FK_NOTE, C_SHORT_NAME, C_ISO_ALPHA_2, 
C_ISO_ALPHA_3, C_ISO_NUMERIC, C_PHONE_PREFIX, C_TELEX_PREFIX, 
C_ALTERNATE_ID, C_USE_STATE, C_HAS_ZIP_CODES, C_IS_LAUTRO_COUNTRY, 
C_NAME, C_FK_MAIN_CURR, C_FRK_ADDR_FORMAT, C_FRK_LANGUAGE,
S_OBJECT_ID, S_IS_ACTIVE,  
S_NAME, S_CODE,  S_FK_NOTE)
(SELECT ST.SUBCLASS, ST.OBJECT_ID, ST.IS_ACTIVE, ST.FK_NOTE, ST.NAME, ST.CODE,  
CO.OBJECT_ID, CO.IS_ACTIVE, CO.FK_NOTE, CO.SHORT_NAME, CO.ISO_ALPHA_2, 
CO.ISO_ALPHA_3, CO.ISO_NUMERIC, CO.PHONE_PREFIX, CO.TELEX_PREFIX, 
CO.ALTERNATE_ID, CO.USE_STATE, CO.HAS_ZIP_CODES, CO.IS_LAUTRO_COUNTRY, 
CO.NAME, CO.FK_MAIN_CURR, CO.FRK_ADDRESS_FORMAT, CO.FRK_LANGUAGE,
ST.OBJECT_ID, ST.IS_ACTIVE, ST.NAME, ST.CODE,  ST.FK_NOTE
FROM BOAC_WK1_RISKAREA WK1, LEGAL_AREA ST, LEGAL_AREA CO
WHERE WK1.OBJECT_ID = ST.OBJECT_ID
AND ST.FK_COUNTRY = CO.OBJECT_ID 
AND ST.SUBCLASS = 2)   /* STATE */;


/* STEP 4R/5 */
INSERT INTO BOAC_WK2_RISKAREA
(SUBCLASS, OBJECT_ID, IS_ACTIVE, FK_NOTE, NAME, CODE,  
CG_OBJECT_ID, CG_IS_ACTIVE, CG_FK_NOTE,  CG_NAME, CG_CODE, CG_FRK_AREA_GRP_C, CG_FRK_EDI_JV_GRP)
SELECT CG.SUBCLASS, CG.OBJECT_ID, CG.IS_ACTIVE, CG.FK_NOTE, CG.NAME, CG.CODE,  
CG.OBJECT_ID, CG.IS_ACTIVE, CG.FK_NOTE,  CG.NAME, CG.CODE, CG.FRK_AREA_GRP_CTGRY, CG.FRK_EDI_JV_GRP
FROM BOAC_WK1_RISKAREA WK1, LEGAL_AREA CG
WHERE WK1.OBJECT_ID = CG.OBJECT_ID
AND CG.SUBCLASS = 4    /* COUNTRY GROUP */;

/* STEP 4R/7 */
INSERT INTO BOAC_WK2_RISKAREA
(SUBCLASS, OBJECT_ID, IS_ACTIVE, FK_NOTE, NAME, CODE,  
C_OBJECT_ID, C_IS_ACTIVE, C_FK_NOTE, C_SHORT_NAME, C_ISO_ALPHA_2, 
C_ISO_ALPHA_3, C_ISO_NUMERIC, C_PHONE_PREFIX, C_TELEX_PREFIX, 
C_ALTERNATE_ID, C_USE_STATE, C_HAS_ZIP_CODES, C_IS_LAUTRO_COUNTRY, 
C_NAME, C_FK_MAIN_CURR, C_FRK_ADDR_FORMAT, C_FRK_LANGUAGE,
SG_OBJECT_ID, SG_IS_ACTIVE,  
SG_NAME, SG_CODE,  SG_FK_NOTE)
(SELECT ST.SUBCLASS, ST.OBJECT_ID, ST.IS_ACTIVE, ST.FK_NOTE, ST.NAME, ST.CODE,  
CO.OBJECT_ID, CO.IS_ACTIVE, CO.FK_NOTE, CO.SHORT_NAME, CO.ISO_ALPHA_2, 
CO.ISO_ALPHA_3, CO.ISO_NUMERIC, CO.PHONE_PREFIX, CO.TELEX_PREFIX, 
CO.ALTERNATE_ID, CO.USE_STATE, CO.HAS_ZIP_CODES, CO.IS_LAUTRO_COUNTRY, 
CO.NAME, CO.FK_MAIN_CURR, CO.FRK_ADDRESS_FORMAT, CO.FRK_LANGUAGE,
ST.OBJECT_ID, ST.IS_ACTIVE, ST.NAME, ST.CODE,  ST.FK_NOTE
FROM BOAC_WK1_RISKAREA WK1, LEGAL_AREA ST, LEGAL_AREA CO
WHERE WK1.OBJECT_ID = ST.OBJECT_ID
AND ST.FK_COUNTRY = CO.OBJECT_ID 
AND ST.SUBCLASS = 5)   /* STATE GROUP */;

/* STEP 4R/8 */
/* NOT NEEDED - USING IDENTITY COLUMN */

/* STEP 4R/9 */
INSERT INTO BOAC_DIM_RISKAREA 
(DIM_KEY, SUBCLASS, OBJECT_ID, IS_ACTIVE, FK_NOTE, NAME, CODE,  
C_OBJECT_ID, C_IS_ACTIVE, C_FK_NOTE, C_SHORT_NAME, C_ISO_ALPHA_2, 
C_ISO_ALPHA_3, C_ISO_NUMERIC, C_PHONE_PREFIX, C_TELEX_PREFIX, 
C_ALTERNATE_ID, C_USE_STATE, C_HAS_ZIP_CODES, C_IS_LAUTRO_COUNTRY, 
C_NAME, C_FK_MAIN_CURR, C_FRK_ADDR_FORMAT, C_FRK_LANGUAGE,
C_NAME_ADDR_FORMAT, C_NAME_LANGUAGE, 
S_OBJECT_ID, S_IS_ACTIVE, S_NAME, S_CODE,  S_FK_NOTE,
SG_OBJECT_ID, SG_IS_ACTIVE, SG_FK_NOTE, SG_NAME, SG_CODE, 
SG_FRK_AREA_GRP_C, SG_NAME_AREA_GRP_C, 
CG_OBJECT_ID, CG_IS_ACTIVE, CG_FK_NOTE, CG_NAME, CG_CODE, 
CG_FRK_AREA_GRP_C, CG_FRK_EDI_JV_GRP, CG_NAME_AREA_GRP_C, CG_NAME_EDI_JV_GRP)
(SELECT DIM_KEY + MAX_KEY_RISKAREA, SUBCLASS, OBJECT_ID, IS_ACTIVE, FK_NOTE, NAME, CODE,  
C_OBJECT_ID, C_IS_ACTIVE, C_FK_NOTE, C_SHORT_NAME, C_ISO_ALPHA_2, 
C_ISO_ALPHA_3, C_ISO_NUMERIC, C_PHONE_PREFIX, C_TELEX_PREFIX, 
C_ALTERNATE_ID, C_USE_STATE, C_HAS_ZIP_CODES, C_IS_LAUTRO_COUNTRY, 
C_NAME, C_FK_MAIN_CURR, C_FRK_ADDR_FORMAT, C_FRK_LANGUAGE,
C_NAME_ADDR_FORMAT, C_NAME_LANGUAGE, 
S_OBJECT_ID, S_IS_ACTIVE, S_NAME, S_CODE,  S_FK_NOTE,
SG_OBJECT_ID, SG_IS_ACTIVE, SG_FK_NOTE, SG_NAME, SG_CODE, 
SG_FRK_AREA_GRP_C, SG_NAME_AREA_GRP_C, 
CG_OBJECT_ID, CG_IS_ACTIVE, CG_FK_NOTE, CG_NAME, CG_CODE, 
CG_FRK_AREA_GRP_C, CG_FRK_EDI_JV_GRP, CG_NAME_AREA_GRP_C, CG_NAME_EDI_JV_GRP
FROM BOAC_WK2_RISKAREA, BOAC_STATUS);

/* STEP 4R/10 */
INSERT INTO BOAC_TRN_RISKAREA (FK_I_COUNTRY, DIM_KEY)
SELECT OBJECT_ID, DIM_KEY + MAX_KEY_RISKAREA FROM BOAC_WK2_RISKAREA, BOAC_STATUS;

/* STEP 4R/11 */
UPDATE BOAC_STATUS 
SET MAX_KEY_RISKAREA = MAX_KEY_RISKAREA + (SELECT MAX(DIM_KEY) FROM BOAC_WK2_RISKAREA)
WHERE EXISTS (SELECT * FROM BOAC_WK2_RISKAREA);


/* STEP 4T */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','4T',NULL)

TRUNCATE TABLE BOAC_WK1_TIME;

/* STEP 4T/1 */
INSERT INTO BOAC_WK1_TIME 
(AC_YEAR, FRK_AC_REF_PERIOD,  BOOKING_YEAR, FRK_BOOKING_PERIOD,
BOOKING_YEAR_2, FRK_BOOKING_PER_2,BOOKING_YEAR_3, FRK_BOOKING_PER_3)
(SELECT DISTINCT AC_YEAR, FRK_AC_REF_PERIOD, BOOKING_YEAR, FRK_BOOKING_PERIOD,
BOOKING_YEAR_2, FRK_BOOKING_PER_2,BOOKING_YEAR_3, FRK_BOOKING_PER_3
FROM BOAC_WK1_FACT);


/* STEP 4T/2 */
UPDATE BOAC_WK1_TIME 
SET COMBINED = CASE WHEN AC_YEAR IS NULL THEN '' ELSE CAST(AC_YEAR AS VARCHAR(4)) END 
+ ISNULL(RTRIM(FRK_AC_REF_PERIOD),'') + '$' 
+ CASE WHEN BOOKING_YEAR IS NULL THEN '' ELSE CAST(BOOKING_YEAR AS VARCHAR(4)) END  + '$'
+ ISNULL(RTRIM(FRK_BOOKING_PERIOD),'') + '$' 
+ CASE WHEN BOOKING_YEAR_2 IS NULL THEN '' ELSE CAST(BOOKING_YEAR_2 AS VARCHAR(4)) END 
+ ISNULL(RTRIM(FRK_BOOKING_PER_2),'') + '$' 
+ CASE WHEN BOOKING_YEAR_3 IS NULL THEN '' ELSE CAST(BOOKING_YEAR_3 AS VARCHAR(4)) END 
+ ISNULL(RTRIM(FRK_BOOKING_PER_3),'');


/* STEP 4T/3 */
DELETE FROM BOAC_WK1_TIME  
WHERE EXISTS
(SELECT * FROM BOAC_DIM_TIME T  
WHERE BOAC_WK1_TIME.COMBINED = T.COMBINED);


/* STEP 4T/4 */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_P = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOKING_PERIOD = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOKING_PERIOD = R.CODE); 


/* STEP 4T/5 */
UPDATE BOAC_WK1_TIME
SET NAME_AC_REF_PERIOD = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 177 AND FRK_AC_REF_PERIOD = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 177 AND FRK_AC_REF_PERIOD = R.CODE); 

/* STEP 4T/6 */
UPDATE BOAC_WK1_TIME
SET FRK_BOOK_Q = 
CASE RTRIM(FRK_BOOKING_PERIOD)
WHEN 'M01' THEN 'Q1'
WHEN 'M02' THEN 'Q1'
WHEN 'M03' THEN 'Q1' 
WHEN 'M04' THEN 'Q2'
WHEN 'M05' THEN 'Q2'
WHEN 'M06' THEN 'Q2'
WHEN 'M07' THEN 'Q3'
WHEN 'M08' THEN 'Q3'
WHEN 'M09' THEN 'Q3' 
WHEN 'M10' THEN 'Q4'
WHEN 'M11' THEN 'Q4'
WHEN 'M12' THEN 'Q4'
WHEN 'Q1' THEN 'Q1' 
WHEN 'Q2' THEN 'Q2' 
WHEN 'Q3' THEN 'Q3' 
WHEN 'Q4' THEN 'Q4' 
WHEN 'HY1' THEN 'Q2' 
WHEN 'HY2' THEN 'Q4' END,
FRK_BOOK_HY = 
CASE RTRIM(FRK_BOOKING_PERIOD)
WHEN 'M01' THEN 'HY1'
WHEN 'M02' THEN 'HY1'
WHEN 'M03' THEN 'HY1' 
WHEN 'M04' THEN 'HY1'
WHEN 'M05' THEN 'HY1'
WHEN 'M06' THEN 'HY1'
WHEN 'M07' THEN 'HY2'
WHEN 'M08' THEN 'HY2'
WHEN 'M09' THEN 'HY2' 
WHEN 'M10' THEN 'HY2'
WHEN 'M11' THEN 'HY2'
WHEN 'M12' THEN 'HY2' 
WHEN 'Q1' THEN 'HY1' 
WHEN 'Q2' THEN 'HY1' 
WHEN 'Q3' THEN 'HY2' 
WHEN 'Q4' THEN 'HY2' 
WHEN 'HY1' THEN 'HY1' 
WHEN 'HY2' THEN 'HY2' END,
FRK_BOOK_Q_2 = 
CASE RTRIM(FRK_BOOKING_PER_2)
WHEN 'M01' THEN 'Q1'
WHEN 'M02' THEN 'Q1'
WHEN 'M03' THEN 'Q1' 
WHEN 'M04' THEN 'Q2'
WHEN 'M05' THEN 'Q2'
WHEN 'M06' THEN 'Q2'
WHEN 'M07' THEN 'Q3'
WHEN 'M08' THEN 'Q3'
WHEN 'M09' THEN 'Q3' 
WHEN 'M10' THEN 'Q4'
WHEN 'M11' THEN 'Q4'
WHEN 'M12' THEN 'Q4'
WHEN 'Q1' THEN 'Q1' 
WHEN 'Q2' THEN 'Q2' 
WHEN 'Q3' THEN 'Q3' 
WHEN 'Q4' THEN 'Q4' 
WHEN 'HY1' THEN 'Q2' 
WHEN 'HY2' THEN 'Q4' END,
FRK_BOOK_HY_2 = 
CASE RTRIM(FRK_BOOKING_PER_2)
WHEN 'M01' THEN 'HY1'
WHEN 'M02' THEN 'HY1'
WHEN 'M03' THEN 'HY1' 
WHEN 'M04' THEN 'HY1'
WHEN 'M05' THEN 'HY1'
WHEN 'M06' THEN 'HY1'
WHEN 'M07' THEN 'HY2'
WHEN 'M08' THEN 'HY2'
WHEN 'M09' THEN 'HY2' 
WHEN 'M10' THEN 'HY2'
WHEN 'M11' THEN 'HY2'
WHEN 'M12' THEN 'HY2' 
WHEN 'Q1' THEN 'HY1' 
WHEN 'Q2' THEN 'HY1' 
WHEN 'Q3' THEN 'HY2' 
WHEN 'Q4' THEN 'HY2' 
WHEN 'HY1' THEN 'HY1' 
WHEN 'HY2' THEN 'HY2' END,
FRK_BOOK_Q_3 = 
CASE RTRIM(FRK_BOOKING_PER_3)
WHEN 'M01' THEN 'Q1'
WHEN 'M02' THEN 'Q1'
WHEN 'M03' THEN 'Q1' 
WHEN 'M04' THEN 'Q2'
WHEN 'M05' THEN 'Q2'
WHEN 'M06' THEN 'Q2'
WHEN 'M07' THEN 'Q3'
WHEN 'M08' THEN 'Q3'
WHEN 'M09' THEN 'Q3' 
WHEN 'M10' THEN 'Q4'
WHEN 'M11' THEN 'Q4'
WHEN 'M12' THEN 'Q4'
WHEN 'Q1' THEN 'Q1' 
WHEN 'Q2' THEN 'Q2' 
WHEN 'Q3' THEN 'Q3' 
WHEN 'Q4' THEN 'Q4' 
WHEN 'HY1' THEN 'Q2' 
WHEN 'HY2' THEN 'Q4' END,
FRK_BOOK_HY_3 = 
CASE RTRIM(FRK_BOOKING_PER_3)
WHEN 'M01' THEN 'HY1'
WHEN 'M02' THEN 'HY1'
WHEN 'M03' THEN 'HY1' 
WHEN 'M04' THEN 'HY1'
WHEN 'M05' THEN 'HY1'
WHEN 'M06' THEN 'HY1'
WHEN 'M07' THEN 'HY2'
WHEN 'M08' THEN 'HY2'
WHEN 'M09' THEN 'HY2' 
WHEN 'M10' THEN 'HY2'
WHEN 'M11' THEN 'HY2'
WHEN 'M12' THEN 'HY2' 
WHEN 'Q1' THEN 'HY1' 
WHEN 'Q2' THEN 'HY1' 
WHEN 'Q3' THEN 'HY2' 
WHEN 'Q4' THEN 'HY2' 
WHEN 'HY1' THEN 'HY1' 
WHEN 'HY2' THEN 'HY2' END


/* STEP 4T/7 */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_Q = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_Q = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_Q = R.CODE); 

/* STEP 4T/8 */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_HY = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_HY = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_HY = R.CODE); 
	
/* STEP 4T/9 */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_P_2 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOKING_PER_2 = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOKING_PER_2 = R.CODE); 

/* STEP 4T/10 */
UPDATE BOAC_WK1_TIME 
SET NAME_BOOK_Q_2 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_Q_2 = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_Q_2 = R.CODE); 

/* STEP 4T/11 */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_HY_2 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_HY_2 = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_HY_2 = R.CODE); 

/* STEP 4T/12 */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_P_3 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOKING_PER_3 = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOKING_PER_3 = R.CODE); 

/* STEP 4T/13 */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_Q_3 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_Q_3 = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_Q_3 = R.CODE); 

/* STEP 4T/14*/
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_HY_3 = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_HY_3 = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_HY_3 = R.CODE); 

/* STEP 4T/15 */	
INSERT INTO BOAC_DIM_TIME (DIM_KEY, AC_YEAR, FRK_AC_REF_PERIOD,  BOOKING_YEAR, 
FRK_BOOKING_PERIOD, COMBINED, NAME_AC_REF_PERIOD, NAME_BOOK_P, 
FRK_BOOK_Q, FRK_BOOK_HY, NAME_BOOK_Q, NAME_BOOK_HY, ACC_YEAR_PER, 
BOOKING_YEAR_P, BOOKING_YEAR_P_2, BOOKING_YEAR_P_3,
BOOKING_YEAR_Q, BOOKING_YEAR_Q_2, BOOKING_YEAR_Q_3,
BOOKING_YEAR_HY, BOOKING_YEAR_HY_2, BOOKING_YEAR_HY_3,
BOOKING_YEAR_2, FRK_BOOKING_PER_2, NAME_BOOK_P_2, 
FRK_BOOK_HY_2, NAME_BOOK_HY_2, FRK_BOOK_Q_2, NAME_BOOK_Q_2,
BOOKING_YEAR_3, FRK_BOOKING_PER_3, NAME_BOOK_P_3, 
FRK_BOOK_HY_3, NAME_BOOK_HY_3, FRK_BOOK_Q_3, NAME_BOOK_Q_3
)
(SELECT  T.DIM_KEY + MAX_KEY_TIME,   
AC_YEAR, FRK_AC_REF_PERIOD,  BOOKING_YEAR, 
FRK_BOOKING_PERIOD, COMBINED, NAME_AC_REF_PERIOD, NAME_BOOK_P, 
FRK_BOOK_Q, FRK_BOOK_HY, NAME_BOOK_Q, NAME_BOOK_HY,
CAST(AC_YEAR AS VARCHAR(4)) +  FRK_AC_REF_PERIOD, 
CAST(BOOKING_YEAR AS VARCHAR(4))+ ' ' + NAME_BOOK_P,CAST(BOOKING_YEAR_2 AS VARCHAR(4))+ ' ' + NAME_BOOK_P_2, CAST(BOOKING_YEAR_3 AS VARCHAR(4))+ ' ' + NAME_BOOK_P_3,
CAST(BOOKING_YEAR AS VARCHAR(4))+ ' ' + NAME_BOOK_Q,CAST(BOOKING_YEAR_2 AS VARCHAR(4))+ ' ' + NAME_BOOK_Q_2, CAST(BOOKING_YEAR_3 AS VARCHAR(4))+ ' ' + NAME_BOOK_Q_3,
CAST(BOOKING_YEAR AS VARCHAR(4))+ ' ' + NAME_BOOK_HY,CAST(BOOKING_YEAR_2 AS VARCHAR(4))+ ' ' + NAME_BOOK_HY_2, CAST(BOOKING_YEAR_3 AS VARCHAR(4))+ ' ' + NAME_BOOK_HY_3,
BOOKING_YEAR_2, FRK_BOOKING_PER_2, NAME_BOOK_P_2, 
FRK_BOOK_HY_2, NAME_BOOK_HY_2, FRK_BOOK_Q_2, NAME_BOOK_Q_2,
BOOKING_YEAR_3, FRK_BOOKING_PER_3, NAME_BOOK_P_3, 
FRK_BOOK_HY_3, NAME_BOOK_HY_3, FRK_BOOK_Q_3, NAME_BOOK_Q_3
FROM BOAC_WK1_TIME T, BOAC_STATUS);

/* STEP 4T/16 */
UPDATE BOAC_STATUS SET MAX_KEY_TIME = MAX_KEY_TIME + (SELECT MAX(DIM_KEY) FROM BOAC_WK1_TIME)
WHERE EXISTS (SELECT * FROM BOAC_WK1_TIME); 

/*  STEP 5A */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC004','CHECKPOINT','5A',NULL)

/* STEP 5A/1 */

/* INCLUDE PENDING: DELETE FROM BOAC_PC_FACT WHERE FRK_STATUS <> 'C'; INCLUDE PENDING END */

INSERT INTO BOAC_PC_FACT
(IS_ESTIMATE, IS_IN_BOOK_CURR, IS_IN_ACCT_CURR, IS_IN_ORIG_CURR,   
NO_TRANSFER_LDGR, IS_SUPI_BASE, 
FRK_ORIGINAL_ACC_PRD,
IDENTIFIER, DATE_OF_BOOKING, DUE_DATE, AC_END_DATE, AC_START_DATE,   
INSTALMENT_NUMBER, 
UW_YEAR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, OCC_YR, AMOUNT, LIQUID_AMOUNT,  
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, 
FK_CURR, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,
ENTRY_CODE, FRK_ACCESS_CODE, 
DIM_KEY_CLASS, DIM_KEY_RISKAREA, DIM_KEY_TIME, DIM_KEY_PARTY, DIM_KEY_NOTE,
OBJECT_ID, FK_WORKSHEET, FK_BALANCE,
FK_SOC, FK_AMENDMENT,  FK_CLAIM_TO_SOC, FK_CLAIM,
FK_INS_PER_ASSUMED, FK_ORIG_CESSION, FK_HEADLINE_LOSS, FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, 
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, FINANCIAL_YEAR, INS_PER_START, INW_INS_PER_START 
/* INCLUDE PENDING: , FRK_STATUS INCLUDE PENDING END */
)
(SELECT IS_ESTIMATE, IS_IN_BOOK_CURR, IS_IN_ACCT_CURR, IS_IN_ORIG_CURR,  
NO_TRANSFER_LDGR, IS_SUPI_BASE, 
FRK_ORIGINAL_ACC_PRD,
IDENTIFIER, DATE_OF_BOOKING, DUE_DATE, AC_END_DATE, AC_START_DATE,   
INSTALMENT_NUMBER, 
UW_YEAR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, OCC_YR, AMOUNT, LIQUID_AMOUNT,  
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, 
FK_CURR, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,
E.CODE, FRK_ACCESS_CODE,  
C.DIM_KEY, R.DIM_KEY, T.DIM_KEY, P.DIM_KEY, N.DIM_KEY,
F.OBJECT_ID, FK_WORKSHEET, FK_BALANCE, 
FK_SOC, FK_AMENDMENT, FK_CLAIM_TO_SOC,FK_CLAIM,
FK_INS_PER_ASSUMED, FK_ORIG_CESSION, FK_HEADLINE_LOSS, #WK3.FK_REP_UNIT_1,  #WK3.FK_REP_UNIT_2, #WK3.FK_REP_UNIT_3, 
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, FINANCIAL_YEAR, F.INS_PER_START, F.INW_INS_PER_START 
/* INCLUDE PENDING: , FRK_STATUS INCLUDE PENDING END */
FROM 
BOAC_DIM_TIME T, 
BOAC_DIM_PARTY P,
BOAC_DIM_NOTE N, 
BOAC_WK1_FACT F 
LEFT OUTER JOIN #WK3 ON (F.OBJECT_ID = #WK3.OBJECT_ID)
LEFT OUTER JOIN BOAC_TRN_RISKAREA R ON (#WK3.FK_RISKAREA = R.FK_I_COUNTRY)
LEFT OUTER JOIN BOAC_TRN_CLASSIFIC C ON ( C.OBJECT_ID = F.FK_CLASSIFICATION)
LEFT OUTER JOIN ENTRY_CODE E ON (F.FK_ENTRY_CODE = E.OBJECT_ID)
WHERE 
F.FRK_SICSNT_SYSTEM = 'P&C'
AND F.TIME_COMBINED = T.COMBINED
AND F.FK_BASE_COMPANY + F.FK_BP + F.FK_SECOND_BP = P.OBJECT_ID_COMBINED
AND CASE WHEN F.FK_LDGR_BAL_NOTE IS NULL THEN 'NULL' ELSE F.FK_LDGR_BAL_NOTE END + 
CASE WHEN F.FK_DTL_COMMENT IS NULL THEN 'NULL' ELSE F.FK_DTL_COMMENT END
+ REPLICATE(' ', 64 - DATALENGTH(CASE WHEN F.FK_LDGR_BAL_NOTE IS NULL THEN 'NULL' ELSE F.FK_LDGR_BAL_NOTE END + 
CASE WHEN F.FK_DTL_COMMENT IS NULL THEN 'NULL' ELSE F.FK_DTL_COMMENT END
)) = N.FK_COMBINED);


/* STEP 5A/2 */

/* INCLUDE PENDING: DELETE FROM BOAC_LF_FACT WHERE FRK_STATUS <> 'C'; INCLUDE PENDING END */

INSERT INTO BOAC_LF_FACT
(IS_ESTIMATE, IS_IN_BOOK_CURR, IS_IN_ACCT_CURR, IS_IN_ORIG_CURR,  
NO_TRANSFER_LDGR, IS_SUPI_BASE, 
FRK_ORIGINAL_ACC_PRD,
IDENTIFIER, DATE_OF_BOOKING, DUE_DATE, AC_END_DATE, AC_START_DATE,   
INSTALMENT_NUMBER, 
UW_YEAR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, OCC_YR, AMOUNT, LIQUID_AMOUNT,  
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, 
FK_CURR, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,
ENTRY_CODE,  FRK_ACCESS_CODE, 
DIM_KEY_CLASS, DIM_KEY_RISKAREA, DIM_KEY_TIME, DIM_KEY_PARTY, DIM_KEY_NOTE,
OBJECT_ID, FK_WORKSHEET,  FK_BALANCE, 
FK_SOC, FK_AMENDMENT,  
FK_INS_PER_ASSUMED, FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, 
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, FINANCIAL_YEAR, INS_PER_START, INW_INS_PER_START 
/* INCLUDE PENDING: , FRK_STATUS INCLUDE PENDING END */
)
(SELECT IS_ESTIMATE, IS_IN_BOOK_CURR, IS_IN_ACCT_CURR, IS_IN_ORIG_CURR,  
NO_TRANSFER_LDGR, IS_SUPI_BASE, 
FRK_ORIGINAL_ACC_PRD,
IDENTIFIER, DATE_OF_BOOKING, DUE_DATE, AC_END_DATE, AC_START_DATE,   
INSTALMENT_NUMBER, 
UW_YEAR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, OCC_YR, AMOUNT, LIQUID_AMOUNT,  
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, 
FK_CURR, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,
E.CODE,  FRK_ACCESS_CODE, 
C.DIM_KEY, R.DIM_KEY, T.DIM_KEY, P.DIM_KEY, N.DIM_KEY, 
F.OBJECT_ID, FK_WORKSHEET,  FK_BALANCE,
FK_SOC, FK_AMENDMENT, 
FK_INS_PER_ASSUMED , #WK3.FK_REP_UNIT_1,  #WK3.FK_REP_UNIT_2, #WK3.FK_REP_UNIT_3, 
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, FINANCIAL_YEAR, F.INS_PER_START, F.INW_INS_PER_START 
/* INCLUDE PENDING: , FRK_STATUS INCLUDE PENDING END */
FROM BOAC_WK1_FACT F, ENTRY_CODE E, BOAC_TRN_CLASSIFIC C, BOAC_TRN_RISKAREA R, BOAC_DIM_TIME T, BOAC_DIM_PARTY P,
BOAC_DIM_NOTE N, #WK3
WHERE F.FK_ENTRY_CODE = E.OBJECT_ID
AND F.FK_CLASSIFICATION = C.OBJECT_ID
AND #WK3.OBJECT_ID = F.OBJECT_ID
AND #WK3.FK_RISKAREA = R.FK_I_COUNTRY
AND F.TIME_COMBINED = T.COMBINED
AND F.FK_BASE_COMPANY + F.FK_BP + F.FK_SECOND_BP = P.OBJECT_ID_COMBINED
AND 
CASE WHEN F.FK_LDGR_BAL_NOTE IS NULL THEN 'NULL' ELSE F.FK_LDGR_BAL_NOTE END + 
CASE WHEN F.FK_DTL_COMMENT IS NULL THEN 'NULL' ELSE F.FK_DTL_COMMENT END
+ REPLICATE(' ', 64 - DATALENGTH(CASE WHEN F.FK_LDGR_BAL_NOTE IS NULL THEN 'NULL' ELSE F.FK_LDGR_BAL_NOTE END + 
CASE WHEN F.FK_DTL_COMMENT IS NULL THEN 'NULL' ELSE F.FK_DTL_COMMENT END
)) = N.FK_COMBINED
AND F.FRK_SICSNT_SYSTEM = 'LIFE' );

/*  STEP 6 */


UPDATE BOAC_STATUS SET COMPLETED_BATCH = CURRENT_BATCH WHERE CURRENT_BATCH > COMPLETED_BATCH;

IF @V_LOGLEVEL > 0 
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
SELECT GETDATE(),'BOAC004','SCRIPT END','',CURRENT_BATCH 
FROM BOAC_STATUS

/* END SCRIPT */

GO


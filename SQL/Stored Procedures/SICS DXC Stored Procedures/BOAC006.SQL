/****** Object:  StoredProcedure [dbo].[BOAC006]    Script Date: 4/24/2023 3:17:47 PM ******/
DROP PROCEDURE [dbo].[BOAC006]
GO

/****** Object:  StoredProcedure [dbo].[BOAC006]    Script Date: 4/24/2023 3:17:47 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[BOAC006]
(@METHOD VARCHAR(1) = '', @LOGLEVEL INT = 1)
AS

/* VERSION 4.6.1 */

DECLARE @V_BATCH_NO INT 
DECLARE @V_IS_INITIAL_LOAD INT /* 0 = FALSE 1 = TRUE */
DECLARE @V_UWY INT
DECLARE @V_LOGLEVEL INT


SET @V_LOGLEVEL = @LOGLEVEL

/* LOGLEVEL 0 NO LOGGING */
/* LOGLEVEL 1 BASIC */
/* LOGLEVEL 2 DETAILED */
/* LOGLEVEL 3 CHECKPOINTS FOR PERFORMANCE CHECK */
/* LOGLEVEL 4 DEBUG */

IF @V_LOGLEVEL > 0 
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
SELECT GETDATE(),'BOAC006','SCRIPT START','4.6.1',CURRENT_BATCH 
FROM BOAC_STATUS

IF @V_LOGLEVEL > 0 
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
SELECT GETDATE(),'BOAC006','METHOD = ' + @METHOD,'',CURRENT_BATCH 
FROM BOAC_STATUS

IF @METHOD = '' 
BEGIN

INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
SELECT GETDATE(),'BOAC006','NO METHOD SELECTED','',CURRENT_BATCH 
FROM BOAC_STATUS

RETURN /* NO METHOD SELECTED */
END


SET @V_IS_INITIAL_LOAD = 0

/* CHECK IF THIS IS THE INTIAL LOAD */

SET @V_BATCH_NO = (SELECT CURRENT_BATCH FROM BOAC_STATUS)

IF @V_BATCH_NO = 1 
SET @V_IS_INITIAL_LOAD = 1
ELSE SET @V_IS_INITIAL_LOAD = 0

/* END CHECK */

/* STEP 7 */

/* INCLUDE PENDING: DELETE FROM BOAC_WK1_FACT WHERE FRK_STATUS <> 'C'; INCLUDE PENDING END */

/* STEP 7A P&C */
/* THIS STEP WILL PRODUCE NEW ROWS ONLY ONCE A YEAR: */
/* WHEN A NEW ACCOUNTING YEAR HAS BEEN ENTERED FOR THE FIRST TIME */


/* STEP 7A/1 P&C */
UPDATE BOAC_STATUS  
SET PC_INCREASE_A_YEAR = 'Y' 
WHERE EXISTS 
(SELECT * FROM BOAC_WK1_FACT F 
WHERE F.FRK_SICSNT_SYSTEM  = 'P&C' 
AND (AC_YEAR > BOAC_STATUS.PC_MAX_A_RES_YEAR or BOAC_STATUS.PC_MAX_A_RES_YEAR is NULL));

TRUNCATE TABLE BOAC_WK2_FACT;

/* STEP 7A/2 P&C */
INSERT INTO BOAC_WK2_FACT (
FK_INS_PER_ASSUMED,   
AC_YEAR, AMOUNT, BOOKING_YEAR, DATE_OF_BOOKING, DIM_KEY_CLASS, 
DIM_KEY_NOTE, DIM_KEY_PARTY, DIM_KEY_RISKAREA, DUE_DATE, 
ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_BALANCE,  
FK_CURR,    
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3,  FK_SOC, 
FK_WORKSHEET, FRK_AC_REF_PERIOD, FRK_ACCESS_CODE, FRK_BOOKING_PERIOD, FRK_ORIGINAL_ACC_PRD,  
FRK_SICSNT_SYSTEM,  FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, 
IDENTIFIER, IS_ESTIMATE, IS_IN_ACCT_CURR, IS_IN_BOOK_CURR, 
IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, TIME_COMBINED, UW_YEAR, 
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
SELECT
FK_INS_PER_ASSUMED,
T.AC_YEAR + 1, SUM(AMOUNT), NULL, MAX(DATE_OF_BOOKING), DIM_KEY_CLASS, 
0, DIM_KEY_PARTY, DIM_KEY_RISKAREA, MAX(DUE_DATE), 
RTRIM(CASE F.ORIGIN WHEN 'A' THEN '' ELSE 'A' END + ENTRY_CODE), 
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, MAX(FK_BALANCE),
FK_CURR,   
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3,  FK_SOC, 
MAX(FK_WORKSHEET), 'AYR', FRK_ACCESS_CODE, NULL, FRK_ORIGINAL_ACC_PRD,  
'P&C',  SUM(FUNC_CURR_AMOUNT_1), SUM(FUNC_CURR_AMOUNT_2),
'RESERVE' + CAST((T.AC_YEAR + 1) AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR,IS_IN_BOOK_CURR, 
IS_IN_ORIG_CURR, IS_SUPI_BASE, 0, NO_TRANSFER_LDGR, 'RESERVE' + CAST((T.AC_YEAR + 1) AS VARCHAR(4)), 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, CAST((T.AC_YEAR + 1) AS VARCHAR(4)) + 'AYR' + '$$$',  UW_YEAR, 
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_PC_FACT F, BOAC_DIM_TIME T, BOAC_DIM_ENTRY_CODE E, BOAC_STATUS S
WHERE F.DIM_KEY_TIME = T.DIM_KEY
AND F.ENTRY_CODE = E.CODE
AND T.AC_YEAR = PC_MAX_A_RES_YEAR  
AND E.CAT_CODE = 'RES'
AND PC_INCREASE_A_YEAR = 'Y'
GROUP BY  
FK_INS_PER_ASSUMED,
T.AC_YEAR + 1, DIM_KEY_CLASS, 
DIM_KEY_PARTY, DIM_KEY_RISKAREA, 
RTRIM(CASE F.ORIGIN WHEN 'A' THEN '' ELSE 'A' END + ENTRY_CODE),
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,  
FK_CURR,   
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3,  FK_SOC, 
FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD,  
'RESERVE' + CAST((T.AC_YEAR + 1) AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR,IS_IN_BOOK_CURR, 
IS_IN_ORIG_CURR, IS_SUPI_BASE, NO_TRANSFER_LDGR, 'RESERVE' + CAST((T.AC_YEAR + 1) AS VARCHAR(4)), 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, CAST((T.AC_YEAR + 1) AS VARCHAR(4)) + 'AYR' + '$$$',  UW_YEAR, 
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
HAVING SUM(AMOUNT) <> 0; 

TRUNCATE TABLE BOAC_WK1_TIME;

/* STEP 7A/3 P&C */
INSERT INTO BOAC_WK1_TIME 
(AC_YEAR, FRK_AC_REF_PERIOD)
(SELECT DISTINCT AC_YEAR, FRK_AC_REF_PERIOD
FROM BOAC_WK2_FACT);

/* STEP 7A/4 P&C */
UPDATE BOAC_WK1_TIME 
SET COMBINED = CAST(AC_YEAR AS VARCHAR(4)) + RTRIM(FRK_AC_REF_PERIOD) + '$$$'; 

/* STEP 7A/5 P&C */
DELETE FROM BOAC_WK1_TIME  
WHERE EXISTS
(SELECT * FROM BOAC_DIM_TIME T  
WHERE BOAC_WK1_TIME.COMBINED = T.COMBINED);

/* STEP 7A/6 P&C */
UPDATE BOAC_WK1_TIME 
SET NAME_AC_REF_PERIOD = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 177 AND FRK_AC_REF_PERIOD = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 177 AND FRK_AC_REF_PERIOD = R.CODE); 

/* STEP 7A/7 P&C */
INSERT INTO BOAC_DIM_TIME (DIM_KEY, AC_YEAR, FRK_AC_REF_PERIOD,   
COMBINED, NAME_AC_REF_PERIOD, ACC_YEAR_PER)
(SELECT  T.DIM_KEY + MAX_KEY_TIME,   
AC_YEAR, FRK_AC_REF_PERIOD,   
COMBINED, NAME_AC_REF_PERIOD, CAST(AC_YEAR AS VARCHAR(4)) + FRK_AC_REF_PERIOD
FROM BOAC_WK1_TIME T, BOAC_STATUS);

/* STEP 7A/8 P&C */
UPDATE BOAC_STATUS SET MAX_KEY_TIME = MAX_KEY_TIME + (SELECT MAX(DIM_KEY) FROM BOAC_WK1_TIME)
WHERE EXISTS (SELECT * FROM BOAC_WK1_TIME); 


/* STEP 7A/9 P&C */
INSERT INTO BOAC_PC_FACT
(AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, ORIGIN, 
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START
)
(SELECT
AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, T.DIM_KEY, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, 'A',
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_WK2_FACT F  , BOAC_DIM_TIME T 
WHERE TIME_COMBINED =  T.COMBINED
AND F.FRK_SICSNT_SYSTEM = 'P&C');

/* STEP 7A/10 P&C */
UPDATE BOAC_STATUS SET PC_MAX_A_RES_YEAR = PC_MAX_A_RES_YEAR + 1, PC_INCREASE_A_YEAR = 'N'
 WHERE (SELECT PC_INCREASE_A_YEAR FROM BOAC_STATUS)  = 'Y';

/* STEP 7A LIFE */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','7A LIFE',NULL)

/* THIS STEP WILL PRODUCE NEW ROWS ONLY ONCE A YEAR: */
/* WHEN A NEW ACCOUNTING YEAR HAS BEEN ENTERED FOR THE FIRST TIME */

/* STEP 7A/1 LIFE */
UPDATE BOAC_STATUS  
SET LF_INCREASE_A_YEAR = 'Y' 
WHERE EXISTS 
(SELECT * FROM BOAC_WK1_FACT F 
WHERE F.FRK_SICSNT_SYSTEM  = 'LIFE' 
AND (AC_YEAR > BOAC_STATUS.LF_MAX_A_RES_YEAR or BOAC_STATUS.LF_MAX_A_RES_YEAR is NULL));

TRUNCATE TABLE BOAC_WK2_FACT;

/* STEP 7A/2 LIFE */
INSERT INTO BOAC_WK2_FACT (
FK_INS_PER_ASSUMED,   
AC_YEAR, AMOUNT, BOOKING_YEAR, DATE_OF_BOOKING, DIM_KEY_CLASS, 
DIM_KEY_NOTE, DIM_KEY_PARTY, DIM_KEY_RISKAREA, DUE_DATE, 
ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_BALANCE,  
FK_CURR,    
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3,  FK_SOC, 
FK_WORKSHEET, FRK_AC_REF_PERIOD, FRK_ACCESS_CODE, FRK_BOOKING_PERIOD, FRK_ORIGINAL_ACC_PRD,  
FRK_SICSNT_SYSTEM,  FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, 
IDENTIFIER, IS_ESTIMATE, IS_IN_ACCT_CURR, IS_IN_BOOK_CURR, 
IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, TIME_COMBINED, UW_YEAR,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
SELECT
FK_INS_PER_ASSUMED,
T.AC_YEAR + 1, SUM(AMOUNT), NULL, MAX(DATE_OF_BOOKING), DIM_KEY_CLASS, 
0, DIM_KEY_PARTY, DIM_KEY_RISKAREA, MAX(DUE_DATE), 
RTRIM(CASE F.ORIGIN WHEN 'A' THEN '' ELSE 'A' END + ENTRY_CODE), 
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, MAX(FK_BALANCE),  
FK_CURR,   
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3,  FK_SOC, 
MAX(FK_WORKSHEET), 'AYR', FRK_ACCESS_CODE, NULL, FRK_ORIGINAL_ACC_PRD,  
'LIFE',  SUM(FUNC_CURR_AMOUNT_1), SUM(FUNC_CURR_AMOUNT_2),
'RESERVE' + CAST((T.AC_YEAR + 1) AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR,IS_IN_BOOK_CURR, 
IS_IN_ORIG_CURR, IS_SUPI_BASE, 0, NO_TRANSFER_LDGR, 'RESERVE' + CAST((T.AC_YEAR + 1) AS VARCHAR(4)), 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, CAST((T.AC_YEAR + 1) AS VARCHAR(4)) + 'AYR' + '$$$',  UW_YEAR,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_LF_FACT F, BOAC_DIM_TIME T, BOAC_DIM_ENTRY_CODE E, BOAC_STATUS S
WHERE F.DIM_KEY_TIME = T.DIM_KEY
AND F.ENTRY_CODE = E.CODE
AND T.AC_YEAR = LF_MAX_A_RES_YEAR  
AND E.CAT_CODE = 'RES'
AND LF_INCREASE_A_YEAR = 'Y'
GROUP BY  
FK_INS_PER_ASSUMED,
T.AC_YEAR + 1, DIM_KEY_CLASS, 
DIM_KEY_PARTY, DIM_KEY_RISKAREA, 
RTRIM(CASE F.ORIGIN WHEN 'A' THEN '' ELSE 'A' END + ENTRY_CODE),  
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,  
FK_CURR,   
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3,  FK_SOC, 
FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD,  
'RESERVE' + CAST((T.AC_YEAR + 1) AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR,IS_IN_BOOK_CURR, 
IS_IN_ORIG_CURR, IS_SUPI_BASE, NO_TRANSFER_LDGR, 'RESERVE' + CAST((T.AC_YEAR + 1) AS VARCHAR(4)), 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, CAST((T.AC_YEAR + 1) AS VARCHAR(4)) + 'AYR' + '$$$',  UW_YEAR,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
HAVING SUM(AMOUNT) <> 0; 

TRUNCATE TABLE BOAC_WK1_TIME;

/* STEP 7A/3 LIFE */
INSERT INTO BOAC_WK1_TIME 
(AC_YEAR, FRK_AC_REF_PERIOD)
(SELECT DISTINCT AC_YEAR, FRK_AC_REF_PERIOD
FROM BOAC_WK2_FACT);

/* STEP 7A/4 LIFE */
UPDATE BOAC_WK1_TIME 
SET COMBINED = CAST(AC_YEAR AS VARCHAR(4)) + RTRIM(FRK_AC_REF_PERIOD) + '$$$'; 

/* STEP 7A/5 LIFE */
DELETE FROM BOAC_WK1_TIME  
WHERE EXISTS
(SELECT * FROM BOAC_DIM_TIME T  
WHERE BOAC_WK1_TIME.COMBINED = T.COMBINED);

/* STEP 7A/6 LIFE */
UPDATE BOAC_WK1_TIME 
SET NAME_AC_REF_PERIOD = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 177 AND FRK_AC_REF_PERIOD = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 177 AND FRK_AC_REF_PERIOD = R.CODE); 

/* STEP 7A/7 LIFE */
INSERT INTO BOAC_DIM_TIME (DIM_KEY, AC_YEAR, FRK_AC_REF_PERIOD,   
COMBINED, NAME_AC_REF_PERIOD, ACC_YEAR_PER)
(SELECT  T.DIM_KEY + MAX_KEY_TIME,   
AC_YEAR, FRK_AC_REF_PERIOD,   
COMBINED, NAME_AC_REF_PERIOD, CAST(AC_YEAR AS VARCHAR(4)) + FRK_AC_REF_PERIOD
FROM BOAC_WK1_TIME T, BOAC_STATUS);

/* STEP 7A/8 LIFE */
UPDATE BOAC_STATUS SET MAX_KEY_TIME = MAX_KEY_TIME + (SELECT MAX(DIM_KEY) FROM BOAC_WK1_TIME)
WHERE EXISTS (SELECT * FROM BOAC_WK1_TIME); 

/* STEP 7A/9 LIFE */
INSERT INTO BOAC_LF_FACT
(AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, ORIGIN,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
(SELECT
AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, T.DIM_KEY, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, 'A',
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_WK2_FACT F  , BOAC_DIM_TIME T 
WHERE TIME_COMBINED =  T.COMBINED
AND F.FRK_SICSNT_SYSTEM = 'LIFE');

/* STEP 7A/10 LIFE */
UPDATE BOAC_STATUS SET LF_MAX_A_RES_YEAR = LF_MAX_A_RES_YEAR + 1, LF_INCREASE_A_YEAR = 'N'
 WHERE (SELECT LF_INCREASE_A_YEAR FROM BOAC_STATUS)  = 'Y';

/*  STEP 7 */

/* STEP 7B P&C */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','7B PNC',NULL)

/* THIS STEP WILL PRODUCE NEW ROWS ONLY ONCE A YEAR: */
/* WHEN A NEW BOOKING YEAR HAS BEEN ENTERED FOR THE FIRST TIME */

/* STEP 7B/1 P&C */
UPDATE BOAC_STATUS  
SET PC_INCREASE_B_YEAR = 'Y' 
WHERE EXISTS 
(SELECT * FROM BOAC_WK1_FACT F 
WHERE F.FRK_SICSNT_SYSTEM  = 'P&C' 
AND (BOOKING_YEAR > BOAC_STATUS.PC_MAX_B_RES_YEAR or BOAC_STATUS.PC_MAX_B_RES_YEAR is NULL));

TRUNCATE TABLE BOAC_WK2_FACT;

/* STEP 7B/2 P&C */
INSERT INTO BOAC_WK2_FACT (
FK_INS_PER_ASSUMED,   
AC_YEAR, AMOUNT, BOOKING_YEAR, DATE_OF_BOOKING, DIM_KEY_CLASS, 
DIM_KEY_NOTE, DIM_KEY_PARTY, DIM_KEY_RISKAREA, DUE_DATE, 
ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_BALANCE,  
FK_CURR,    
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3,  FK_SOC, 
FK_WORKSHEET, FRK_AC_REF_PERIOD, FRK_ACCESS_CODE, FRK_BOOKING_PERIOD, FRK_ORIGINAL_ACC_PRD,  
FRK_SICSNT_SYSTEM,  FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, 
IDENTIFIER, IS_ESTIMATE, IS_IN_ACCT_CURR, IS_IN_BOOK_CURR, 
IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, TIME_COMBINED, UW_YEAR,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
SELECT
FK_INS_PER_ASSUMED,
NULL, SUM(AMOUNT), BOOKING_YEAR + 1, MAX(DATE_OF_BOOKING), DIM_KEY_CLASS, 
0, DIM_KEY_PARTY, DIM_KEY_RISKAREA, MAX(DUE_DATE), 
RTRIM(CASE F.ORIGIN WHEN 'B' THEN '' ELSE 'B' END + ENTRY_CODE), 
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, MAX(FK_BALANCE),  
FK_CURR,   
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3,  FK_SOC, 
MAX(FK_WORKSHEET), NULL, FRK_ACCESS_CODE, 'M01', FRK_ORIGINAL_ACC_PRD,  
'P&C',  SUM(FUNC_CURR_AMOUNT_1), SUM(FUNC_CURR_AMOUNT_2),
'RESERVE' + CAST((T.BOOKING_YEAR + 1) AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR,IS_IN_BOOK_CURR, 
IS_IN_ORIG_CURR, IS_SUPI_BASE, 0, NO_TRANSFER_LDGR, 'RESERVE' + CAST((T.BOOKING_YEAR + 1) AS VARCHAR(4)), 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, '$' + CAST((T.BOOKING_YEAR + 1) AS VARCHAR(4)) + 'M01$$',  UW_YEAR,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_PC_FACT F, BOAC_DIM_TIME T, BOAC_DIM_ENTRY_CODE E, BOAC_STATUS S
WHERE F.DIM_KEY_TIME = T.DIM_KEY
AND F.ENTRY_CODE = E.CODE
AND T.BOOKING_YEAR = PC_MAX_B_RES_YEAR  
AND E.CAT_CODE = 'RES'
AND PC_INCREASE_B_YEAR = 'Y'
GROUP BY  
FK_INS_PER_ASSUMED,
BOOKING_YEAR + 1, DIM_KEY_CLASS, 
DIM_KEY_PARTY, DIM_KEY_RISKAREA,  
RTRIM(CASE F.ORIGIN WHEN 'B' THEN '' ELSE 'B' END + ENTRY_CODE), 
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,   
FK_CURR,   
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3,  FK_SOC, 
FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD,  
'RESERVE' + CAST((T.BOOKING_YEAR + 1) AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR,IS_IN_BOOK_CURR, 
IS_IN_ORIG_CURR, IS_SUPI_BASE, NO_TRANSFER_LDGR, 'RESERVE' + CAST((T.BOOKING_YEAR + 1) AS VARCHAR(4)), 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, '$' + CAST((T.BOOKING_YEAR + 1) AS VARCHAR(4)) + 'M01$$',  UW_YEAR,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
HAVING SUM(AMOUNT) <> 0; 

TRUNCATE TABLE BOAC_WK1_TIME;

/* STEP 7B/3 P&C */
INSERT INTO BOAC_WK1_TIME 
(BOOKING_YEAR, FRK_BOOKING_PERIOD, FRK_BOOK_Q, FRK_BOOK_HY)
(SELECT DISTINCT BOOKING_YEAR, FRK_BOOKING_PERIOD, 'Q1', 'HY1'
FROM BOAC_WK2_FACT);

/* STEP 7B/4 P&C */
UPDATE BOAC_WK1_TIME 
SET COMBINED = '$' + CAST((BOOKING_YEAR) AS VARCHAR(4)) + 'M01$$'; 

/* STEP 7B/5 P&C */
DELETE FROM BOAC_WK1_TIME  
WHERE EXISTS
(SELECT * FROM BOAC_DIM_TIME T  
WHERE BOAC_WK1_TIME.COMBINED = T.COMBINED);

/* STEP 7B/6-1 P&C */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_P = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOKING_PERIOD = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOKING_PERIOD = R.CODE); 

/* STEP 7B/6-2 P&C */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_Q = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_Q = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_Q = R.CODE); 

/* STEP 7B/6-3 P&C */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_HY = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_HY = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_HY = R.CODE); 
	

/* STEP 7B/7 P&C */
INSERT INTO BOAC_DIM_TIME (DIM_KEY, BOOKING_YEAR, 
FRK_BOOKING_PERIOD, COMBINED, NAME_BOOK_P, 
FRK_BOOK_Q, FRK_BOOK_HY, NAME_BOOK_Q, NAME_BOOK_HY,  
BOOKING_YEAR_P, BOOKING_YEAR_Q, BOOKING_YEAR_HY)
(SELECT  T.DIM_KEY + MAX_KEY_TIME,  BOOKING_YEAR, 
FRK_BOOKING_PERIOD, COMBINED, NAME_BOOK_P, 
FRK_BOOK_Q, FRK_BOOK_HY, NAME_BOOK_Q, NAME_BOOK_HY,
CAST((BOOKING_YEAR) AS VARCHAR(4)) + ' ' + NAME_BOOK_P, 
CAST((BOOKING_YEAR) AS VARCHAR(4)) + ' ' + NAME_BOOK_Q, 
CAST((BOOKING_YEAR) AS VARCHAR(4)) + ' ' + NAME_BOOK_HY 
FROM BOAC_WK1_TIME T, BOAC_STATUS);

/* STEP 7B/8 P&C */
UPDATE BOAC_STATUS SET MAX_KEY_TIME = MAX_KEY_TIME + (SELECT MAX(DIM_KEY) FROM BOAC_WK1_TIME)
WHERE EXISTS (SELECT * FROM BOAC_WK1_TIME); 


/* STEP 7B/9 P&C */
INSERT INTO BOAC_PC_FACT
(AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, ORIGIN,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
(SELECT
AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, T.DIM_KEY, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, 'B',
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_WK2_FACT F  , BOAC_DIM_TIME T 
WHERE TIME_COMBINED =  T.COMBINED
AND F.FRK_SICSNT_SYSTEM = 'P&C');

/* STEP 7B/10 P&C */
UPDATE BOAC_STATUS SET PC_MAX_B_RES_YEAR = PC_MAX_B_RES_YEAR + 1, PC_INCREASE_B_YEAR = 'N'
 WHERE (SELECT PC_INCREASE_B_YEAR FROM BOAC_STATUS)  = 'Y';

/* STEP 7B LIFE */
/* THIS STEP WILL PRODUCE NEW ROWS ONLY ONCE A YEAR: */
/* WHEN A NEW BOOKING YEAR HAS BEEN ENTERED FOR THE FIRST TIME */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','7B LIFE',NULL)

/* STEP 7B/1 LIFE */
UPDATE BOAC_STATUS  
SET LF_INCREASE_B_YEAR = 'Y' 
WHERE EXISTS 
(SELECT * FROM BOAC_WK1_FACT F 
WHERE F.FRK_SICSNT_SYSTEM  = 'LIFE' 
AND (BOOKING_YEAR > BOAC_STATUS.LF_MAX_B_RES_YEAR or BOAC_STATUS.LF_MAX_B_RES_YEAR IS NULL));

TRUNCATE TABLE BOAC_WK2_FACT;

/* STEP 7B/2 LIFE */
INSERT INTO BOAC_WK2_FACT (
FK_INS_PER_ASSUMED,   
AC_YEAR, AMOUNT, BOOKING_YEAR, DATE_OF_BOOKING, DIM_KEY_CLASS, 
DIM_KEY_NOTE, DIM_KEY_PARTY, DIM_KEY_RISKAREA, DUE_DATE, 
ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_BALANCE,  
FK_CURR,    
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3,  FK_SOC, 
FK_WORKSHEET, FRK_AC_REF_PERIOD, FRK_ACCESS_CODE, FRK_BOOKING_PERIOD, FRK_ORIGINAL_ACC_PRD,  
FRK_SICSNT_SYSTEM,  FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, 
IDENTIFIER, IS_ESTIMATE, IS_IN_ACCT_CURR, IS_IN_BOOK_CURR, 
IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, TIME_COMBINED, UW_YEAR,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
SELECT
FK_INS_PER_ASSUMED,
NULL, SUM(AMOUNT), BOOKING_YEAR + 1, MAX(DATE_OF_BOOKING), DIM_KEY_CLASS, 
0, DIM_KEY_PARTY, DIM_KEY_RISKAREA, MAX(DUE_DATE), 
RTRIM(CASE F.ORIGIN WHEN 'B' THEN '' ELSE 'B' END + ENTRY_CODE), 
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, MAX(FK_BALANCE),  
FK_CURR,   
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3,  FK_SOC, 
MAX(FK_WORKSHEET), NULL, FRK_ACCESS_CODE, 'M01', FRK_ORIGINAL_ACC_PRD,  
'LIFE',  SUM(FUNC_CURR_AMOUNT_1), SUM(FUNC_CURR_AMOUNT_2),
'RESERVE' + CAST((T.BOOKING_YEAR + 1) AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR,IS_IN_BOOK_CURR, 
IS_IN_ORIG_CURR, IS_SUPI_BASE, 0, NO_TRANSFER_LDGR, 'RESERVE' + CAST((T.BOOKING_YEAR + 1) AS VARCHAR(4)), 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, '$' + CAST((T.BOOKING_YEAR + 1) AS VARCHAR(4)) + 'M01$$',  UW_YEAR,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_LF_FACT F, BOAC_DIM_TIME T, BOAC_DIM_ENTRY_CODE E, BOAC_STATUS S
WHERE F.DIM_KEY_TIME = T.DIM_KEY
AND F.ENTRY_CODE = E.CODE
AND T.BOOKING_YEAR = LF_MAX_B_RES_YEAR  
AND E.CAT_CODE = 'RES'
AND LF_INCREASE_B_YEAR = 'Y'
GROUP BY  
FK_INS_PER_ASSUMED,
BOOKING_YEAR + 1, DIM_KEY_CLASS, 
DIM_KEY_PARTY, DIM_KEY_RISKAREA,  
RTRIM(CASE F.ORIGIN WHEN 'B' THEN '' ELSE 'B' END + ENTRY_CODE), 
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, 
FK_CURR,   
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3,  FK_SOC, 
FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD,  
'RESERVE' + CAST((T.BOOKING_YEAR + 1) AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR,IS_IN_BOOK_CURR, 
IS_IN_ORIG_CURR, IS_SUPI_BASE, NO_TRANSFER_LDGR, 'RESERVE' + CAST((T.BOOKING_YEAR + 1) AS VARCHAR(4)), 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, '$' + CAST((T.BOOKING_YEAR + 1) AS VARCHAR(4)) + 'M01$$',  UW_YEAR,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
HAVING SUM(AMOUNT) <> 0; 

TRUNCATE TABLE BOAC_WK1_TIME;

/* STEP 7B/3 LIFE */
INSERT INTO BOAC_WK1_TIME 
(BOOKING_YEAR, FRK_BOOKING_PERIOD, FRK_BOOK_Q, FRK_BOOK_HY)
(SELECT DISTINCT BOOKING_YEAR, FRK_BOOKING_PERIOD, 'Q1', 'HY1'
FROM BOAC_WK2_FACT);

/* STEP 7B/4 LIFE */
UPDATE BOAC_WK1_TIME 
SET COMBINED = '$' + CAST((BOOKING_YEAR) AS VARCHAR(4)) + 'M01$$'; 

/* STEP 7B/5 LIFE */
DELETE FROM BOAC_WK1_TIME  
WHERE EXISTS
(SELECT * FROM BOAC_DIM_TIME T  
WHERE BOAC_WK1_TIME.COMBINED = T.COMBINED);

/* STEP 7B/6-1 LIFE */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_P = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOKING_PERIOD = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOKING_PERIOD = R.CODE); 

/* STEP 7B/6-2 LIFE */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_Q = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_Q = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_Q = R.CODE); 

/* STEP 7B/6-3 LIFE */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_HY = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_HY = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND FRK_BOOK_HY = R.CODE); 
	

/* STEP 7B/7 LIFE */
INSERT INTO BOAC_DIM_TIME (DIM_KEY, BOOKING_YEAR, 
FRK_BOOKING_PERIOD, COMBINED, NAME_BOOK_P, 
FRK_BOOK_Q, FRK_BOOK_HY, NAME_BOOK_Q, NAME_BOOK_HY,  
BOOKING_YEAR_P, BOOKING_YEAR_Q, BOOKING_YEAR_HY)
(SELECT  T.DIM_KEY + MAX_KEY_TIME,  BOOKING_YEAR, 
FRK_BOOKING_PERIOD, COMBINED, NAME_BOOK_P, 
FRK_BOOK_Q, FRK_BOOK_HY, NAME_BOOK_Q, NAME_BOOK_HY,
CAST(BOOKING_YEAR AS VARCHAR(4)) + ' ' + NAME_BOOK_P, 
CAST(BOOKING_YEAR AS VARCHAR(4)) + ' ' + NAME_BOOK_Q, 
CAST(BOOKING_YEAR AS VARCHAR(4)) + ' ' + NAME_BOOK_HY 
FROM BOAC_WK1_TIME T, BOAC_STATUS);

/* STEP 7B/8 LIFE */
UPDATE BOAC_STATUS SET MAX_KEY_TIME = MAX_KEY_TIME + (SELECT MAX(DIM_KEY) FROM BOAC_WK1_TIME)
WHERE EXISTS (SELECT * FROM BOAC_WK1_TIME); 

/* STEP 7B/9 LIFE */
INSERT INTO BOAC_LF_FACT
(AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, ORIGIN,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
(SELECT
AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, T.DIM_KEY, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, 'B',
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_WK2_FACT F, BOAC_DIM_TIME T 
WHERE TIME_COMBINED =  T.COMBINED
AND F.FRK_SICSNT_SYSTEM = 'LIFE');

/* STEP 7B/10 LIFE */
UPDATE BOAC_STATUS SET LF_MAX_B_RES_YEAR = LF_MAX_B_RES_YEAR + 1, LF_INCREASE_B_YEAR = 'N'
 WHERE (SELECT LF_INCREASE_B_YEAR FROM BOAC_STATUS)  = 'Y';

/* STEP 8A PREPARE WORK TABLES FOR RESERVES */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8A',NULL)

TRUNCATE TABLE BOAC_WK3_FACT;

IF DBO.BO_CHKINDX('BO_PCF_OBJECTID','BOAC_PC_FACT') = 'N'
CREATE INDEX BO_PCF_OBJECTID ON BOAC_PC_FACT(OBJECT_ID)

INSERT INTO BOAC_WK3_FACT
(AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED, FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, 
FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, 
IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, 
IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,
FRK_SICSNT_SYSTEM, PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
(SELECT NULL, NULL, SUM(F.AMOUNT), MAX(F.DATE_OF_BOOKING), PCF.DIM_KEY_CLASS, 0, PCF.DIM_KEY_PARTY, 
PCF.DIM_KEY_RISKAREA, PCF.DIM_KEY_TIME, MAX(F.DUE_DATE), E.CODE, F.FK_AC_FUNC_CCY, F.FK_AC_FUNC_CCY2, NULL, 
MAX(F.FK_BALANCE), F.FK_CURR, F.FK_INS_PER_ASSUMED, PCF.FK_REP_UNIT_1, PCF.FK_REP_UNIT_2, PCF.FK_REP_UNIT_3, F.FK_SOC, 
MAX(F.FK_WORKSHEET), F.FRK_ACCESS_CODE, NULL, SUM(F.FUNC_CURR_AMOUNT_1), SUM(F.FUNC_CURR_AMOUNT_2), 
F.IDENTIFIER, NULL, F.IS_ESTIMATE, F.IS_IN_ACCT_CURR, F.IS_IN_BOOK_CURR, F.IS_IN_ORIG_CURR, 
F.IS_SUPI_BASE, 0, F.NO_TRANSFER_LDGR, MAX(F.OBJECT_ID), F.OCC_YR, F.ORGNL_ACC_YEAR, F.ORIG_UW_YEAR, F.UW_YEAR,
F.FRK_SICSNT_SYSTEM, F.PRE_PROD, F.PRODUCER, F.INSUR_CAT, F.BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_WK1_FACT F, BOAC_PC_FACT PCF, BOAC_DIM_ENTRY_CODE E
WHERE F.FK_ENTRY_CODE = E.OBJECT_ID
AND F.OBJECT_ID = PCF.OBJECT_ID
AND E.CAT_CODE = 'RES'
GROUP BY  PCF.DIM_KEY_CLASS, PCF.DIM_KEY_PARTY, 
PCF.DIM_KEY_RISKAREA, PCF.DIM_KEY_TIME, E.CODE, F.FK_AC_FUNC_CCY, F.FK_AC_FUNC_CCY2,  
F.FK_CURR, F.FK_INS_PER_ASSUMED, PCF.FK_REP_UNIT_1, PCF.FK_REP_UNIT_2, PCF.FK_REP_UNIT_3, F.FK_SOC, 
F.FRK_ACCESS_CODE, 
F.IDENTIFIER, F.IS_ESTIMATE, F.IS_IN_ACCT_CURR, F.IS_IN_BOOK_CURR, F.IS_IN_ORIG_CURR, 
F.IS_SUPI_BASE, F.NO_TRANSFER_LDGR, F.OCC_YR, F.ORGNL_ACC_YEAR, F.ORIG_UW_YEAR, F.UW_YEAR,
F.FRK_SICSNT_SYSTEM, F.PRE_PROD, F.PRODUCER, F.INSUR_CAT, F.BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START);

/*IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8A',NULL)
TRUNCATE TABLE BOAC_WK3_FACT;*/

IF DBO.BO_CHKINDX('BO_PCF_OBJECTID','BOAC_LF_FACT') = 'N'
CREATE INDEX BO_PCF_OBJECTID ON BOAC_LF_FACT(OBJECT_ID)

INSERT INTO BOAC_WK3_FACT
(AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED, FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, 
FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, 
IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, 
IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,
FRK_SICSNT_SYSTEM, PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
(SELECT NULL, NULL, SUM(F.AMOUNT), MAX(F.DATE_OF_BOOKING), PCF.DIM_KEY_CLASS, 0, PCF.DIM_KEY_PARTY, 
PCF.DIM_KEY_RISKAREA, PCF.DIM_KEY_TIME, MAX(F.DUE_DATE), E.CODE, F.FK_AC_FUNC_CCY, F.FK_AC_FUNC_CCY2, NULL, 
MAX(F.FK_BALANCE), F.FK_CURR, F.FK_INS_PER_ASSUMED, PCF.FK_REP_UNIT_1, PCF.FK_REP_UNIT_2, PCF.FK_REP_UNIT_3, F.FK_SOC, 
MAX(F.FK_WORKSHEET), F.FRK_ACCESS_CODE, NULL, SUM(F.FUNC_CURR_AMOUNT_1), SUM(F.FUNC_CURR_AMOUNT_2), 
F.IDENTIFIER, NULL, F.IS_ESTIMATE, F.IS_IN_ACCT_CURR, F.IS_IN_BOOK_CURR, F.IS_IN_ORIG_CURR, 
F.IS_SUPI_BASE, 0, F.NO_TRANSFER_LDGR, MAX(F.OBJECT_ID), F.OCC_YR, F.ORGNL_ACC_YEAR, F.ORIG_UW_YEAR, F.UW_YEAR,
F.FRK_SICSNT_SYSTEM, F.PRE_PROD, F.PRODUCER, F.INSUR_CAT, F.BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_WK1_FACT F, BOAC_LF_FACT PCF, BOAC_DIM_ENTRY_CODE E
WHERE F.FK_ENTRY_CODE = E.OBJECT_ID
AND F.OBJECT_ID = PCF.OBJECT_ID
AND E.CAT_CODE = 'RES'
GROUP BY  PCF.DIM_KEY_CLASS, PCF.DIM_KEY_PARTY, 
PCF.DIM_KEY_RISKAREA, PCF.DIM_KEY_TIME, E.CODE, F.FK_AC_FUNC_CCY, F.FK_AC_FUNC_CCY2,  
F.FK_CURR, F.FK_INS_PER_ASSUMED, PCF.FK_REP_UNIT_1, PCF.FK_REP_UNIT_2, PCF.FK_REP_UNIT_3, F.FK_SOC, 
F.FRK_ACCESS_CODE, 
F.IDENTIFIER, F.IS_ESTIMATE, F.IS_IN_ACCT_CURR, F.IS_IN_BOOK_CURR, F.IS_IN_ORIG_CURR, 
F.IS_SUPI_BASE, F.NO_TRANSFER_LDGR, F.OCC_YR, F.ORGNL_ACC_YEAR, F.ORIG_UW_YEAR, F.UW_YEAR,
F.FRK_SICSNT_SYSTEM, F.PRE_PROD, F.PRODUCER, F.INSUR_CAT, F.BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START);

/* STEP 8B  */
/* CALCULATE RESERVES POSITIONS FROM NEW RESERVE MOVEMENTS  */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8B',NULL)

/* STEP 8B/1PC */
UPDATE BOAC_STATUS 
SET PC_MAX_A_RES_YEAR = (SELECT MAX(AC_YEAR) FROM BOAC_DIM_TIME T, BOAC_PC_FACT F
WHERE F.DIM_KEY_TIME = T.DIM_KEY
AND T.BOOKING_YEAR IS NOT NULL);

TRUNCATE TABLE BOAC_WK1_YEAR;

/* STEP 8B/2PC */
INSERT INTO BOAC_WK1_YEAR (YEAR)
(SELECT DISTINCT T.AC_YEAR + T2.DIM_KEY 
FROM BOAC_DIM_TIME T, BOAC_DIM_TIME T2, BOAC_STATUS S 
WHERE T2.DIM_KEY < 20 AND T.AC_YEAR + T2.DIM_KEY  <= S.PC_MAX_A_RES_YEAR);

TRUNCATE TABLE BOAC_WK4A_FACT;

/* STEP 8B/3PC */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8B/3PC',NULL)

INSERT INTO BOAC_WK4A_FACT ( 
AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY,DIM_KEY_RISKAREA,DUE_DATE,
ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,      
FK_CLAIM, FK_CLAIM_TO_SOC, FK_HEADLINE_LOSS, FK_ORIG_CESSION,
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, /* OLD_AMOUNT, */ 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, AC_YEAR, FRK_AC_REF_PERIOD, BOOKING_YEAR, FRK_BOOKING_PERIOD, 
TIME_COMBINED, FRK_SICSNT_SYSTEM, ORIGIN,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
SELECT 
SUM(AMOUNT), MAX(DATE_OF_BOOKING),DIM_KEY_CLASS,0,DIM_KEY_PARTY, DIM_KEY_RISKAREA,MAX(DUE_DATE), 
'A' + SUBSTRING(F.ENTRY_CODE,1,4),FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,    
FK_CLAIM, FK_CLAIM_TO_SOC, FK_HEADLINE_LOSS, FK_ORIG_CESSION,
MAX(FK_BALANCE), FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, MAX(FK_WORKSHEET), FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
SUM(FUNC_CURR_AMOUNT_1), SUM(FUNC_CURR_AMOUNT_2), 'RESERVE' + CAST(Y.YEAR AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, 0 , NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,
Y.YEAR, 'AYR', NULL, NULL, CAST(Y.YEAR AS VARCHAR(4)) + 'AYR$$$', FRK_SICSNT_SYSTEM, 'A',
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_WK3_FACT F, BOAC_WK1_YEAR Y, BOAC_DIM_TIME T
WHERE T.AC_YEAR < Y.YEAR AND F.DIM_KEY_TIME = T.DIM_KEY
AND F.FRK_SICSNT_SYSTEM = 'P&C'
GROUP BY 
DIM_KEY_CLASS,DIM_KEY_PARTY, DIM_KEY_RISKAREA, 
'A' + SUBSTRING(F.ENTRY_CODE,1,4),FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,    
FK_CLAIM, FK_CLAIM_TO_SOC, FK_HEADLINE_LOSS, FK_ORIG_CESSION,
FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
'RESERVE' + CAST(Y.YEAR AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,
Y.YEAR, CAST(Y.YEAR AS VARCHAR(4)) + 'AYR$$$', FRK_SICSNT_SYSTEM,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
HAVING SUM(AMOUNT) <> 0; 

TRUNCATE TABLE BOAC_WK1_YEAR;

/* STEP 8B/1LIFE */
UPDATE BOAC_STATUS 
SET LF_MAX_A_RES_YEAR = (SELECT MAX(AC_YEAR) FROM BOAC_DIM_TIME T, BOAC_LF_FACT F
WHERE F.DIM_KEY_TIME = T.DIM_KEY
AND T.BOOKING_YEAR IS NOT NULL);

/* STEP 8B/2LIFE */
INSERT INTO BOAC_WK1_YEAR (YEAR)
(SELECT DISTINCT T.AC_YEAR + T2.DIM_KEY FROM BOAC_DIM_TIME T, BOAC_DIM_TIME T2, BOAC_STATUS S 
WHERE T2.DIM_KEY < 20 AND T.AC_YEAR + T2.DIM_KEY  <= S.LF_MAX_A_RES_YEAR);

/* STEP 8B/3LIFE */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8B/3LIFE',NULL)

INSERT INTO BOAC_WK4A_FACT ( 
AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY,DIM_KEY_RISKAREA,DUE_DATE,
ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,      
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR,
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, AC_YEAR, FRK_AC_REF_PERIOD, BOOKING_YEAR, FRK_BOOKING_PERIOD, TIME_COMBINED,
FRK_SICSNT_SYSTEM, ORIGIN,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
SELECT 
SUM(AMOUNT), MAX(DATE_OF_BOOKING),DIM_KEY_CLASS,0,DIM_KEY_PARTY, DIM_KEY_RISKAREA,MAX(DUE_DATE), 
'A' + SUBSTRING(F.ENTRY_CODE,1,4),FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,    
MAX(FK_BALANCE), FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, MAX(FK_WORKSHEET), FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
SUM(FUNC_CURR_AMOUNT_1), SUM(FUNC_CURR_AMOUNT_2), 'RESERVE' + CAST(Y.YEAR AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, 0 , NO_TRANSFER_LDGR, OBJecT_ID, OCC_YR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,
Y.YEAR, 'AYR', NULL, NULL, CAST(Y.YEAR AS VARCHAR(4)) + 'AYR$$$', FRK_SICSNT_SYSTEM, 'A',
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START
FROM BOAC_WK3_FACT F, BOAC_WK1_YEAR Y, BOAC_DIM_TIME T
WHERE T.AC_YEAR < Y.YEAR AND F.DIM_KEY_TIME = T.DIM_KEY
AND F.FRK_SICSNT_SYSTEM = 'LIFE'
GROUP BY 
DIM_KEY_CLASS,DIM_KEY_PARTY, DIM_KEY_RISKAREA, 
'A' + SUBSTRING(F.ENTRY_CODE,1,4),FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,    
FK_CLAIM, FK_CLAIM_TO_SOC, FK_HEADLINE_LOSS, FK_ORIG_CESSION,
FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
'RESERVE' + CAST(Y.YEAR AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, NO_TRANSFER_LDGR, OBJECt_id, OCC_YR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,
Y.YEAR, CAST(Y.YEAR AS VARCHAR(4)) + 'AYR$$$', FRK_SICSNT_SYSTEM,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START
HAVING SUM(AMOUNT) <> 0  ; 

TRUNCATE TABLE BOAC_WK1_TIME;

/* STEP 8B/4 */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8B/4',NULL)

INSERT INTO BOAC_WK1_TIME 
(AC_YEAR, FRK_AC_REF_PERIOD,  BOOKING_YEAR, 
FRK_BOOKING_PERIOD)
(SELECT DISTINCT AC_YEAR, FRK_AC_REF_PERIOD, BOOKING_YEAR, FRK_BOOKING_PERIOD
FROM BOAC_WK4A_FACT);

/* STEP 8B/5 */
UPDATE BOAC_WK1_TIME 
SET COMBINED = CAST(AC_YEAR AS VARCHAR(4))+ RTRIM(FRK_AC_REF_PERIOD) + '$$$'; 


/* STEP 8B/6 */
DELETE FROM BOAC_WK1_TIME  
WHERE EXISTS
(SELECT * FROM BOAC_DIM_TIME T  
WHERE BOAC_WK1_TIME.COMBINED = T.COMBINED);

/* STEP 8B/7 */
UPDATE BOAC_WK1_TIME
SET NAME_AC_REF_PERIOD = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 177 AND BOAC_WK1_TIME.FRK_AC_REF_PERIOD = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 177 AND BOAC_WK1_TIME.FRK_AC_REF_PERIOD = R.CODE); 

/* STEP 8B/12 */
INSERT INTO BOAC_DIM_TIME (DIM_KEY, AC_YEAR, FRK_AC_REF_PERIOD,  BOOKING_YEAR, 
FRK_BOOKING_PERIOD, COMBINED, NAME_AC_REF_PERIOD, ACC_YEAR_PER)
(SELECT  T.DIM_KEY + MAX_KEY_TIME,   
CAST(AC_YEAR AS VARCHAR(4)), FRK_AC_REF_PERIOD,  BOOKING_YEAR, 
FRK_BOOKING_PERIOD, COMBINED, NAME_AC_REF_PERIOD, 
CAST(AC_YEAR AS VARCHAR(4)) +  FRK_AC_REF_PERIOD
FROM BOAC_WK1_TIME T, BOAC_STATUS);

/* STEP 8B/13 */
UPDATE BOAC_STATUS SET MAX_KEY_TIME = MAX_KEY_TIME + (SELECT MAX(DIM_KEY) FROM BOAC_WK1_TIME)
WHERE EXISTS (SELECT * FROM BOAC_WK1_TIME); 

/* STEP 8B/14 */
UPDATE BOAC_WK4A_FACT
SET DIM_KEY_TIME = 
(SELECT T.DIM_KEY FROM BOAC_DIM_TIME T WHERE BOAC_WK4A_FACT.TIME_COMBINED = T.COMBINED);   

/* STEP 8C */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8C',NULL)

/* STEP 8C/1PC */

UPDATE BOAC_STATUS
SET PC_MAX_B_RES_YEAR = (SELECT MAX(BOOKING_YEAR) FROM BOAC_DIM_TIME T, BOAC_PC_FACT F 
	WHERE F.DIM_KEY_TIME = T.DIM_KEY
	AND AC_YEAR IS NOT NULL );

TRUNCATE TABLE BOAC_WK1_YEAR;

/* STEP 8C/2PC */
INSERT INTO BOAC_WK1_YEAR (YEAR)
(SELECT DISTINCT T.BOOKING_YEAR + T2.DIM_KEY FROM BOAC_DIM_TIME T, BOAC_DIM_TIME T2, BOAC_STATUS S 
WHERE T2.DIM_KEY < 20 AND T.BOOKING_YEAR + T2.DIM_KEY  <= S.PC_MAX_B_RES_YEAR);

--TRUNCATE TABLE #BOAC_WK4B_FACT;

CREATE TABLE #BOAC_WK4B_FACT(
 	[INTEGER_ID] [INTEGER] IDENTITY(1,1) NOT NULL,
	[AC_END_DATE] [DATETIME] NULL,
	[AC_START_DATE] [DATETIME] NULL,
	[AMOUNT] [DECIMAL](22, 2) NULL,
	[DATE_OF_BOOKING] [DATETIME] NULL,
	[DIM_KEY_CLASS] [DECIMAL](38, 0) NULL,
	[DIM_KEY_NOTE] [DECIMAL](38, 0) NULL,
	[DIM_KEY_PARTY] [DECIMAL](38, 0) NULL,
	[DIM_KEY_RISKAREA] [DECIMAL](38, 0) NULL,
	[DIM_KEY_TIME] [DECIMAL](38, 0) NULL,
	[DUE_DATE] [DATETIME] NULL,
	[ENTRY_CODE] [CHAR](5) COLLATE DATABASE_DEFAULT NULL,
	[FK_AC_FUNC_CCY] [VARCHAR](3) COLLATE DATABASE_DEFAULT NULL,
	[FK_AC_FUNC_CCY2] [VARCHAR](3) COLLATE DATABASE_DEFAULT NULL,
	[FK_AMENDMENT] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[FK_BALANCE] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[FK_CURR] [CHAR](3) COLLATE DATABASE_DEFAULT NULL,
	[FK_INS_PER_ASSUMED] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[FK_REP_UNIT_1] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[FK_REP_UNIT_2] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[FK_REP_UNIT_3] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[FK_SOC] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[FK_WORKSHEET] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[FRK_ACCESS_CODE] [VARCHAR](15) COLLATE DATABASE_DEFAULT NULL,
	[FRK_ORIGINAL_ACC_PRD] [VARCHAR](15) COLLATE DATABASE_DEFAULT NULL,
	[FUNC_CURR_AMOUNT_1] [DECIMAL](22, 2) NULL,
	[FUNC_CURR_AMOUNT_2] [DECIMAL](22, 2) NULL,
	[IDENTIFIER] [VARCHAR](26) COLLATE DATABASE_DEFAULT NULL,
	[INSTALMENT_NUMBER] [INT] NULL,
	[IS_ESTIMATE] [CHAR](1) COLLATE DATABASE_DEFAULT NULL,
	[IS_IN_ACCT_CURR] [CHAR](1) COLLATE DATABASE_DEFAULT NULL,
	[IS_IN_BOOK_CURR] [CHAR](1) COLLATE DATABASE_DEFAULT NULL,
	[IS_IN_ORIG_CURR] [CHAR](1) COLLATE DATABASE_DEFAULT NULL,
	[IS_SUPI_BASE] [CHAR](1) COLLATE DATABASE_DEFAULT NULL,
	[LIQUID_AMOUNT] [DECIMAL](22, 2) NULL,
	[NO_TRANSFER_LDGR] [CHAR](1) COLLATE DATABASE_DEFAULT NULL,
	[OBJECT_ID] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[OCC_YR] [INT] NULL,
	[ORGNL_ACC_YEAR] [INT] NULL,
	[ORIGIN] [CHAR](1) COLLATE DATABASE_DEFAULT NULL,
	[ORIG_UW_YEAR] [INT] NULL,
	[UW_YEAR] [INT] NULL,
	[FK_CLAIM] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[FK_CLAIM_TO_SOC] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[FK_HEADLINE_LOSS] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[FK_ORIG_CESSION] [VARCHAR](32) COLLATE DATABASE_DEFAULT NULL,
	[FRK_SICSNT_SYSTEM] [VARCHAR](15) COLLATE DATABASE_DEFAULT NULL,
	[ACTION] [CHAR](1) COLLATE DATABASE_DEFAULT NULL,
	[OLD_AMOUNT] [DECIMAL](22, 2) NULL,
	[TIME_COMBINED] [CHAR](79) COLLATE DATABASE_DEFAULT NULL,
	[AC_YEAR] [INT] NULL,
	[BOOKING_YEAR] [INT] NULL,
	[BOOKING_YEAR_2] [INT] NULL,
	[BOOKING_YEAR_3] [INT] NULL,
	[FRK_AC_REF_PERIOD] [VARCHAR](15) COLLATE DATABASE_DEFAULT NULL,
	[FRK_BOOKING_PERIOD] [VARCHAR](15) COLLATE DATABASE_DEFAULT NULL,
	[FRK_BOOKING_PER_2] [VARCHAR](15) COLLATE DATABASE_DEFAULT NULL,
	[FRK_BOOKING_PER_3] [VARCHAR](15) COLLATE DATABASE_DEFAULT NULL,
	[PRE_PROD] [CHAR](4) COLLATE DATABASE_DEFAULT NULL,
	[PRODUCER] [CHAR](4) COLLATE DATABASE_DEFAULT NULL,
	[INSUR_CAT] [CHAR](3) COLLATE DATABASE_DEFAULT NULL,
	[BUS_CAT] [CHAR](2) COLLATE DATABASE_DEFAULT NULL,
	[FINANCIAL_YEAR] [DECIMAL](4, 0) NULL,
	[FRK_STATUS] [CHAR](7) COLLATE DATABASE_DEFAULT NULL DEFAULT ('C'),
	[INS_PER_START] [DATETIME] NULL,
	[INW_INS_PER_START] [DATETIME] NULL
) 

CREATE CLUSTERED INDEX CIDX_#BOAC_WK4B_FACT ON #BOAC_WK4B_FACT (INTEGER_ID);

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8C_X',NULL)


/* STEP 8C/3PC */
INSERT INTO #BOAC_WK4B_FACT ( 
AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY,DIM_KEY_RISKAREA,DUE_DATE,
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,      
FK_CLAIM, FK_CLAIM_TO_SOC, FK_HEADLINE_LOSS, FK_ORIG_CESSION,
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR,
ENTRY_CODE, AC_YEAR, TIME_COMBINED, FRK_AC_REF_PERIOD, FRK_BOOKING_PERIOD, BOOKING_YEAR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,   
FRK_SICSNT_SYSTEM, ORIGIN, PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
SELECT 
SUM(AMOUNT), MAX(DATE_OF_BOOKING),DIM_KEY_CLASS,0 ,DIM_KEY_PARTY, DIM_KEY_RISKAREA,MAX(DUE_DATE), 
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,    
FK_CLAIM, FK_CLAIM_TO_SOC, FK_HEADLINE_LOSS, FK_ORIG_CESSION,
MAX(FK_BALANCE), FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, MAX(FK_WORKSHEET), FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
SUM(FUNC_CURR_AMOUNT_1), SUM(FUNC_CURR_AMOUNT_2), 'RESERVE' + CAST(Y.YEAR AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, 0 , NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
'B' + SUBSTRING(F.ENTRY_CODE,1,4),
NULL, '$' + CAST(Y.YEAR AS VARCHAR(4)) + 'M01$$', NULL, 'M01', Y.YEAR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,
FRK_SICSNT_SYSTEM, 'B', PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_WK3_FACT F, BOAC_WK1_YEAR Y, BOAC_DIM_TIME T
WHERE T.BOOKING_YEAR < Y.YEAR AND F.DIM_KEY_TIME = T.DIM_KEY
AND F.FRK_SICSNT_SYSTEM = 'P&C'
GROUP BY 
DIM_KEY_CLASS,DIM_KEY_PARTY, DIM_KEY_RISKAREA, 
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,    
FK_CLAIM, FK_CLAIM_TO_SOC, FK_HEADLINE_LOSS, FK_ORIG_CESSION,
FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
'RESERVE' + CAST(Y.YEAR AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
'B' + SUBSTRING(F.ENTRY_CODE,1,4),
'$' + CAST(Y.YEAR AS VARCHAR(4)) + 'M01$$',  Y.YEAR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,
FRK_SICSNT_SYSTEM, PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
HAVING SUM(AMOUNT) <> 0  

/* STEP 8C/1LIFE */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8C/1LIFE',NULL)

UPDATE BOAC_STATUS
SET LF_MAX_B_RES_YEAR = (SELECT MAX(BOOKING_YEAR) FROM BOAC_DIM_TIME T, BOAC_LF_FACT F 
	WHERE F.DIM_KEY_TIME = T.DIM_KEY
	AND AC_YEAR IS NOT NULL);

TRUNCATE TABLE BOAC_WK1_YEAR;

/* STEP 8C/2LIFE */
INSERT INTO BOAC_WK1_YEAR (YEAR)
(SELECT DISTINCT T.BOOKING_YEAR + T2.DIM_KEY FROM BOAC_DIM_TIME T, BOAC_DIM_TIME T2, BOAC_STATUS S 
WHERE T2.DIM_KEY < 20 AND T.BOOKING_YEAR + T2.DIM_KEY  <= S.LF_MAX_B_RES_YEAR);

/* STEP 8C/3LIFE */
INSERT INTO #BOAC_WK4B_FACT ( 
AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY,DIM_KEY_RISKAREA,DUE_DATE,
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,      
FK_CLAIM, FK_CLAIM_TO_SOC, FK_HEADLINE_LOSS, FK_ORIG_CESSION,
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, 
OBJECT_ID, OCC_YR, 
ENTRY_CODE, AC_YEAR, TIME_COMBINED, FRK_AC_REF_PERIOD, FRK_BOOKING_PERIOD, BOOKING_YEAR, 
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, FRK_SICSNT_SYSTEM, ORIGIN,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
SELECT 
SUM(AMOUNT), MAX(DATE_OF_BOOKING),DIM_KEY_CLASS,0,DIM_KEY_PARTY, DIM_KEY_RISKAREA,MAX(DUE_DATE), 
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,    
FK_CLAIM, FK_CLAIM_TO_SOC, FK_HEADLINE_LOSS, FK_ORIG_CESSION,
MAX(FK_BALANCE), FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, MAX(FK_WORKSHEET), FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
SUM(FUNC_CURR_AMOUNT_1), SUM(FUNC_CURR_AMOUNT_2), 'RESERVE' + CAST(Y.YEAR AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, 0 , NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
'B' + SUBSTRING(F.ENTRY_CODE,1,4),
NULL, '$' + CAST(Y.YEAR AS VARCHAR(4)) + 'M01$$', NULL, 'M01', Y.YEAR,
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,
FRK_SICSNT_SYSTEM, 'B', PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
FROM BOAC_WK3_FACT F, BOAC_WK1_YEAR Y, BOAC_DIM_TIME T
WHERE T.BOOKING_YEAR < Y.YEAR AND F.DIM_KEY_TIME = T.DIM_KEY
AND F.FRK_SICSNT_SYSTEM = 'LIFE'
GROUP BY 

DIM_KEY_CLASS,DIM_KEY_PARTY, DIM_KEY_RISKAREA, 
FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2,    
FK_CLAIM, FK_CLAIM_TO_SOC, FK_HEADLINE_LOSS, FK_ORIG_CESSION,
FK_CURR, FK_INS_PER_ASSUMED,  
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
'RESERVE' + CAST(Y.YEAR AS VARCHAR(4)), IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, NO_TRANSFER_LDGR, OBJECT_ID, OCC_YR, 
'B' + SUBSTRING(F.ENTRY_CODE,1,4),
'$' + CAST(Y.YEAR AS VARCHAR(4)) + 'M01$$', Y.YEAR,
ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,
FRK_SICSNT_SYSTEM, PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, F.INS_PER_START, F.INW_INS_PER_START
HAVING SUM(AMOUNT) <> 0

TRUNCATE TABLE BOAC_WK1_TIME;

/* STEP 8C/4 */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8C/4',NULL)

INSERT INTO BOAC_WK1_TIME 
(AC_YEAR, FRK_AC_REF_PERIOD,  BOOKING_YEAR, 
FRK_BOOKING_PERIOD)
(SELECT DISTINCT AC_YEAR, FRK_AC_REF_PERIOD, BOOKING_YEAR, FRK_BOOKING_PERIOD
FROM #BOAC_WK4B_FACT);

/* STEP 8C/5 */
UPDATE BOAC_WK1_TIME 
SET COMBINED =  '$' + CAST(BOOKING_YEAR AS VARCHAR(4)) + RTRIM(FRK_BOOKING_PERIOD) + '$$'; 


/* STEP 8C/6 */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8T/6',NULL)

DELETE FROM BOAC_WK1_TIME  
WHERE EXISTS
(SELECT * FROM BOAC_DIM_TIME T  
WHERE BOAC_WK1_TIME.COMBINED = T.COMBINED);

/* STEP 8C/7 */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_P = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND BOAC_WK1_TIME.FRK_BOOKING_PERIOD = R.CODE)
WHERE EXISTS (SELECT * FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND BOAC_WK1_TIME.FRK_BOOKING_PERIOD = R.CODE); 

/* STEP 8C/9 */
UPDATE BOAC_WK1_TIME
SET FRK_BOOK_Q = 
CASE WHEN RTRIM(FRK_BOOKING_PERIOD) = 'M01' THEN 'Q1' END,
FRK_BOOK_HY = 
CASE WHEN RTRIM(FRK_BOOKING_PERIOD) = 'M01' THEN 'HY1' END ;	

/* STEP 8C/10 */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_Q = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND BOAC_WK1_TIME.FRK_BOOK_Q = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND BOAC_WK1_TIME.FRK_BOOK_Q = R.CODE); 


/* STEP 8C/11 */
UPDATE BOAC_WK1_TIME
SET NAME_BOOK_HY = (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND BOAC_WK1_TIME.FRK_BOOK_HY = R.CODE)
WHERE EXISTS (SELECT NAME FROM REFERENCE_DATA R 
	WHERE R.SUBCLASS = 10 AND BOAC_WK1_TIME.FRK_BOOK_HY = R.CODE); 
	

/* STEP 8C/12 */
INSERT INTO BOAC_DIM_TIME (DIM_KEY, BOOKING_YEAR, 
FRK_BOOKING_PERIOD, COMBINED, NAME_BOOK_P, 
FRK_BOOK_Q, FRK_BOOK_HY, NAME_BOOK_Q, NAME_BOOK_HY, BOOKING_YEAR_P)
(SELECT  T.DIM_KEY + MAX_KEY_TIME,   
BOOKING_YEAR , 
FRK_BOOKING_PERIOD, COMBINED, NAME_BOOK_P, 
FRK_BOOK_Q, FRK_BOOK_HY, NAME_BOOK_Q, NAME_BOOK_HY, CAST(BOOKING_YEAR AS VARCHAR(4))+ ' ' + NAME_BOOK_P
FROM BOAC_WK1_TIME T, BOAC_STATUS);

/* STEP 8C/13 */
UPDATE BOAC_STATUS SET MAX_KEY_TIME = MAX_KEY_TIME + (SELECT MAX(DIM_KEY) FROM BOAC_WK1_TIME)
WHERE EXISTS (SELECT * FROM BOAC_WK1_TIME); 

/* STEP 8C/14 */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8C/14',NULL)

UPDATE #BOAC_WK4B_FACT
SET DIM_KEY_TIME = 
(SELECT T.DIM_KEY FROM BOAC_DIM_TIME T WHERE #BOAC_WK4B_FACT.TIME_COMBINED = T.COMBINED);   

/* STEP 8D/1 PC A-YEAR RESERVES  */
INSERT INTO BOAC_PC_FACT 
(AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CLAIM, FK_CLAIM_TO_SOC, FK_CURR, FK_HEADLINE_LOSS, FK_INS_PER_ASSUMED, FK_ORIG_CESSION, 
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, ORIGIN,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
SELECT 
NULL, NULL, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CLAIM, FK_CLAIM_TO_SOC, FK_CURR, FK_HEADLINE_LOSS, FK_INS_PER_ASSUMED, FK_ORIG_CESSION, 
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, 'A',
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, WK4.INS_PER_START, WK4.INW_INS_PER_START
FROM BOAC_WK4A_FACT WK4 
WHERE 
WK4.FRK_SICSNT_SYSTEM = 'P&C'; 


/* STEP 8D/2 PC B-YEAR RESERVES  */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8D/2',NULL)

INSERT INTO BOAC_PC_FACT 
(AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CLAIM, FK_CLAIM_TO_SOC, FK_CURR, FK_HEADLINE_LOSS, FK_INS_PER_ASSUMED, FK_ORIG_CESSION, 
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,ORIGIN,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
SELECT 
NULL, NULL, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CLAIM, FK_CLAIM_TO_SOC, FK_CURR, FK_HEADLINE_LOSS, FK_INS_PER_ASSUMED, FK_ORIG_CESSION, 
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, 'B',
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, WK4.INS_PER_START, WK4.INW_INS_PER_START
FROM #BOAC_WK4B_FACT WK4 
WHERE 
WK4.FRK_SICSNT_SYSTEM = 'P&C' ;


/* STEP 8D/3 LIFE A-YEAR RESERVES  */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8D/3',NULL)

INSERT INTO BOAC_LF_FACT 
(AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED, 
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,ORIGIN,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
SELECT 
NULL, NULL, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED, 
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, 'A',
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, WK4.INS_PER_START, WK4.INW_INS_PER_START 
FROM BOAC_WK4A_FACT WK4 
WHERE 
WK4.FRK_SICSNT_SYSTEM = 'LIFE' ;

/* STEP 8D/4 LIFE B-YEAR RESERVES  */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC006','CHECKPOINT','8D/4',NULL)

INSERT INTO BOAC_LF_FACT 
(AC_END_DATE, AC_START_DATE, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED, 
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR,ORIGIN,
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, INS_PER_START, INW_INS_PER_START)
SELECT 
NULL, NULL, AMOUNT, DATE_OF_BOOKING, DIM_KEY_CLASS, DIM_KEY_NOTE, DIM_KEY_PARTY, 
DIM_KEY_RISKAREA, DIM_KEY_TIME, DUE_DATE, ENTRY_CODE, FK_AC_FUNC_CCY, FK_AC_FUNC_CCY2, FK_AMENDMENT, 
FK_BALANCE, FK_CURR, FK_INS_PER_ASSUMED, 
FK_REP_UNIT_1, FK_REP_UNIT_2, FK_REP_UNIT_3, FK_SOC, FK_WORKSHEET, FRK_ACCESS_CODE, FRK_ORIGINAL_ACC_PRD, 
FUNC_CURR_AMOUNT_1, FUNC_CURR_AMOUNT_2, IDENTIFIER, INSTALMENT_NUMBER, IS_ESTIMATE, IS_IN_ACCT_CURR, 
IS_IN_BOOK_CURR, IS_IN_ORIG_CURR, IS_SUPI_BASE, LIQUID_AMOUNT, NO_TRANSFER_LDGR, OBJECT_ID, 
OCC_YR, ORGNL_ACC_YEAR, ORIG_UW_YEAR, UW_YEAR, 'B',
PRE_PROD, PRODUCER, INSUR_CAT, BUS_CAT, WK4.INS_PER_START, WK4.INW_INS_PER_START
FROM #BOAC_WK4B_FACT WK4 
WHERE 
WK4.FRK_SICSNT_SYSTEM = 'LIFE';

IF @V_LOGLEVEL > 0 
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
SELECT GETDATE(),'BOAC006','SCRIPT END','',CURRENT_BATCH 
FROM BOAC_STATUS

/* END SCRIPT */
GO


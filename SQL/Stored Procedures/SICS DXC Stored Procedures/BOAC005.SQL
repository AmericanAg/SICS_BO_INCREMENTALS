/****** Object:  StoredProcedure [dbo].[BOAC005]    Script Date: 4/24/2023 3:17:10 PM ******/
DROP PROCEDURE [dbo].[BOAC005]
GO

/****** Object:  StoredProcedure [dbo].[BOAC005]    Script Date: 4/24/2023 3:17:10 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[BOAC005]
(@METHOD VARCHAR(1) = '', @LOGLEVEL INT = 1)
AS
/* VERSION 4.6.1 */
--
-- 10/04/2016 Mike Pappas The following stored procedure has been modified with code provided by CSC 
--                        in attempt to correct the Deadlock error with the SICS Incrementals job
--

DECLARE @V_BATCH_NO INT 
DECLARE @V_IS_INITIAL_LOAD INT /* 0 = FALSE 1 = TRUE */
DECLARE @V_UWY INT
DECLARE @V_LOGLEVEL INT

BEGIN TRAN T1

SET @V_LOGLEVEL = @LOGLEVEL

/* LOGLEVEL 0 NO LOGGING */
/* LOGLEVEL 1 BASIC */
/* LOGLEVEL 2 DETAILED */
/* LOGLEVEL 3 CHECKPOINTS FOR PERFORMANCE CHECK */
/* LOGLEVEL 4 DEBUG */

IF @V_LOGLEVEL > 0 
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
SELECT GETDATE(),'BOAC005','SCRIPT START','4.6.1 INCREMENTAL',CURRENT_BATCH 
FROM BOAC_STATUS

IF @V_LOGLEVEL > 0 
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
SELECT GETDATE(),'BOAC005','METHOD = ' + @METHOD,'',CURRENT_BATCH 
FROM BOAC_STATUS

IF @METHOD = '' 
BEGIN

INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
SELECT GETDATE(),'BOAC005','NO METHOD SELECTED','',CURRENT_BATCH 
FROM BOAC_STATUS

RETURN /* NO METHOD SELECTED */
END


SET @V_IS_INITIAL_LOAD = 0

/* CHECK IF THIS IS THE INTIAL LOAD */

SET @V_BATCH_NO = (SELECT CURRENT_BATCH FROM BOAC_STATUS)

IF @V_BATCH_NO = 1 
SET @V_IS_INITIAL_LOAD = 1
ELSE SET @V_IS_INITIAL_LOAD = 0

/* END CHECK */

IF @METHOD = 'B'
BEGIN
/*  STEP 2B */

UPDATE AC_STL_PAIRING
SET DM_TRANS_DATE = GETDATE(), DM_BATCH_NUMBER = (SELECT CURRENT_BATCH FROM BOAC_STATUS) 
WHERE DM_BATCH_NUMBER = 0 AND SUBCLASS = 1 AND COALESCE(IS_PENDING,'N') = 'N'

UPDATE AC_STL_PAIRING SET DM_BATCH_NUMBER = 0, DM_TRANS_DATE = NULL 
FROM AC_LEDGER_BALANCE B, AC_WORKSHEET W
WHERE 
AC_STL_PAIRING.DM_BATCH_NUMBER =  (SELECT S.CURRENT_BATCH FROM BOAC_STATUS S)
AND AC_STL_PAIRING.SUBCLASS = 1
AND B.FK_WORKSHEET = W.OBJECT_ID AND B.OBJECT_ID = AC_STL_PAIRING.FK_BALANCE1
AND W.DM_BATCH_NUMBER = 0

UPDATE AC_STL_PAIRING SET DM_BATCH_NUMBER = 0, DM_TRANS_DATE = NULL 
FROM AC_LEDGER_BALANCE B, AC_WORKSHEET W
WHERE AC_STL_PAIRING.DM_BATCH_NUMBER =  (SELECT S.CURRENT_BATCH FROM BOAC_STATUS S)
AND AC_STL_PAIRING.SUBCLASS = 1
AND B.FK_WORKSHEET = W.OBJECT_ID AND B.OBJECT_ID = AC_STL_PAIRING.FK_BALANCE2
AND W.DM_BATCH_NUMBER = 0

/* STEP 3D */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3D',NULL)


TRUNCATE TABLE BOAC_WK1_BALANCE

/* 3D/1 POPULATE WORK TABLE FOR PENDING REMITTANCES  */ 
INSERT INTO BOAC_WK1_BALANCE (OBJECT_ID, BOOKING_YEAR, FRK_BOOKING_PERIOD, LEDGER_BAL_ORG_AMT, 
	   UNALLOC_CASH1, ORIGIN) 
(SELECT B.OBJECT_ID, B.BOOKING_YEAR, B.FRK_BOOKING_PERIOD, B.LEDGER_BAL_ORG_AMT, UNALLOC_CASH1,
CASE FRK_STATUS
WHEN 'FINAL          ' THEN 'R' ELSE 'X' END
FROM BOAC_STL_PAIRING P, AC_LEDGER_BALANCE B
WHERE P.FK_BALANCE1 = B.OBJECT_ID
AND B.SUBCLASS IN (2,14,15) AND P.ORIGIN IN ('X')
AND NOT (B.BOOKING_YEAR =P.BOOKING_YEAR AND B.FRK_BOOKING_PERIOD = P.FRK_BOOKING_PERIOD
		AND B.LEDGER_BAL_ORG_AMT = P.UNALLOC_CASH1
		AND B.FRK_STATUS <> 'FINAL' AND P.ORIGIN = 'X'))


/* 3D/2 UPDATE PAIRING TABLE  - PENDING REMITTANCES WITH DUMMY PAIRING */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3D/2',NULL)

UPDATE BOAC_STL_PAIRING
SET BOOKING_YEAR = X.BOOKING_YEAR, FRK_BOOKING_PERIOD = X.FRK_BOOKING_PERIOD, 
UNALLOC_CASH1 = X.LEDGER_BAL_ORG_AMT, UNSETTLED_AMT1 = BOAC_STL_PAIRING.UNSETTLED_AMT1 + X.LEDGER_BAL_ORG_AMT - BOAC_STL_PAIRING.UNALLOC_CASH1,
ORIGIN = X.ORIGIN
FROM BOAC_WK1_BALANCE X 
WHERE BOAC_STL_PAIRING.FK_BALANCE1 = X.OBJECT_ID
AND BOAC_STL_PAIRING.ORIGIN = 'X'

/* 3D/3 UPDATE PAIRING TABLE  - PAIRING WHERE BALANCE1 WAS PENDING REMITTANCES */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3D/3',NULL)

UPDATE BOAC_STL_PAIRING
SET UNALLOC_CASH1 = X.LEDGER_BAL_ORG_AMT, 
UNSETTLED_AMT1 = BOAC_STL_PAIRING.UNSETTLED_AMT1 + X.LEDGER_BAL_ORG_AMT - BOAC_STL_PAIRING.UNALLOC_CASH1
FROM BOAC_WK1_BALANCE X 
WHERE BOAC_STL_PAIRING.FK_BALANCE1 = X.OBJECT_ID
AND BOAC_STL_PAIRING.BALANCE_TYPE_1 = 'R' AND BOAC_STL_PAIRING.ORIGIN IN ('P','M')
AND X.UNALLOC_CASH1 <> X.LEDGER_BAL_ORG_AMT

END /* METHOD B */

/* STEP 3E */
/* TRANSFER REMITTANCES */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3E',NULL)

TRUNCATE TABLE BOAC_WK1_PAIRING

IF @V_IS_INITIAL_LOAD = 1 AND
DBO.BO_CHKINDX('BO_PAIR_WK2_BAL','BOAC_WK2_PAIRING') = 'Y'
DROP INDEX BOAC_WK2_PAIRING.BO_PAIR_WK2_BAL

IF @V_IS_INITIAL_LOAD = 1 AND 
DBO.BO_CHKINDX('BO_PAIR_WK2_BAL2','BOAC_WK2_PAIRING') = 'Y'
DROP INDEX BOAC_WK2_PAIRING.BO_PAIR_WK2_BAL2

TRUNCATE TABLE BOAC_WK2_PAIRING

TRUNCATE TABLE BOAC_DUP_BALANCE

/*
INSERT INTO BOAC_DUP_BALANCE (OBJECT_ID, HAS_PAIRING)
SELECT OBJECT_ID, 'N' FROM AC_LEDGER_BALANCE WHERE SUBCLASS IN (2,11,14,15,16)
AND FRK_STATUS <> 'INACT'
AND NOT EXISTS (SELECT 'X' FROM BOAC_STL_PAIRING WHERE ORIGIN IN ('R','X')
AND OBJECT_ID = AC_LEDGER_BALANCE.OBJECT_ID)
*/

--
-- START MP 10/04/2016 ORIGINAL CODE BEFORE ADDING CODE PROVIDED BY CSC
--
--INSERT INTO BOAC_DUP_BALANCE (OBJECT_ID, HAS_PAIRING)
--SELECT DISTINCT B.OBJECT_ID, 'N' 
--FROM AC_LEDGER_BALANCE B LEFT OUTER JOIN BOAC_STL_PAIRING P ON (P.OBJECT_ID = B.OBJECT_ID)
--WHERE COALESCE(P.ORIGIN,'NULL') NOT IN ('R','X')
--AND B.SUBCLASS IN (2,11,14,15,16)
--AND B.FRK_STATUS <> 'INACT'
--
-- END   MP 10/04/2016 ORIGINAL CODE BEFORE ADDING CODE PROVIDED BY CSC
--

--
-- START MP 10/04/2016 The following stored procedure has been modified with code provided by CSC 
--                     in attempt to correct the Deadlock error with the SICS Incrementals job
--
INSERT INTO BOAC_DUP_BALANCE (OBJECT_ID, HAS_PAIRING)
SELECT DISTINCT B.OBJECT_ID, 'N'
FROM AC_LEDGER_BALANCE B
WHERE B.SUBCLASS IN (2,11,14,15,16)
AND B.FRK_STATUS <> 'INACT'
EXCEPT
SELECT DISTINCT P.OBJECT_ID ,'N'
FROM BOAC_STL_PAIRING P
WHERE COALESCE(P.ORIGIN,'NULL') IN ('R','X');
--
-- END   MP 10/04/2016 The following stored procedure has been modified with code provided by CSC 
--                     in attempt to correct the Deadlock error with the SICS Incrementals job
--


UPDATE BOAC_DUP_BALANCE SET HAS_PAIRING = 'Y'
FROM AC_STL_PAIRING P
WHERE BOAC_DUP_BALANCE.OBJECT_ID = P.FK_BALANCE1
AND  COALESCE(P.IS_PENDING,'N') = 'N'

UPDATE BOAC_DUP_BALANCE SET HAS_PAIRING = 'Y'
FROM AC_STL_PAIRING P
WHERE BOAC_DUP_BALANCE.OBJECT_ID = P.FK_BALANCE2
AND  COALESCE(P.IS_PENDING,'N') = 'N'

/* STEP 3E/4 REMITTANCES WITHOUT PAIRINGS  */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3E/4',NULL)

INSERT INTO BOAC_WK2_PAIRING
(ORIGIN, ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD,
FRK_SICSNT_SYSTEM, OBJECT_ID, PAIRING_DATE,
PAIRING_TIMESTAMP, SETTLED_AMT1, SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT, BALANCE_TYPE_1, BALANCE_TYPE_2,
UNSETTLED_AMT1, ORIG_PREM_AMT1, ORIG_CLAIM_AMT1, UNALLOC_CASH1, NEXT_PAIRING_TS1, SETTLMENT_IND1,
B1_FK_BASE_COMP, B1_FK_BP, B1_FK_SECOND_BP, PAIRING_NO
)
/* FINAL REMITTANCES */
SELECT
'R', NULL, BOOKING_YEAR, NULL, B.OBJECT_ID, NULL, B.FK_CLOSED_BY,
NULL, NULL, NULL, FRK_BOOKING_PERIOD,
FRK_SICSNT_SYSTEM, B.OBJECT_ID, ISNULL(B.CLOSED_DATE,B.REGIST_DATE),
ISNULL(B.CLOSED_DATE,B.REGIST_DATE), /* B.LEDGER_BAL_ORG_AMT - B.LEDGER_BAL_UNS_AMT */ 0,
0, NULL, NULL, 'R', 'D',
B.LEDGER_BAL_ORG_AMT /* B.LEDGER_BAL_UNS_AMT */, NULL, NULL, B.LEDGER_BAL_ORG_AMT, 
CONVERT(DATETIME,'9999-12-31 23:59:59',20),
CASE WHEN B.LEDGER_BAL_UNS_AMT =  0 THEN 'S'
WHEN B.LEDGER_BAL_UNS_AMT = B.LEDGER_BAL_ORG_AMT THEN 'U' ELSE 'P' END,
B.FK_BASE_COMPANY, B.FK_BP, ISNULL(B.FK_SECOND_BP,B.FK_BP), 0
FROM AC_LEDGER_BALANCE B, BOAC_DUP_BALANCE DUP
WHERE B.SUBCLASS IN (2,14,15,16)
AND DUP.OBJECT_ID = B.OBJECT_ID
AND DUP.HAS_PAIRING = 'N'
AND B.FRK_STATUS = 'FINAL'
UNION ALL
/* NOT FINAL REMITTANCES */
SELECT
'X', NULL, BOOKING_YEAR, NULL, B.OBJECT_ID, NULL, B.FK_CLOSED_BY,
NULL, NULL, NULL, FRK_BOOKING_PERIOD,
FRK_SICSNT_SYSTEM, B.OBJECT_ID, ISNULL(B.CLOSED_DATE,B.REGIST_DATE),
ISNULL(B.CLOSED_DATE,B.REGIST_DATE), /* B.LEDGER_BAL_ORG_AMT - B.LEDGER_BAL_UNS_AMT */ 0,
0, NULL, NULL, 'R', 'D',
B.LEDGER_BAL_ORG_AMT /* B.LEDGER_BAL_UNS_AMT */, NULL, NULL, B.LEDGER_BAL_ORG_AMT, CONVERT(DATETIME,'9999-12-31 23:59:59',20),
CASE WHEN B.LEDGER_BAL_UNS_AMT =  0 THEN 'S'
WHEN B.LEDGER_BAL_UNS_AMT = B.LEDGER_BAL_ORG_AMT THEN 'U' ELSE 'P' END,
B.FK_BASE_COMPANY, B.FK_BP, ISNULL(B.FK_SECOND_BP,B.FK_BP), 0
FROM AC_LEDGER_BALANCE B, BOAC_DUP_BALANCE DUP
WHERE B.SUBCLASS IN (2,14,15,16)
AND DUP.OBJECT_ID = B.OBJECT_ID
AND DUP.HAS_PAIRING = 'N'
AND B.FRK_STATUS <> 'FINAL'
AND '1' = (SELECT PARAM_VALUE FROM SYS_PARAM_VALUES
WHERE PARAM_KEY = 'AC_PAIR_ALLOW_REMIT')

/* STEP 3E/5 REMITTANCES WITH PAIRINGS  */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3E/5',NULL)

INSERT INTO BOAC_WK1_PAIRING
(ORIGIN, ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD,
FRK_SICSNT_SYSTEM, OBJECT_ID, PAIRING_DATE,
PAIRING_TIMESTAMP, SETTLED_AMT1, SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT, BALANCE_TYPE_1, BALANCE_TYPE_2,
UNSETTLED_AMT1, ORIG_PREM_AMT1, ORIG_CLAIM_AMT1, UNALLOC_CASH1, NEXT_PAIRING_TS1,SETTLMENT_IND1,
B1_FK_BASE_COMP, B1_FK_BP, B1_FK_SECOND_BP, PAIRING_NO
)
/* FINAL REMITTANCES */
SELECT
'R', NULL, BOOKING_YEAR, NULL, B.OBJECT_ID, NULL, B.FK_CLOSED_BY,
NULL, NULL, NULL, FRK_BOOKING_PERIOD,
FRK_SICSNT_SYSTEM, B.OBJECT_ID, ISNULL(B.CLOSED_DATE,B.REGIST_DATE),
ISNULL(B.CLOSED_DATE,B.REGIST_DATE), /* B.LEDGER_BAL_ORG_AMT - B.LEDGER_BAL_UNS_AMT */ 0,
0, NULL, NULL, 'R', 'D',
B.LEDGER_BAL_ORG_AMT /* B.LEDGER_BAL_UNS_AMT */, NULL, NULL, B.LEDGER_BAL_ORG_AMT, CONVERT(DATETIME,'9999-12-31 23:59:59',20),'X',
B.FK_BASE_COMPANY, B.FK_BP, ISNULL(B.FK_SECOND_BP,B.FK_BP), 0
FROM AC_LEDGER_BALANCE B, BOAC_DUP_BALANCE DUP
WHERE B.SUBCLASS IN (2,14,15,16)
AND DUP.OBJECT_ID = B.OBJECT_ID
AND DUP.HAS_PAIRING = 'Y'
AND B.FRK_STATUS = 'FINAL'
UNION ALL
/* NOT FINAL REMITTANCES */
SELECT
'X', NULL, BOOKING_YEAR, NULL, B.OBJECT_ID, NULL, B.FK_CLOSED_BY,
NULL, NULL, NULL, FRK_BOOKING_PERIOD,
FRK_SICSNT_SYSTEM, B.OBJECT_ID, ISNULL(B.CLOSED_DATE,B.REGIST_DATE),
ISNULL(B.CLOSED_DATE,B.REGIST_DATE), /* B.LEDGER_BAL_ORG_AMT - B.LEDGER_BAL_UNS_AMT */ 0,
0, NULL, NULL, 'R', 'D',
B.LEDGER_BAL_ORG_AMT /* B.LEDGER_BAL_UNS_AMT */, NULL, NULL, B.LEDGER_BAL_ORG_AMT, CONVERT(DATETIME,'9999-12-31 23:59:59',20),'X',
B.FK_BASE_COMPANY, B.FK_BP, ISNULL(B.FK_SECOND_BP,B.FK_BP), 0
FROM AC_LEDGER_BALANCE B, BOAC_DUP_BALANCE DUP
WHERE B.SUBCLASS IN (2,14,15,16)
AND DUP.OBJECT_ID = B.OBJECT_ID
AND DUP.HAS_PAIRING = 'Y'
AND  B.FRK_STATUS <> 'INACT'
AND B.FRK_STATUS <> 'FINAL'
AND '1' = (SELECT PARAM_VALUE FROM SYS_PARAM_VALUES
WHERE PARAM_KEY = 'AC_PAIR_ALLOW_REMIT')

/* STEP 3F */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3F',NULL)

TRUNCATE TABLE BOAC_DUP_BALANCE

/* STEP 3F/1 IDENTIFY NEW TECHNICAL BOOKINGS */

IF @METHOD = 'B'
INSERT INTO BOAC_DUP_BALANCE (OBJECT_ID, HAS_PAIRING)
SELECT B.OBJECT_ID, 'N'
FROM AC_LEDGER_BALANCE B, AC_WORKSHEET W
WHERE IS_ESTIMATE = 'N'
AND NO_TRANSFER_LDGR = 'N'
AND W.FRK_STATUS = 'C'
AND W.DM_BATCH_NUMBER = (SELECT S.CURRENT_BATCH FROM BOAC_STATUS S)
AND B.FK_WORKSHEET = W.OBJECT_ID
AND B.FRK_BUS_LEVEL IN ('IAB','XAB','ORP')
AND (B.FRK_BUS_LEVEL IN ('IAB','XAB') OR IS_IN_ACCT_CURR = 'Y')

IF @METHOD = 'A'
INSERT INTO BOAC_DUP_BALANCE (OBJECT_ID, HAS_PAIRING)
SELECT B.OBJECT_ID, 'N'
FROM AC_LEDGER_BALANCE B, BOAC_DUP_WORKSHEET W
WHERE IS_ESTIMATE = 'N'
AND NO_TRANSFER_LDGR = 'N'
AND B.FK_WORKSHEET = W.OBJECT_ID
AND B.FRK_BUS_LEVEL IN ('IAB','XAB','ORP')
AND (B.FRK_BUS_LEVEL IN ('IAB','XAB') OR IS_IN_ACCT_CURR = 'Y')
AND W.DM_BATCH_NUMBER = (SELECT S.CURRENT_BATCH FROM BOAC_STATUS S)


/* STEP 3G */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3G',NULL)

UPDATE BOAC_DUP_BALANCE SET HAS_PAIRING = 'Y'
FROM AC_STL_PAIRING P
WHERE BOAC_DUP_BALANCE.OBJECT_ID = P.FK_BALANCE1
AND COALESCE(P.IS_PENDING,'N') = 'N'

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3G_1',NULL)

UPDATE BOAC_DUP_BALANCE SET HAS_PAIRING = 'Y'
FROM AC_STL_PAIRING P
WHERE BOAC_DUP_BALANCE.OBJECT_ID = P.FK_BALANCE2
AND COALESCE(P.IS_PENDING,'N') = 'N'

/* STEP 3G/6 TECHNICAL BOOKINGS WITHOUT PAIRINGS */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3G/6',NULL)

INSERT INTO BOAC_WK2_PAIRING
(ORIGIN, ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD,
FRK_SICSNT_SYSTEM, OBJECT_ID, PAIRING_DATE,
PAIRING_TIMESTAMP, SETTLED_AMT1, SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT, BALANCE_TYPE_1, BALANCE_TYPE_2,
UNSETTLED_AMT1, ORIG_PREM_AMT1, ORIG_CLAIM_AMT1, UNALLOC_CASH1, NEXT_PAIRING_TS1, SETTLMENT_IND1,
B1_FK_BASE_COMP, B1_FK_BP, B1_FK_SECOND_BP, PAIRING_NO
)
SELECT
'T', NULL, BOOKING_YEAR, NULL, B.OBJECT_ID, NULL, B.FK_CLOSED_BY,
NULL, NULL, NULL, FRK_BOOKING_PERIOD,
B.FRK_SICSNT_SYSTEM, B.OBJECT_ID, W.CLOSED_TIMESTAMP,
W.CLOSED_TIMESTAMP, /* B.LEDGER_BAL_ORG_AMT - B.LEDGER_BAL_UNS_AMT */ 0,
0, NULL, NULL, 'T', 'D',
B.LEDGER_BAL_ORG_AMT /* B.LEDGER_BAL_UNS_AMT */,
NULL, NULL, NULL, CONVERT(DATETIME,'9999-12-31 23:59:59',20),
CASE WHEN B.LEDGER_BAL_UNS_AMT =  0 THEN 'S'
WHEN B.LEDGER_BAL_UNS_AMT = B.LEDGER_BAL_ORG_AMT THEN 'U' ELSE 'P' END,
B.FK_BASE_COMPANY, B.FK_BP, ISNULL(B.FK_SECOND_BP,B.FK_BP),0
FROM AC_LEDGER_BALANCE B, 
AC_WORKSHEET W, 
BOAC_DUP_BALANCE DUP
WHERE B.SUBCLASS NOT IN (2,14,15,11,16)
AND B.OBJECT_ID = DUP.OBJECT_ID
AND DUP.HAS_PAIRING = 'N'
AND B.FK_WORKSHEET = W.OBJECT_ID


/* STEP 3G/8 TECHNICAL BOOKINGS WITH PAIRINGS */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3G/8',NULL)

INSERT INTO BOAC_WK1_PAIRING
(ORIGIN, ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD,
FRK_SICSNT_SYSTEM, OBJECT_ID, PAIRING_DATE,
PAIRING_TIMESTAMP, SETTLED_AMT1, SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT, BALANCE_TYPE_1, BALANCE_TYPE_2,
UNSETTLED_AMT1, ORIG_PREM_AMT1, ORIG_CLAIM_AMT1, UNALLOC_CASH1, NEXT_PAIRING_TS1, SETTLMENT_IND1,
B1_FK_BASE_COMP, B1_FK_BP, B1_FK_SECOND_BP, PAIRING_NO
)
SELECT
'T', NULL, BOOKING_YEAR, NULL, B.OBJECT_ID, NULL, B.FK_CLOSED_BY,
NULL, NULL, NULL, FRK_BOOKING_PERIOD,
B.FRK_SICSNT_SYSTEM, B.OBJECT_ID, W.CLOSED_TIMESTAMP,
W.CLOSED_TIMESTAMP, /* B.LEDGER_BAL_ORG_AMT - B.LEDGER_BAL_UNS_AMT */ 0,
0, NULL, NULL, 'T', 'D',
B.LEDGER_BAL_ORG_AMT /* B.LEDGER_BAL_UNS_AMT */,
NULL, NULL, NULL, CONVERT(DATETIME,'9999-12-31 23:59:59',20),'X',
B.FK_BASE_COMPANY, B.FK_BP, ISNULL(B.FK_SECOND_BP,B.FK_BP),0
FROM AC_LEDGER_BALANCE B, AC_WORKSHEET W, BOAC_DUP_BALANCE DUP
WHERE B.SUBCLASS NOT IN (2,14,15,11,16)
AND B.OBJECT_ID = DUP.OBJECT_ID
AND DUP.HAS_PAIRING = 'Y'
AND B.FK_WORKSHEET = W.OBJECT_ID

/* STEP 3H */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3H',NULL)

/* STEP 3H/10-  CALCULATE UNSETTLED AND SETTLED AMOUNT */
UPDATE BOAC_WK1_PAIRING SET UNSETTLED_AMT1 =
(SELECT BOAC_WK1_PAIRING.UNSETTLED_AMT1 + SUM(P2.SETTLED_AMT1)
FROM AC_STL_PAIRING P2 WHERE BOAC_WK1_PAIRING.FK_BALANCE1 = P2.FK_BALANCE1 AND COALESCE(P2.IS_PENDING,'N') = 'N')
FROM AC_STL_PAIRING P3 
WHERE BOAC_WK1_PAIRING.FK_BALANCE1 = P3.FK_BALANCE1 AND COALESCE(P3.IS_PENDING,'N') = 'N'
AND BOAC_WK1_PAIRING.PAIRING_NO <> 0

UPDATE BOAC_WK1_PAIRING SET SETTLED_AMT1 =
(SELECT BOAC_WK1_PAIRING.SETTLED_AMT1 - SUM(P2.SETTLED_AMT1)
FROM AC_STL_PAIRING P2 WHERE BOAC_WK1_PAIRING.FK_BALANCE1 = P2.FK_BALANCE1 AND COALESCE(P2.IS_PENDING,'N') = 'N')
FROM AC_STL_PAIRING P3 
WHERE BOAC_WK1_PAIRING.FK_BALANCE1 = P3.FK_BALANCE1 AND COALESCE(P3.IS_PENDING,'N') = 'N'
AND BOAC_WK1_PAIRING.PAIRING_NO <> 0

/* STEP 3H/11 -  CALCULATE UNSETTLED AND SETTLED AMOUNT */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3H/11',NULL)

UPDATE BOAC_WK1_PAIRING SET UNSETTLED_AMT1 =
(SELECT BOAC_WK1_PAIRING.UNSETTLED_AMT1 + SUM(P2.SETTLED_AMT2)
FROM AC_STL_PAIRING P2 WHERE BOAC_WK1_PAIRING.FK_BALANCE1 = P2.FK_BALANCE2 AND COALESCE(P2.IS_PENDING,'N') = 'N')
FROM AC_STL_PAIRING P3 
WHERE BOAC_WK1_PAIRING.FK_BALANCE1 = P3.FK_BALANCE2 AND COALESCE(P3.IS_PENDING,'N') = 'N'
AND BOAC_WK1_PAIRING.PAIRING_NO <> 0

UPDATE BOAC_WK1_PAIRING SET SETTLED_AMT1 =
(SELECT BOAC_WK1_PAIRING.SETTLED_AMT1 - SUM(P2.SETTLED_AMT2)
FROM AC_STL_PAIRING P2 WHERE BOAC_WK1_PAIRING.FK_BALANCE1 = P2.FK_BALANCE2 AND COALESCE(P2.IS_PENDING,'N') = 'N')
FROM AC_STL_PAIRING P3 
WHERE BOAC_WK1_PAIRING.FK_BALANCE1 = P3.FK_BALANCE2 AND COALESCE(P3.IS_PENDING,'N') = 'N'
AND BOAC_WK1_PAIRING.PAIRING_NO <> 0

/* STEP 3H/12 - BALANCES WITH DUMMY PAIRINGS */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3H/12',NULL)

INSERT INTO BOAC_WK2_PAIRING
  (ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
  FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD, FRK_SICSNT_SYSTEM, OBJECT_ID,
  PAIRING_DATE, PAIRING_TIMESTAMP, NEXT_PAIRING_TS1, SETTLED_AMT1, SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT,
  UNSETTLED_AMT1, ORIG_PREM_AMT1, ORIG_CLAIM_AMT1, UNALLOC_CASH1, BALANCE_AMT2, ORIGIN, BALANCE_TYPE_1,
  BALANCE_TYPE_2, PAIRING_NO, BUSINESS_ID2, WORKSHEET_ID2, TYPE_OF_BUS2, LEVEL_OF_BUS2, BALANCE_CURR2,
  DIM_KEY_PARTY1, DIM_KEY_PARTY2, SETTLMENT_IND1, TS_AND_OBJECT_ID, PREM_AMT2, CLAIM_AMT2, MAX_UW_YEAR2,
  B1_FK_BASE_COMP, B1_FK_BP, B1_FK_SECOND_BP, B2_FK_BASE_COMP, B2_FK_BP, B2_FK_SECOND_BP)
SELECT
  ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
  FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD, FRK_SICSNT_SYSTEM, OBJECT_ID,
  PAIRING_DATE, PAIRING_TIMESTAMP, NEXT_PAIRING_TS1, SETTLED_AMT1, SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT,
  UNSETTLED_AMT1, ORIG_PREM_AMT1, ORIG_CLAIM_AMT1, UNALLOC_CASH1, BALANCE_AMT2, ORIGIN, BALANCE_TYPE_1,
  BALANCE_TYPE_2, PAIRING_NO, BUSINESS_ID2, WORKSHEET_ID2, TYPE_OF_BUS2, LEVEL_OF_BUS2, BALANCE_CURR2,
  DIM_KEY_PARTY1, DIM_KEY_PARTY2, SETTLMENT_IND1, TS_AND_OBJECT_ID, PREM_AMT2, CLAIM_AMT2, MAX_UW_YEAR2,
  B1_FK_BASE_COMP, B1_FK_BP, B1_FK_SECOND_BP, B2_FK_BASE_COMP, B2_FK_BP, B2_FK_SECOND_BP
FROM BOAC_WK1_PAIRING

/* STEP 3H/13 - SPLIT TECHNICAL BALANCE IN PREMIUM RELATED AND CLAIM RELATED */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3H/13',NULL)

IF DBO.BO_CHKINDX('BO_PAIR_WK2_BAL','BOAC_WK2_PAIRING') = 'N'
CREATE INDEX BO_PAIR_WK2_BAL ON BOAC_WK2_PAIRING(FK_BALANCE1)

IF DBO.BO_CHKINDX('BO_PAIR_WK2_BAL2','BOAC_WK2_PAIRING') = 'N'
CREATE INDEX BO_PAIR_WK2_BAL2 ON BOAC_WK2_PAIRING(FK_BALANCE2)

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3H/13_1',NULL)

CREATE TABLE #WK3(
 	[INTEGER_ID] [INTEGER] IDENTITY(1,1) NOT NULL,
	[FK_BALANCE] [VARCHAR](32) COLLATE DATABASE_DEFAULT NOT NULL ,
	[AMT] [DECIMAL](22, 2) NULL)

--ks IF DBO.BO_CHKINDX('CIDX_#WK3','#WK3') = 'Y'	
--ks  drop index #WK3.CIDX_#WK3			
-- CREATE CLUSTERED INDEX CIDX_#WK3 ON #WK3 (INTEGER_ID); 
   -- WITH (DROP_EXISTING = ON);

INSERT INTO #WK3 (FK_BALANCE,AMT)
SELECT D.FK_BALANCE, SUM(D.DTL_AMT)
FROM AC_LEDGER_DETAIL D, ENTRY_CODE E
WHERE D.FK_ENTRY_CODE = E.OBJECT_ID
AND D.IS_LIQUID = 'Y' 
AND E.IS_PAYABLE = 'N'
GROUP BY D.FK_BALANCE

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3H/13_2',NULL)

CREATE CLUSTERED INDEX CI_WK3 ON #WK3 (FK_BALANCE)

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3H/13_3',NULL)

UPDATE P
SET ORIG_PREM_AMT1 =
COALESCE(WK3.AMT,0) 
FROM BOAC_WK2_PAIRING P, #WK3 WK3
WHERE P.FK_BALANCE1 =WK3.FK_BALANCE 
AND P.ORIGIN = 'T'

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3H/13_4',NULL)

DROP TABLE #WK3

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3H/13B',NULL)

CREATE TABLE #WK4(
 	[INTEGER_ID] [INTEGER] IDENTITY(1,1) NOT NULL,
	[FK_BALANCE] [VARCHAR](32) COLLATE DATABASE_DEFAULT NOT NULL ,
	[AMT] [DECIMAL](22, 2) NULL)

--ks CREATE CLUSTERED INDEX CIDX_#WK4 ON #WK4 (INTEGER_ID);


INSERT INTO #WK4 (FK_BALANCE,AMT)
SELECT D.FK_BALANCE, SUM(D.DTL_AMT)
FROM AC_LEDGER_DETAIL D, ENTRY_CODE E
WHERE D.FK_ENTRY_CODE = E.OBJECT_ID
AND D.IS_LIQUID = 'Y' 
AND E.IS_PAYABLE = 'Y'
GROUP BY D.FK_BALANCE

CREATE CLUSTERED INDEX CI_WK4 ON #WK4 (FK_BALANCE)

UPDATE P
SET ORIG_CLAIM_AMT1 =
COALESCE(WK4.AMT,0) 
FROM BOAC_WK2_PAIRING P, #WK4 WK4
WHERE P.FK_BALANCE1 = WK4.FK_BALANCE
AND P.ORIGIN = 'T'

DROP TABLE #WK4

/* STEP 3I */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3I',NULL)

TRUNCATE TABLE BOAC_WK1_PAIRING

/* STEP 3I/14 - NORMAL PAIRING */

IF @METHOD = 'B'
INSERT INTO BOAC_WK1_PAIRING
(ORIGIN, ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD,
FRK_SICSNT_SYSTEM, OBJECT_ID, PAIRING_DATE,
PAIRING_TIMESTAMP, SETTLED_AMT1,
SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT, BALANCE_TYPE_1, BALANCE_TYPE_2, PAIRING_NO)
SELECT
'P', ANUL_TIMESTAMP, P.BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, P.FRK_BOOKING_PERIOD,
P.FRK_SICSNT_SYSTEM, P.OBJECT_ID, PAIRING_DATE,
COALESCE(PAIRING_TIMESTAMP,PAIRING_DATE), SETTLED_AMT1,
SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT, 'X', 'X', 0
FROM AC_STL_PAIRING P
WHERE P.SUBCLASS = 1
AND P.DM_BATCH_NUMBER = (SELECT CURRENT_BATCH FROM BOAC_STATUS)

IF @METHOD = 'A'
INSERT INTO BOAC_WK1_PAIRING
(ORIGIN, ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD,
FRK_SICSNT_SYSTEM, OBJECT_ID, PAIRING_DATE,
PAIRING_TIMESTAMP, SETTLED_AMT1,
SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT, BALANCE_TYPE_1, BALANCE_TYPE_2, PAIRING_NO)
SELECT
'P', ANUL_TIMESTAMP, P.BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, P.FRK_BOOKING_PERIOD,
P.FRK_SICSNT_SYSTEM, P.OBJECT_ID, PAIRING_DATE,
COALESCE(PAIRING_TIMESTAMP,PAIRING_DATE), SETTLED_AMT1,
SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT, 'X', 'X', 0
FROM AC_STL_PAIRING P
WHERE P.SUBCLASS = 1
AND COALESCE(P.IS_PENDING,'N') = 'N'
AND NOT EXISTS (
SELECT * FROM BOAC_STL_PAIRING P2 WHERE P2.ORIGIN = 'P'
AND P.OBJECT_ID = P2.OBJECT_ID)
AND NOT EXISTS (SELECT * FROM AC_LEDGER_BALANCE B, AC_WORKSHEET W
WHERE B.FK_WORKSHEET = W.OBJECT_ID AND B.OBJECT_ID = P.FK_BALANCE1
AND NOT EXISTS (SELECT * FROM BOAC_DUP_WORKSHEET WHERE OBJECT_ID = W.OBJECT_ID))
AND NOT EXISTS (SELECT * FROM AC_LEDGER_BALANCE B, AC_WORKSHEET W
WHERE B.FK_WORKSHEET = W.OBJECT_ID AND B.OBJECT_ID = P.FK_BALANCE2
AND NOT EXISTS (SELECT * FROM BOAC_DUP_WORKSHEET WHERE OBJECT_ID = W.OBJECT_ID))


/* STEP 3J */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3J',NULL)


/* STEP 3J/14 - NORMAL PAIRING */

UPDATE BOAC_WK1_PAIRING
SET BALANCE_TYPE_1 = 
CASE B.SUBCLASS
WHEN 2 THEN 'R'
WHEN 11 THEN 'R'
WHEN 14 THEN 'R'
WHEN 15 THEN 'R'
WHEN 16 THEN 'R'
ELSE 'T' END,B1_FK_BASE_COMP = B.FK_BASE_COMPANY, B1_FK_BP = B.FK_BP, B1_FK_SECOND_BP = ISNULL(B.FK_SECOND_BP,B.FK_BP)
FROM AC_LEDGER_BALANCE B WHERE BOAC_WK1_PAIRING.FK_BALANCE1 = B.OBJECT_ID

UPDATE BOAC_WK1_PAIRING
SET BALANCE_TYPE_2 = 
CASE B.SUBCLASS
WHEN 2 THEN 'R'
WHEN 11 THEN 'R'
WHEN 14 THEN 'R'
WHEN 15 THEN 'R'
WHEN 16 THEN 'R'
ELSE 'T' END,B2_FK_BASE_COMP = B.FK_BASE_COMPANY, B2_FK_BP = B.FK_BP, B2_FK_SECOND_BP = ISNULL(B.FK_SECOND_BP,B.FK_BP)
FROM AC_LEDGER_BALANCE B WHERE BOAC_WK1_PAIRING.FK_BALANCE2 = B.OBJECT_ID

/* STEP 3J/15 - SWITCHED PAIRING */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3J/15',NULL)

INSERT INTO BOAC_WK1_PAIRING
(ORIGIN, ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD,
FRK_SICSNT_SYSTEM, OBJECT_ID, PAIRING_DATE,
PAIRING_TIMESTAMP, SETTLED_AMT1, SETTLED_AMT2,
UNSETTLED_DATE, WRITEOFF_AMT, BALANCE_TYPE_1, BALANCE_TYPE_2,
B1_FK_BASE_COMP, B1_FK_BP, B1_FK_SECOND_BP,
B2_FK_BASE_COMP, B2_FK_BP, B2_FK_SECOND_BP, PAIRING_NO
)
(SELECT
'M', ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE2, FK_BALANCE1, FK_CREATED_BY,
FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD,
FRK_SICSNT_SYSTEM, OBJECT_ID, PAIRING_DATE,
PAIRING_TIMESTAMP, SETTLED_AMT2,SETTLED_AMT1,
UNSETTLED_DATE, WRITEOFF_AMT, BALANCE_TYPE_2, BALANCE_TYPE_1,
B2_FK_BASE_COMP, B2_FK_BP, B2_FK_SECOND_BP,
B1_FK_BASE_COMP, B1_FK_BP, B1_FK_SECOND_BP, PAIRING_NO
FROM BOAC_WK1_PAIRING)

/*  STEP 3K */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3K',NULL)

/* STEP 3K/1 - FETCH BALANCE2 INFORMATION FOR ACCOUNT BALANCES */
UPDATE BOAC_WK1_PAIRING
SET 
TYPE_OF_BUS2 = 
CASE RTRIM(BUS.FRK_TYPE_OF_BUS)
WHEN 'PROPTTY' THEN 'PROP TREATY'
WHEN 'PROPFAC' THEN 'PROP FAC'
WHEN 'DIRECT' THEN 'PROP DIRECT'
WHEN 'NONPROPTTY' THEN 'NON-PROP TREATY'
WHEN 'NONPROPFAC' THEN 'NON-PROP FAC'
WHEN 'NONPROPDIR' THEN 'NON-PROP DIRECT'
WHEN 'NPA' THEN 'NP AUTO'
WHEN 'NPF' THEN 'NP FAC' 
WHEN 'NPFO' THEN 'NP FAC OBL.'
WHEN 'PA' THEN 'P AUTO'
WHEN 'PAFM' THEN 'P AUTO, FAC MBO'
WHEN 'PAFW' THEN 'P AUTO, FAC WBO' 
WHEN 'PF' THEN 'P FAC'
WHEN 'PFO' THEN 'P FAC OBL.'
WHEN 'PFOFM' THEN 'P FAC O, FAC MBO' 
WHEN 'NOTSPEC' THEN 'NOT SPECIFIED' 
ELSE 'UNKNOWN' END, 
LEVEL_OF_BUS2 = 
CASE RTRIM(BUS.FRK_LEVEL_OF_BUS)
WHEN 'IAB' THEN 'ASSUMED'
WHEN 'ORP' THEN 'RETROCESSION'
WHEN 'XAB' THEN 'ADMINISTRAT.'
ELSE 'UNKNOWN' END , 
BUSINESS_ID2 = BUS.IDENTIFIER, 
WORKSHEET_ID2 = BAL.IDENTIFIER,
BALANCE_AMT2 = BAL.LEDGER_BAL_ORG_AMT, 
BALANCE_CURR2 = BAL.FK_CURR,
B2_FK_BASE_COMP = BAL.FK_BASE_COMPANY, 
B2_FK_BP = BAL.FK_BP, 
B2_FK_SECOND_BP = ISNULL(BAL.FK_SECOND_BP,BAL.FK_BP)
FROM AC_LEDGER_BALANCE BAL, BUSINESS BUS
WHERE BOAC_WK1_PAIRING.FK_BALANCE2 = BAL.OBJECT_ID
AND BAL.FK_BUSINESS = BUS.OBJECT_ID
AND BOAC_WK1_PAIRING.BALANCE_TYPE_2 = 'T'

/* STEP 3K/2 - FETCH BALANCE2 INFORMATION FOR REMITTANCES */
UPDATE BOAC_WK1_PAIRING
SET WORKSHEET_ID2 = BAL.IDENTIFIER, BALANCE_AMT2 = BAL.LEDGER_BAL_ORG_AMT, 
BALANCE_CURR2 = BAL.FK_CURR,B2_FK_BASE_COMP = BAL.FK_BASE_COMPANY, 
B2_FK_BP = BAL.FK_BP, B2_FK_SECOND_BP = ISNULL(BAL.FK_SECOND_BP,BAL.FK_BP)
FROM AC_LEDGER_BALANCE BAL
WHERE BOAC_WK1_PAIRING.FK_BALANCE2 = BAL.OBJECT_ID
AND BOAC_WK1_PAIRING.BALANCE_TYPE_2 = 'R'


/* STEP 3K/3 - COMBINE WORK FILES */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3K/3',NULL)

IF @V_IS_INITIAL_LOAD = 1 AND
DBO.BO_CHKINDX('BO_PAIR_WK2_BAL','BOAC_WK2_PAIRING') = 'Y'
DROP INDEX BOAC_WK2_PAIRING.BO_PAIR_WK2_BAL

IF @V_IS_INITIAL_LOAD = 1 AND 
DBO.BO_CHKINDX('BO_PAIR_WK2_BAL2','BOAC_WK2_PAIRING') = 'Y'
DROP INDEX BOAC_WK2_PAIRING.BO_PAIR_WK2_BAL2

--ks INSERT INTO BOAC_WK2_PAIRING
--ks SELECT * FROM BOAC_WK1_PAIRING
INSERT INTO BOAC_WK2_PAIRING
  (ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
  FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD, FRK_SICSNT_SYSTEM, OBJECT_ID,
  PAIRING_DATE, PAIRING_TIMESTAMP, NEXT_PAIRING_TS1, SETTLED_AMT1, SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT,
  UNSETTLED_AMT1, ORIG_PREM_AMT1, ORIG_CLAIM_AMT1, UNALLOC_CASH1, BALANCE_AMT2, ORIGIN, BALANCE_TYPE_1,
  BALANCE_TYPE_2, PAIRING_NO, BUSINESS_ID2, WORKSHEET_ID2, TYPE_OF_BUS2, LEVEL_OF_BUS2, BALANCE_CURR2,
  DIM_KEY_PARTY1, DIM_KEY_PARTY2, SETTLMENT_IND1, TS_AND_OBJECT_ID, PREM_AMT2, CLAIM_AMT2, MAX_UW_YEAR2,
  B1_FK_BASE_COMP, B1_FK_BP, B1_FK_SECOND_BP, B2_FK_BASE_COMP, B2_FK_BP, B2_FK_SECOND_BP)
SELECT
  ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY,
  FK_EXCH_DIFF_CURR, FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD, FRK_SICSNT_SYSTEM, OBJECT_ID,
  PAIRING_DATE, PAIRING_TIMESTAMP, NEXT_PAIRING_TS1, SETTLED_AMT1, SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT,
  UNSETTLED_AMT1, ORIG_PREM_AMT1, ORIG_CLAIM_AMT1, UNALLOC_CASH1, BALANCE_AMT2, ORIGIN, BALANCE_TYPE_1,
  BALANCE_TYPE_2, PAIRING_NO, BUSINESS_ID2, WORKSHEET_ID2, TYPE_OF_BUS2, LEVEL_OF_BUS2, BALANCE_CURR2,
  DIM_KEY_PARTY1, DIM_KEY_PARTY2, SETTLMENT_IND1, TS_AND_OBJECT_ID, PREM_AMT2, CLAIM_AMT2, MAX_UW_YEAR2,
  B1_FK_BASE_COMP, B1_FK_BP, B1_FK_SECOND_BP, B2_FK_BASE_COMP, B2_FK_BP, B2_FK_SECOND_BP
FROM BOAC_WK1_PAIRING

/* STEP 3K/4 - CREATE SORT ELEMENT FOR BALANCE1 HISTORY */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3K/4',NULL)

UPDATE BOAC_WK2_PAIRING
SET TS_AND_OBJECT_ID = 
CASE ORIGIN 
WHEN 'T' THEN 'A'
WHEN 'R' THEN 'A'
ELSE 'Z' END
+ REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,PAIRING_TIMESTAMP,20),'-',''),':',''),' ','') + OBJECT_ID


/* STEP 3K/5 - UPDATE UNSETTLED AMOUNT */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3K/5',NULL)

UPDATE BOAC_WK2_PAIRING
SET UNSETTLED_AMT1 =
(SELECT ISNULL(SUM(
CASE P2.ORIGIN 
WHEN 'R' THEN P2.UNSETTLED_AMT1
WHEN 'T' THEN P2.UNSETTLED_AMT1
WHEN 'P' THEN -P2.SETTLED_AMT1
WHEN 'M' THEN -P2.SETTLED_AMT1 END),0)
- BOAC_WK2_PAIRING.SETTLED_AMT1
FROM BOAC_STL_PAIRING P2
WHERE BOAC_WK2_PAIRING.FK_BALANCE1 = P2.FK_BALANCE1
AND BOAC_WK2_PAIRING.TS_AND_OBJECT_ID > P2.TS_AND_OBJECT_ID)
WHERE ORIGIN IN ('P','M')


/* STEP 3K/6 - UPDATE UNSETTLED AMOUNT */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3K/6',NULL)

UPDATE BOAC_WK2_PAIRING
SET UNSETTLED_AMT1 =
(SELECT
BOAC_WK2_PAIRING.UNSETTLED_AMT1 + SUM(ISNULL(
CASE P2.ORIGIN 
WHEN 'R' THEN P2.UNSETTLED_AMT1
WHEN 'T' THEN P2.UNSETTLED_AMT1
WHEN 'P' THEN - P2.SETTLED_AMT1
WHEN 'M' THEN - P2.SETTLED_AMT1 
ELSE 0 END,0))
FROM BOAC_WK2_PAIRING P2
WHERE BOAC_WK2_PAIRING.FK_BALANCE1 = P2.FK_BALANCE1
AND BOAC_WK2_PAIRING.TS_AND_OBJECT_ID > P2.TS_AND_OBJECT_ID)
WHERE BOAC_WK2_PAIRING.ORIGIN IN ('P','M')
AND EXISTS(SELECT *
FROM BOAC_WK2_PAIRING P2
WHERE BOAC_WK2_PAIRING.FK_BALANCE1 = P2.FK_BALANCE1
AND BOAC_WK2_PAIRING.TS_AND_OBJECT_ID > P2.TS_AND_OBJECT_ID)

/* STEP 3K/7 - CALCULATE NEXT PAIRING TIMESTAMP */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3K/7',NULL)

UPDATE BOAC_STL_PAIRING SET NEXT_PAIRING_TS1 =
(SELECT MIN(PAIRING_TIMESTAMP) FROM BOAC_WK2_PAIRING WK2 
	WHERE BOAC_STL_PAIRING.FK_BALANCE1 = WK2.FK_BALANCE1)
FROM BOAC_WK2_PAIRING WK2
WHERE    BOAC_STL_PAIRING.NEXT_PAIRING_TS1 = CONVERT(DATETIME,'9999-12-31 23:59:59',20)
AND BOAC_STL_PAIRING.FK_BALANCE1 = WK2.FK_BALANCE1

/* STEP 3K/8 - CALCULATE NEXT PAIRING TIMESTAMP */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3K/8',NULL)

CREATE TABLE #WK2(
 	[INTEGER_ID] [INTEGER] IDENTITY(1,1) NOT NULL,
	[FK_BALANCE1] [VARCHAR](32) COLLATE DATABASE_DEFAULT ,
	[TS_AND_OBJECT_ID] [VARCHAR](47) COLLATE DATABASE_DEFAULT ,
	[PAIRING_TIMESTAMP] [DATETIME] )

-- CREATE CLUSTERED INDEX CIDX_#WK2 ON #WK2 (INTEGER_ID);

INSERT INTO #WK2 (FK_BALANCE1,TS_AND_OBJECT_ID,PAIRING_TIMESTAMP)
SELECT FK_BALANCE1, TS_AND_OBJECT_ID, MIN(PAIRING_TIMESTAMP)
FROM BOAC_WK2_PAIRING
GROUP BY FK_BALANCE1, TS_AND_OBJECT_ID

CREATE CLUSTERED INDEX CI ON #WK2 (FK_BALANCE1, TS_AND_OBJECT_ID)

UPDATE P
SET NEXT_PAIRING_TS1=WK2.PAIRING_TIMESTAMP
FROM BOAC_WK2_PAIRING P, #WK2 WK2
WHERE P.FK_BALANCE1=WK2.FK_BALANCE1
AND P.TS_AND_OBJECT_ID < WK2.TS_AND_OBJECT_ID

DROP TABLE #WK2

/* STEP 3K/9 - CALCULATE NEXT PAIRING TIMESTAMP */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3K/9',NULL)

UPDATE BOAC_WK2_PAIRING SET NEXT_PAIRING_TS1 = CONVERT(DATETIME,'9999-12-31 23:59:59',20)
WHERE
NEXT_PAIRING_TS1 IS NULL

/* STEP 3K/10 - COPY BALANCE SPLIT TO LATER PAIRINGS */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3K/10',NULL)

UPDATE BOAC_WK2_PAIRING
SET
        ORIG_PREM_AMT1 = STL.ORIG_PREM_AMT1,
        ORIG_CLAIM_AMT1 = STL.ORIG_CLAIM_AMT1,
        UNALLOC_CASH1 = STL.UNALLOC_CASH1 
FROM BOAC_STL_PAIRING STL WHERE
        BOAC_WK2_PAIRING.FK_BALANCE1 =  STL.FK_BALANCE1
                AND STL.ORIGIN IN ('R','T')
        AND BOAC_WK2_PAIRING.ORIGIN IN ('P','M')

/* STEP 3K/11 - COPY BALANCE SPLIT TO LATER PAIRINGS */
UPDATE BOAC_WK2_PAIRING
SET
        ORIG_PREM_AMT1 = STL.ORIG_PREM_AMT1,
        ORIG_CLAIM_AMT1 = STL.ORIG_CLAIM_AMT1,
        UNALLOC_CASH1 = STL.UNALLOC_CASH1 
FROM        BOAC_WK2_PAIRING STL, BOAC_WK2_PAIRING 
WHERE
        BOAC_WK2_PAIRING.FK_BALANCE1 =  STL.FK_BALANCE1
                AND STL.ORIGIN IN ('R','T')
        AND BOAC_WK2_PAIRING.ORIGIN IN ('P','M')

/* STEP 3K/12 - SPLIT TECHNICAL BALANCE 2 IN PREMIUM RELATED AND CLAIM RELATED */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','3K/12',NULL)

UPDATE BOAC_WK2_PAIRING
SET PREM_AMT2 =
(SELECT
SUM(CASE WHEN E.IS_PAYABLE = 'N' THEN D.DTL_AMT END ) * CASE WHEN BALANCE_AMT2 = 0 THEN 1 ELSE SETTLED_AMT2 / BALANCE_AMT2 END
FROM AC_LEDGER_DETAIL D, ENTRY_CODE E
WHERE BOAC_WK2_PAIRING.FK_BALANCE2 = D.FK_BALANCE 
AND D.FK_ENTRY_CODE = E.OBJECT_ID
AND D.IS_LIQUID = 'Y')
WHERE BALANCE_TYPE_2 = 'T'

UPDATE BOAC_WK2_PAIRING
SET CLAIM_AMT2 =
(SELECT
SUM(CASE WHEN E.IS_PAYABLE = 'Y' THEN D.DTL_AMT END ) * CASE WHEN BALANCE_AMT2 = 0 THEN 1 ELSE SETTLED_AMT2 / BALANCE_AMT2 END 
FROM AC_LEDGER_DETAIL D, ENTRY_CODE E
WHERE BOAC_WK2_PAIRING.FK_BALANCE2 = D.FK_BALANCE 
AND D.FK_ENTRY_CODE = E.OBJECT_ID
AND D.IS_LIQUID = 'Y')
WHERE BALANCE_TYPE_2 = 'T'

UPDATE BOAC_WK2_PAIRING
SET MAX_UW_YEAR2 =
(SELECT
MAX(D.UW_YEAR)
FROM AC_LEDGER_DETAIL D, ENTRY_CODE E
WHERE BOAC_WK2_PAIRING.FK_BALANCE2 = D.FK_BALANCE 
AND D.FK_ENTRY_CODE = E.OBJECT_ID
AND D.IS_LIQUID = 'Y')
WHERE BALANCE_TYPE_2 = 'T'

/*  STEP 4P */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','4P',NULL)

TRUNCATE TABLE BOAC_WK1_PARTY

TRUNCATE TABLE BOAC_WK2_PARTY

/* STEP 4P/1 */
INSERT INTO BOAC_WK1_PARTY
(BC_OBJECT_ID, BP_OBJECT_ID, RP_OBJECT_ID, OBJECT_ID_COMBINED)
(SELECT DISTINCT B1_FK_BASE_COMP, B1_FK_BP, B1_FK_SECOND_BP, B1_FK_BASE_COMP + B1_FK_BP + B1_FK_SECOND_BP
FROM BOAC_WK2_PAIRING)
UNION 
(SELECT DISTINCT B2_FK_BASE_COMP, B2_FK_BP, B2_FK_SECOND_BP, B2_FK_BASE_COMP + B2_FK_BP + B2_FK_SECOND_BP
FROM BOAC_WK2_PAIRING)

/* STEP 4P/2 */

DELETE FROM BOAC_WK1_PARTY
WHERE EXISTS
(SELECT * FROM BOAC_DIM_PARTY T
WHERE BOAC_WK1_PARTY.OBJECT_ID_COMBINED = T.OBJECT_ID_COMBINED)

/* STEP 4P/3 */
INSERT INTO BOAC_WK2_PARTY
(BC_CURR_NAME,  BC_IDENTIFIER, BC_IS_ACTIVE,
BC_IS_INSURED, BC_IS_LEGAL_ENTITY, BC_OBJECT_ID,
BP_CURR_NAME, BP_FK_HOME_COUNTRY, BP_COUNTRY_NAME, BP_FRK_ACCESS_CODE, BP_FRK_STATUS,  BP_IDENTIFIER, BP_IS_ACTIVE,
BP_IS_BASE_COMPANY, BP_OBJECT_ID, BP_SUBCLASS,  BP_C_ISO_ALPHA_3,
RP_CURR_NAME, RP_FK_HOME_COUNTRY, RP_COUNTRY_NAME, RP_FRK_ACCESS_CODE, RP_FRK_STATUS,  RP_IDENTIFIER, RP_IS_ACTIVE,
RP_IS_BASE_COMPANY, RP_IS_INSURED, RP_OBJECT_ID, RP_SUBCLASS, RP_C_ISO_ALPHA_3,
OBJECT_ID_COMBINED)
(SELECT BC.CURR_NAME, BC.IDENTIFIER, BC.IS_ACTIVE,
BC.IS_INSURED, BC.IS_LEGAL_ENTITY, BC.OBJECT_ID,
BP.CURR_NAME, BP.FK_HOME_COUNTRY, BPL.NAME, BP.FRK_ACCESS_CODE, BP.FRK_STATUS, BP.IDENTIFIER, BP.IS_ACTIVE,
BP.IS_BASE_COMPANY, BP.OBJECT_ID, BP.SUBCLASS, BPL.ISO_ALPHA_3,
RP.CURR_NAME, RP.FK_HOME_COUNTRY, RPL.NAME, RP.FRK_ACCESS_CODE, RP.FRK_STATUS, RP.IDENTIFIER, RP.IS_ACTIVE,
RP.IS_BASE_COMPANY, RP.IS_INSURED, RP.OBJECT_ID, RP.SUBCLASS, RPL.ISO_ALPHA_3,
OBJECT_ID_COMBINED
FROM BOAC_WK1_PARTY WK1, PARTY BP, PARTY BC, PARTY RP,
LEGAL_AREA BPL, LEGAL_AREA RPL
WHERE WK1.BP_OBJECT_ID = BP.OBJECT_ID
AND WK1.BC_OBJECT_ID = BC.OBJECT_ID
AND WK1.RP_OBJECT_ID = RP.OBJECT_ID
AND BPL.OBJECT_ID = BP.FK_HOME_COUNTRY
AND RPL.OBJECT_ID = RP.FK_HOME_COUNTRY)

/* STEP 4P/4 */
UPDATE  BOAC_WK2_PARTY
SET BP_NAIC_IDENTIFIER = ID.IDENTIFIER 
FROM PARTY_IDENTIFIER ID
WHERE BOAC_WK2_PARTY.BP_OBJECT_ID=ID.FK_PARTY AND ID.FRK_PARTY_ID_TYPE='NAIC'

/* STEP 4P/5 */
UPDATE  BOAC_WK2_PARTY
SET BP_FED_IDENTIFIER = ID.IDENTIFIER 
FROM PARTY_IDENTIFIER ID
WHERE BOAC_WK2_PARTY.BP_OBJECT_ID=ID.FK_PARTY AND ID.FRK_PARTY_ID_TYPE='FED'

/* STEP 4P/6 */
UPDATE  BOAC_WK2_PARTY
SET RP_NAIC_IDENTIFIER = ID.IDENTIFIER 
FROM PARTY_IDENTIFIER ID
WHERE BOAC_WK2_PARTY.RP_OBJECT_ID=ID.FK_PARTY AND ID.FRK_PARTY_ID_TYPE='NAIC'

/* STEP 4P/7 */
UPDATE  BOAC_WK2_PARTY
SET RP_FED_IDENTIFIER = ID.IDENTIFIER 
FROM PARTY_IDENTIFIER ID
WHERE BOAC_WK2_PARTY.RP_OBJECT_ID=ID.FK_PARTY AND ID.FRK_PARTY_ID_TYPE='FED'

/* STEP 4P/8 */
UPDATE  BOAC_WK2_PARTY
SET BP_FULL_NAME = ID.FULL_NAME 
FROM ORGANISATION_NAME ID
WHERE ID.FK_ORGANISATION = BP_OBJECT_ID AND ID.SUBCLASS = 3

UPDATE  BOAC_WK2_PARTY
SET BP_SHORT_NAME = ID.SHORT_NAME 
FROM ORGANISATION_NAME ID
WHERE ID.FK_ORGANISATION = BP_OBJECT_ID AND ID.SUBCLASS = 3

/* STEP 4P/9 */
UPDATE  BOAC_WK2_PARTY
SET RP_FULL_NAME = ID.FULL_NAME 
FROM ORGANISATION_NAME ID
WHERE ID.FK_ORGANISATION = RP_OBJECT_ID AND ID.SUBCLASS = 3

UPDATE  BOAC_WK2_PARTY
SET RP_SHORT_NAME = ID.SHORT_NAME 
FROM ORGANISATION_NAME ID
WHERE ID.FK_ORGANISATION = RP_OBJECT_ID AND ID.SUBCLASS = 3

/* STEP 4P/10 */
UPDATE  BOAC_WK2_PARTY
SET BP_NAME_STATUS = R.NAME 
FROM REFERENCE_DATA R  
WHERE R.CODE = BP_FRK_STATUS AND R.SUBCLASS = 235

/* STEP 4P/11 */
UPDATE  BOAC_WK2_PARTY
SET RP_NAME_STATUS = R.NAME 
FROM REFERENCE_DATA R  
WHERE R.CODE = RP_FRK_STATUS AND R.SUBCLASS = 235

/* STEP 4P/12 */
INSERT INTO BOAC_DIM_PARTY
(DIM_KEY, BC_CURR_NAME, BC_IDENTIFIER, BC_IS_ACTIVE, BC_IS_INSURED, BC_IS_LEGAL_ENTITY, BC_OBJECT_ID,
BP_CURR_NAME, BP_FULL_NAME, BP_FK_HOME_COUNTRY, BP_NAIC_IDENTIFIER, BP_FED_IDENTIFIER, BP_FRK_ACCESS_CODE,
BP_FRK_STATUS, BP_NAME_ACCESS_CODE, BP_NAME_STATUS, BP_IDENTIFIER, BP_IS_ACTIVE, BP_IS_BASE_COMPANY,
BP_IS_INSURED, BP_OBJECT_ID, BP_SUBCLASS, BP_C_ISO_ALPHA_3, BP_COUNTRY_NAME,
RP_CURR_NAME, RP_FULL_NAME, RP_FK_HOME_COUNTRY, RP_NAIC_IDENTIFIER, RP_FED_IDENTIFIER, RP_FRK_ACCESS_CODE,
RP_FRK_STATUS, RP_NAME_ACCESS_CODE, RP_NAME_STATUS, RP_IDENTIFIER, RP_IS_ACTIVE, RP_IS_BASE_COMPANY,
RP_IS_INSURED, RP_OBJECT_ID, RP_SUBCLASS, RP_C_ISO_ALPHA_3, RP_COUNTRY_NAME, OBJECT_ID_COMBINED,
BP_SHORT_NAME, RP_SHORT_NAME)
(SELECT DIM_KEY + S.MAX_KEY_PARTY,
BC_CURR_NAME, BC_IDENTIFIER, BC_IS_ACTIVE, BC_IS_INSURED, BC_IS_LEGAL_ENTITY, BC_OBJECT_ID,
BP_CURR_NAME, BP_FULL_NAME, BP_FK_HOME_COUNTRY, BP_NAIC_IDENTIFIER, BP_FED_IDENTIFIER, BP_FRK_ACCESS_CODE,
BP_FRK_STATUS, BP_NAME_ACCESS_CODE, BP_NAME_STATUS, BP_IDENTIFIER, BP_IS_ACTIVE, BP_IS_BASE_COMPANY,
BP_IS_INSURED, BP_OBJECT_ID, BP_SUBCLASS, BP_C_ISO_ALPHA_3, BP_COUNTRY_NAME,
RP_CURR_NAME, RP_FULL_NAME, RP_FK_HOME_COUNTRY, RP_NAIC_IDENTIFIER, RP_FED_IDENTIFIER, RP_FRK_ACCESS_CODE,
RP_FRK_STATUS, RP_NAME_ACCESS_CODE, RP_NAME_STATUS, RP_IDENTIFIER, RP_IS_ACTIVE, RP_IS_BASE_COMPANY,
RP_IS_INSURED, RP_OBJECT_ID, RP_SUBCLASS, RP_C_ISO_ALPHA_3, RP_COUNTRY_NAME, OBJECT_ID_COMBINED,
BP_SHORT_NAME, RP_SHORT_NAME
FROM BOAC_WK2_PARTY WK2, BOAC_STATUS S)

/* STEP 4P/13 */
UPDATE BOAC_STATUS
SET MAX_KEY_PARTY = MAX_KEY_PARTY + (SELECT COALESCE(MAX(DIM_KEY),0) FROM BOAC_WK2_PARTY)

/* STEP 5B LOAD OF PAIRINGS */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','5B',NULL)

COMMIT TRAN T1

UPDATE STATISTICS BOAC_WK2_PAIRING WITH FULLSCAN

--UPDATE STATISTICS BOAC_STL_PAIRING WITH FULLSCAN

BEGIN TRAN T2

/* STEP 5B/1 */

UPDATE BOAC_WK2_PAIRING SET PAIRING_NO =  
TMP.CT FROM 
(SELECT P2.FK_BALANCE1 ID,P2.TS_AND_OBJECT_ID, COUNT(P2.FK_BALANCE1) CT FROM BOAC_WK2_PAIRING P2 ,BOAC_WK2_PAIRING P1 
WHERE P1.FK_BALANCE1 = P2.FK_BALANCE1
AND P1.TS_AND_OBJECT_ID > P2.TS_AND_OBJECT_ID
GROUP BY P2.FK_BALANCE1, P2.TS_AND_OBJECT_ID) TMP 
INNER JOIN BOAC_WK2_PAIRING ON (BOAC_WK2_PAIRING.FK_BALANCE1 = TMP.ID 
AND BOAC_WK2_PAIRING.TS_AND_OBJECT_ID > TMP.TS_AND_OBJECT_ID )

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','5B/1',NULL)

COMMIT TRAN T2

BEGIN TRAN T3

/* STEP 5B/2 */

UPDATE BOAC_WK2_PAIRING SET PAIRING_NO =  
BOAC_WK2_PAIRING.PAIRING_NO + TMP.CNT FROM
(SELECT P.FK_BALANCE1, COUNT(P.FK_BALANCE1) CNT 
FROM BOAC_STL_PAIRING P, BOAC_WK2_PAIRING W
WHERE P.FK_BALANCE1 = W.FK_BALANCE1
GROUP BY P.FK_BALANCE1) TMP
WHERE BOAC_WK2_PAIRING.FK_BALANCE1 = TMP.FK_BALANCE1

/* STEP 5B/3 */

/* INCLUDE BAL2 AMTS: TRUNCATE TABLE BOAC_TMP_PRNG_AMT INCLUDE BAL2 AMTS END */

/* INCLUDE BAL2 AMTS: INSERT INTO BOAC_TMP_PRNG_AMT INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: (FK_BALANCE, BAL2_AMOUNT1, BAL2_AMOUNT2, BAL2_AMOUNT3, BAL2_AMOUNT4, BAL2_AMOUNT5, BAL2_AMOUNT6, DUE_DATE) INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: (SELECT  INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: P.FK_BALANCE2, INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: SUM(CASE WHEN ENTRY_CODE LIKE '1%%' THEN F.AMOUNT ELSE 0 END), INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: SUM(CASE WHEN ENTRY_CODE LIKE '2%%' THEN F.AMOUNT ELSE 0 END), INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: SUM(CASE WHEN ENTRY_CODE LIKE '3%%' THEN F.AMOUNT ELSE 0 END), INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: SUM(CASE WHEN ENTRY_CODE LIKE '4%%' THEN F.AMOUNT ELSE 0 END), INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: SUM(CASE WHEN ENTRY_CODE LIKE '5%%' THEN F.AMOUNT ELSE 0 END), INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: SUM(CASE WHEN ENTRY_CODE LIKE '6%%' THEN F.AMOUNT ELSE 0 END), INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: MAX(F.DUE_DATE) INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: FROM BOAC_PC_FACT F, BOAC_WK2_PAIRING P INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: WHERE P.FK_BALANCE2 = F.FK_BALANCE INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: AND P.BALANCE_TYPE_2 = 'T' INCLUDE BAL2 AMTS END */
/* INCLUDE BAL2 AMTS: GROUP BY P.FK_BALANCE2) INCLUDE BAL2 AMTS END */

/* STEP 5B/4 */

IF @V_LOGLEVEL > 2
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
VALUES (GETDATE(),'BOAC005','CHECKPOINT','5B/4',NULL)

COMMIT TRAN T3

BEGIN TRAN T4

INSERT INTO BOAC_STL_PAIRING
(ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY, FK_EXCH_DIFF_CURR,
FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD, FRK_SICSNT_SYSTEM, OBJECT_ID, PAIRING_DATE,
PAIRING_TIMESTAMP, NEXT_PAIRING_TS1, SETTLED_AMT1, SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT,
UNSETTLED_AMT1, ORIG_PREM_AMT1, ORIG_CLAIM_AMT1, UNALLOC_CASH1, BALANCE_AMT2, ORIGIN, BALANCE_TYPE_1,
BALANCE_TYPE_2, BUSINESS_ID2, WORKSHEET_ID2, TYPE_OF_BUS2, LEVEL_OF_BUS2, BALANCE_CURR2,
DIM_KEY_PARTY1, DIM_KEY_PARTY2, PAIRING_NO, SETTLMENT_IND1, TS_AND_OBJECT_ID, PREM_AMT2, CLAIM_AMT2, MAX_UW_YEAR2
/* INCLUDE BAL2 AMTS: ,DUE_DATE2,BAL2_AMOUNT1,BAL2_AMOUNT2,BAL2_AMOUNT3,BAL2_AMOUNT4,BAL2_AMOUNT5,BAL2_AMOUNT6 INCLUDE BAL2 AMTS END */
)
SELECT
ANUL_TIMESTAMP, BOOKING_YEAR, EXCH_DIFF_AMT, FK_BALANCE1, FK_BALANCE2, FK_CREATED_BY, FK_EXCH_DIFF_CURR,
FK_UNSETTLED_BY, FK_WRITEOFF_CURR, FRK_BOOKING_PERIOD, FRK_SICSNT_SYSTEM, OBJECT_ID, PAIRING_DATE,
PAIRING_TIMESTAMP, NEXT_PAIRING_TS1, SETTLED_AMT1, SETTLED_AMT2, UNSETTLED_DATE, WRITEOFF_AMT,
UNSETTLED_AMT1, ORIG_PREM_AMT1, ORIG_CLAIM_AMT1, UNALLOC_CASH1, BALANCE_AMT2, ORIGIN, BALANCE_TYPE_1,
BALANCE_TYPE_2, BUSINESS_ID2, WORKSHEET_ID2, TYPE_OF_BUS2, LEVEL_OF_BUS2, BALANCE_CURR2,
P1.DIM_KEY, P2.DIM_KEY, PAIRING_NO,
CASE UNSETTLED_AMT1
WHEN 0 THEN 'S'
WHEN ISNULL(ORIG_PREM_AMT1,0)+ISNULL(ORIG_CLAIM_AMT1,0)+ISNULL(UNALLOC_CASH1,0) THEN 'U'
ELSE 'P' END, TS_AND_OBJECT_ID, PREM_AMT2, CLAIM_AMT2, MAX_UW_YEAR2
/* INCLUDE BAL2 AMTS: ,AMT.DUE_DATE,AMT.BAL2_AMOUNT1,AMT.BAL2_AMOUNT2,AMT.BAL2_AMOUNT3,AMT.BAL2_AMOUNT4,AMT.BAL2_AMOUNT5,AMT.BAL2_AMOUNT6 INCLUDE BAL2 AMTS END */
FROM BOAC_DIM_PARTY P1, BOAC_DIM_PARTY P2, BOAC_WK2_PAIRING F
/* INCLUDE BAL2 AMTS: LEFT OUTER JOIN BOAC_TMP_PRNG_AMT AMT ON (F.FK_BALANCE2 = AMT.FK_BALANCE) INCLUDE BAL2 AMTS END */
WHERE 
RTRIM(ISNULL(F.B1_FK_BASE_COMP,'DU')) + RTRIM(ISNULL(F.B1_FK_BP,'MM')) + RTRIM(ISNULL(F.B1_FK_SECOND_BP,'Y'))  
+ REPLICATE(' ', 96 - DATALENGTH(RTRIM(ISNULL(F.B1_FK_BASE_COMP,'DU')) + RTRIM(ISNULL(F.B1_FK_BP,'MM')) + RTRIM(ISNULL(F.B1_FK_SECOND_BP,'Y'))))
 = P1.OBJECT_ID_COMBINED
AND
RTRIM(ISNULL(F.B2_FK_BASE_COMP,'DU')) + RTRIM(ISNULL(F.B2_FK_BP,'MM')) + RTRIM(ISNULL(F.B2_FK_SECOND_BP,'Y'))  
+ REPLICATE(' ', 96 - DATALENGTH(RTRIM(ISNULL(F.B2_FK_BASE_COMP,'DU')) + RTRIM(ISNULL(F.B2_FK_BP,'MM')) + RTRIM(ISNULL(F.B2_FK_SECOND_BP,'Y'))))
 = P2.OBJECT_ID_COMBINED

COMMIT TRAN T4

UPDATE STATISTICS BOAC_STL_PAIRING WITH FULLSCAN

IF @V_LOGLEVEL > 0 
INSERT INTO BO_DM_ACTIVITY_LOG (  ACTIVITY_TIMESTAMP, SCRIPT_ID, ACTION, DESCRIPTION, DM_BATCH_NO)
SELECT GETDATE(),'BOAC005','SCRIPT END','',CURRENT_BATCH 
FROM BOAC_STATUS

/* END SCRIPT */



GO

